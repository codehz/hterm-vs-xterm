{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/hterm-esm/index.mjs","utils.ts","hterm-test.ts"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","lib","initCallbacks_","registerInit","callback","init","onInit","logFunction","ary","initNext","rec","shift","assert","condition","window","chai","notNull","value","notUndefined","undefined","polyfill","stringPadStart","String","padStart","targetLength","padString","repeat","slice","stringPadEnd","padEnd","object","reduce","Function","bind","isEnumerable","Object","propertyIsEnumerable","values","O","Reflect","ownKeys","v","k","entries","promiseFinally","speciesConstructor","defaultConstructor","TypeError","C","constructor","S","Symbol","species","defineProperty","Promise","configurable","writable","finallyFn","onFinally","promise","then","x","resolve","finally","BlobArrayBuffer","reject","reader","FileReader","onload","result","onabort","onerror","readAsArrayBuffer","Blob","arrayBuffer","BlobText","readAsText","text","concatTyped","arrays","resultLength","pos","set","compare","a","b","codec","codeUnitArrayToString","ret","fromCharCode","stringToCodeUnitArray","str","Uint8Array","charCodeAt","colors","re_","hex16","hex24","rgb","RegExp","replace","rgba","rgbx","hsl","hsla","hslx","x11rgb","rgbToX11","scale","Math","min","toString","f","zpad","match","x11HexToCSS","startsWith","substr","indexOf","size","r","g","arrayToRGBA","map","norm16","parseInt","x11ToCSS","splice","round","nameToRGB","hexToRGB","hex","test","join","val","index","rgbToHex","crackRGB","crackHSL","color","from","console","error","hslxArrayToRgbaArray","hue","sat","light","hueToRgb","t1","t2","hslToRGB","rgbxArrayToHslaArray","max","spread","l","h","abs","rgbToHsl","s","normalizeCSS","def","alpha","setAlpha","mix","base","tint","percent","ary1","ary2","diff","colorNames","toLowerCase","stockColorPalette","colorPalette","replaceVars","vars","fn","varname","rv","functions","encodeURI","encodeURIComponent","escapeHTML","m","getURL","path","chromeSupported","chrome","runtime","clamp","number","getStack","ignoreFrames","count","stackArray","stack","split","stackObject","smartFloorDivide","numerator","denominator","ceiling","ceil","floor","randomInt","random","getOs","browser","getPlatformInfo","info","os","navigator","userAgent","ua","includes","getChromeMilestone","NaN","lastError","defaultMsg","message","openWindow","url","features","win","open","opener","location","i18n","browser_","browserSupported","getAcceptLanguages","language","getMessage","msgname","substitutions","fallback","replaceReferences","msg","MessageManager","languages","useCrlf","languages_","el","messages_","Messages","addMessages","defs","key","placeholders","toUpperCase","content","findAndLoadMessages","pattern","lang","loadMessages","warn","xhr","XMLHttpRequest","JSON","parse","responseText","send","get","processI18nAttributes","node","nodes","querySelectorAll","processI18nAttribute","thunk","getAttribute","ex","tagName","id","attr","textContent","setAttribute","PreferenceManager","storage","prefix","storageObserver_","onStorageChange_","isActive_","activate","trace","endsWith","isImportingJson_","prefRecords_","globalObservers_","childFactories_","childLists_","DEFAULT_VALUE","Record","defaultValue","currentValue","observers","addObserver","observer","removeObserver","stringify","deactivate","readStorage","opt_callback","pendingChildren","onChildComplete","keys","log","getItems","items","prefixLength","needSync","syncChildList","definePreference","opt_onChange","record","changeDefault","definePreferences","defaults","defineChildren","listName","childFactory","onChildListChange_","addObservers","global","notifyAll","notifyChange_","createChild","opt_hint","opt_id","ids","childManager","resetAll","removeChild","getChild","opt_default","childList","onChildStorage","currentIds","oldIds","managerIndex","reset","removeItem","changed","removeItems","forEach","newValue","changeDefaults","onComplete","saveToStorage","oldValue","setItem","getBoolean","getNumber","getString","exportAsJson","childIds","json","importFromJson","pendingWrites","onWriteStorage","childPrefManager","lastIndexOf","resource","resources_","ResourceRecord","add","type","data","getData","getDataUrl","Storage","clear","getItem","setItems","obj","Chrome","storage_","observers_","onChanged","onChanged_","changes","areaname","err","remove","Local","localStorage","addEventListener","onStorage_","storageArea","prevValue","curValue","o","Memory","TerminalPrivate","prefValue_","terminalPrivate","getSettings","settings","onSettingsChanged","onSettingsChanged_","hasOwnProperty","setPref_","setSettings","scope","FastTextEncoder","utfLabel","RangeError","FastTextDecoder","options","fatal","encode","string","stream","at","tlen","target","extra","update","decode","buffer","bytes","out","byte1","byte2","byte3","codepoint","Intl","GRANULARITIES","RULES","grapheme","word","letter","sentence","terminator","separator","line","hard","soft","fixBreakType","granularity","ruleStatus","none","kana","ideo","unknown","$SegmentIterator$","breaks","_cur","_type","_breaks","iterator","next","done","breakType","segment","following","preceding","position","initial","Segmenter","locale","_locale","isArray","assign","_granularity","vbi","v8BreakIterator","adoptText","last","current","rules","found","rule","re","wc","nulWidth","controlWidth","regardCjkAmbiguous","cjkAmbiguousWidth","combining","ambiguous","unambiguous","binaryTableSearch_","ucs","table","mid","isSpace","isCjkAmbiguous","charWidth","charWidthRegardAmbiguous","charWidthDisregardAmbiguous","strWidth","width","codePoint","codePointAt","start","opt_width","startIndex","endIndex","substring","end","hterm","windowType","zoomWarningMessage","notifyCopyMessage","desktopNotificationTitle","messageManager","initOs","initMessageManager","catch","onWindow","defaultStorage","sync","isPackagedApp","getManifest","manifest","app","background","tabs","getCurrent","onTab","tab","windows","windowId","getClientSize","element","getBoundingClientRect","getClientWidth","getClientHeight","height","copySelectionToClipboard","document","requestPermission","execCommand","copySource","createElement","style","cssText","body","appendChild","selection","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","selectAllChildren","firefoxException","extend","collapse","parentNode","permissions","query","status","checkState","state","onchange","clipboard","writeText","pasteFromClipboard","notify","params","curr","icon","n","Notification","onclick","focus","close","openUrl","openTab","Size","resize","clone","setTo","that","equals","RowCol","row","column","opt_overflow","overflow","move","AccessibilityReader","div","document_","ownerDocument","liveRegion","accessibilityEnabled","liveElement_","assertiveLiveElement_","queue_","nextReadTimer_","cursorIsChanging_","cursorChangeQueue_","lastCursorRowString_","lastCursorRow_","lastCursorColumn_","hasUserGesture","DELAY","setAccessibilityEnabled","enabled","decorate","doc","handler","beforeCursorChange","cursorRowString","cursorRow","cursorColumn","afterCursorChange","announceAction_","announce","padding","addToLiveRegion_","assertiveAnnounce","trim","newLine","cursorDeleted","lengthOfCurrentRow","numCharsDeleted","lengthOfEndOfString","endOfLastRowString","deleted","ContextMenu","element_","menu_","SEPARATOR","setDocument","regenerate_","hide","firstChild","action","menuitem","innerHTML","className","innerText","preventDefault","show","terminal","backgroundColor","getBackgroundColor","getForegroundColor","fontSize","getFontSize","fontFamily","getFontFamily","top","clientY","left","clientX","docSize","display","eleSize","minY","minX","Frame","opt_options","terminal_","div_","iframe_","container_","messageChannel_","onMessage_","sendTerminalInfo_","postMessage","port1","onmessage","onMessage","onLoad","onLoad_","MessageChannel","contentWindow","messagePort","port2","acceptLanguages","foregroundColor","cursorColor","getCursorColor","baseURL","onCloseClicked_","onClose","container","iframe","Keyboard","keyboardElement_","handlers_","onFocusOut_","onKeyDown_","onKeyPress_","onKeyUp_","onTextInput_","keyMap","KeyMap","bindings","Bindings","altGrMode","shiftInsertPaste","homeKeysScroll","pageKeysScroll","ctrlPlusMinusZeroZoom","ctrlCCopy","ctrlVPaste","applicationKeypad","applicationCursor","backspaceSendsBackspace","metaSendsEscape","passMetaV","altSendsWhat","altIsMeta","altBackspaceIsMetaBackspace","altKeyPressed","mediaKeysAreFKeys","previousAltSendsWhat_","KeyActions","CANCEL","DEFAULT","PASS","STRIP","KeyAction","installKeyboard","removeEventListener","uninstallKeyboard","onVTKeystroke","which","ch","ctrlKey","metaKey","keyCode","altKey","charCode","shiftKey","stopPropagation","preventChromeAppNonCtrlShiftDefault_","keyDef","keyDefs","addKeyDef","resolvedActionType","self","getAction","control","alt","meta","isPrintable","keyCap","keyboard","maskShiftKey","keyDown","ctrl","getBinding","normal","imod","mod","code","KeyDown","KeyBindingFunction","KeyBindingAction","KeyBinding","bindings_","addBinding_","keyPattern","list","matchKeyPattern","sort","KeyPattern","sortCompare","addBinding","p","sequence","Parser","parseKeySequence","isComplete","parseKeyAction","addBindings","matchKeyDown","KeyDef","KeyDefFunction","KeyDefAction","keyDefFn","ac","bs","sh","ctl","c","med","keycapSC","keycapEP","keycapMU","SS3","CSI","onKeyInsert_","onKeyHome_","altey","scrollHome","onKeyEnd_","scrollEnd","onKeyPageUp_","scrollPageUp","onKeyDel_","onKeyPageDown_","scrollPageDown","onKeyArrowUp_","scrollLineUp","onKeyArrowDown_","scrollLineDown","onClear_","wipeContents","onF11_","onCtrlNum_","passCtrlNumber","onAltNum_","passAltNumber","onMetaNum_","passMetaNumber","onCtrlC_","getDocument","isCollapsed","clearSelectionAfterCopy","collapseToEnd","onCtrlN_","href","innerWidth","innerHeight","onCtrlV_","paste","onMetaN_","outerWidth","outerHeight","onMetaC_","onMetaV_","onZoom_","getZoomFactor","cap","setFontSize","spec","wildcardCount","modifiers","match_","exactMatch","modValue","Options","opt_copy","wraparound","reverseWraparound","originMode","autoCarriageReturn","cursorVisible","cursorBlink","insertMode","reverseVideo","bracketedPaste","source","opt_pos","identifiers","modifierKeys","skipSpace","token","parseToken","ucValue","keyCodes","advance","actions","peekString","peekIdentifier","peekInteger","parseIdentifier","parseString","parseInteger","parsePattern","quote","lastIndex","exec","parseEscape","opt_expect","SHIFT","CTRL","CONTROL","ALT","META","ESCAPE","ESC","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","BACKSPACE","BKSP","BS","TAB","Q","W","E","R","T","Y","U","I","P","CAPS_LOCK","CAPSLOCK","CAPS","A","D","F","G","H","J","K","L","ENTER","ENT","RETURN","RET","Z","X","V","B","N","M","SPACE","SP","PRINT_SCREEN","PRTSC","SCROLL_LOCK","SCRLK","BREAK","BRK","INSERT","INS","HOME","PAGE_UP","PGUP","DELETE","DEL","END","PAGE_DOWN","PGDOWN","PGDN","UP","DOWN","RIGHT","LEFT","NUMLOCK","KP0","KP1","KP2","KP3","KP4","KP5","KP6","KP7","KP8","KP9","KP_PLUS","KP_ADD","KP_MINUS","KP_SUBTRACT","KP_STAR","KP_MULTIPLY","KP_DIVIDE","KP_DECIMAL","KP_PERIOD","NAVIGATE_BACK","NAVIGATE_FORWARD","RELOAD","FULL_SCREEN","WINDOW_OVERVIEW","BRIGHTNESS_UP","BRIGHTNESS_DOWN","scrollToTop","scrollToBottom","clearScreen","clearHome","clearScrollback","clearTerminal","fullReset","softReset","profileId","prefix_","defaultPreferences","entry","listProfiles","profiles","Categories","Appearance","CopyPaste","Sounds","Scrolling","Encoding","Extensions","Miscellaneous","categoryDefinitions","definePref_","category","help","create","PubSub","addBehavior","pubsub","subscribe","subject","unsubscribe","publish","opt_lastCallback","notifyList","Screen","columnCount","rowsArray","columnCount_","textAttributes","TextAttributes","cursorPosition","cursorState_","CursorState","cursorRowNode_","cursorNode_","cursorOffset_","wordBreakMatchLeft","wordBreakMatchRight","wordBreakMatchMiddle","getSize","getHeight","getWidth","setColumnCount","setCursorPosition","shiftRow","shiftRows","unshiftRow","unshiftRows","rows","unshift","popRow","popRows","pushRow","pushRows","insertRow","insertRows","removeRow","removeRows","invalidateCursorPosition","clearCursorRow","removeAttribute","isDefault","inverse","syncColors","createContainer","commitLineOverflow","rowNode","createTextNode","currentColumn","offset","nodeWidth","nextSibling","syncSelectionCaret","firefoxIgnoredException","splitNode_","afterNode","cloneNode","nodeSubstr","insertBefore","maybeClipCurrentRow","insertString","wcwidth","cursorNode","cursorNodeText","reverseOffset","ws","underline","strikethrough","wcNode","asciiNode","tileData","nodeType","Node","TEXT_NODE","tileNode","textDecoration","textDecorationStyle","textDecorationLine","wsNode","matchesContainer","previousSibling","newNode","overwriteString","maxLength","deleteChars","currentCursorColumn","startLength","endLength","spaceNode","nextNode","emptyNode","getLineStartRow_","hasAttribute","getLineText_","rowText","rowOrNull","getXRowAncestor_","nodeOrNull","nodeName","getPositionWithOverflow_","ancestorRow","getPositionWithinRow_","childNodes","currentNode","getNodeAndOffsetWithOverflow_","getNodeAndOffsetWithinRow_","nodeTextWidth","setRange_","range","startNodeAndOffset","endNodeAndOffset","setStart","setEnd","expandSelectionWithWordBreakMatches_","leftMatch","rightMatch","insideMatch","getRangeAt","rowElement","startContainer","startPosition","startOffset","endPosition","endContainer","endOffset","lineUpToRange","leftRegularExpression","expandedStart","search","lineFromRange","rightRegularExpression","expandedEnd","addRange","expandSelection","expandSelectionForUrl","saveCursorAndState","vt","save","restoreCursorAndState","restore","screen","screen_","cursor","GL","GR","G0","G1","G2","G3","saveCursor","restoreCursor","tattrs","RowProvider","getRowCount","getRowNode","ScrollPort","rowProvider","rowProvider_","characterSize","ruler_","Selection","currentRowNodeCache_","previousRowNodeCache_","lastScreenWidth_","lastScreenHeight_","selectionEnabled_","lastRowCount_","scrollWheelMultiplier_","lastTouch_","isScrolledEnd","currentScrollbarWidthPx","pasteOnDrop","timeouts_","ariaHiddenSelectionRows_","DEBUG_","scrollPort","scrollPort_","startRow","endRow","isMultiline","findFirstChild","parent","childAry","anchorFirst","anchorRow","startNode","focusRow","endNode","focusFirst","accessibilityReader_","rowIndex","firstNode","paintIframeContents_","onResize_","contentDocument","metaCharset","head","paddingTop","paddingBottom","userCssLink_","userCssText_","onScroll_","onScrollWheel_","onTouch_","onCopy_","onPaste_","onDragAndDrop_","onBodyKeyDown_","scrollButtonHeight","scrollButtonStyle","scrollUpButton_","scrollDownButton_","bottom","allowScrollButtonsToDisplay_","selectedElement","rowNodes_","topSelectBag_","bottomSelectBag_","topFold_","bottomFold_","scrollArea_","xmlns","svg_","createElementNS","pasteTarget_","contentEditable","handlePasteTargetTextInput_","setAccessibilityReader","accessibilityReader","getTopRowIndex","scrollRowToTop","visibleRowCount","assertiveAnnounce_","setFontFamily","opt_smoothing","webkitFontSmoothing","syncCharacterSize","setUserCssUrl","setUserCssText","blur","setForegroundColor","setBackgroundColor","setBackgroundImage","image","backgroundImage","setBackgroundSize","backgroundSize","setBackgroundPosition","backgroundPosition","setCtrlVPaste","setPasteOnDrop","getScreenSize","getScreenWidth","getScreenHeight","getScreenNode","resetCache","setRowProvider","scheduleRedraw","invalidate","parentElement","topRowIndex","bottomRowIndex","getBottomRowIndex","drawVisibleRows_","scheduleInvalidate","px","measureCharacterSize","opt_weight","rulerSpan_","rulerBaseline_","fontWeight","rulerSize","zoomFactor","currentScale","clientWidth","syncScrollHeight","syncRowNodesDimensions_","topRow","bottomRow","percentScrolled","currentScreenContent","fetchRowNode_","screenSize","visibleRowsHeight","visibleRowTopMargin","visibleRowBottomMargin","marginBottom","topFoldOffset","offsetLeft","offsetTop","redraw","redraw_","updateScrollButtonState_","setButton","button","disabled","opacity","resetSelectBags_","drawTopFold_","drawBottomFold_","ariaHideOffscreenSelectionRows_","lastChild","removeUntilNode","targetNode","deadNode","selectionStartRow","selectionEndRow","bottomFold","targetDrawCount","drawCount","hiddenRows","pop","checkRow","cacheRowNode_","selectAll","firstRow","lastRowIndex","lastRow","getScrollMax_","scrollTop","scrollMax","scrollRowToBottom","onScrollWheel","defaultPrevented","cancelable","delta","scrollWheelDelta","y","deltaMode","WheelEvent","DOM_DELTA_PIXEL","deltaX","deltaY","DOM_DELTA_LINE","DOM_DELTA_PAGE","onTouch","scrubTouch","touch","t","identifier","focused","changedTouches","onCopy","endBackfillIndex","startBackfillIndex","getRowsText","format","dataTransfer","types","setScrollbarVisible","overflowY","setScrollWheelMoveMultipler","multiplier","Terminal","profileId_","prefs_","primaryScreen_","alternateScreen_","onScrollportFocus_","scrollbackRows_","tabStops_","defaultTabStops","vtScrollTop_","vtScrollBottom_","cursorShape_","cursorShape","BLOCK","cursorBlinkCycle_","cursorBlinkPause_","myOnCursorBlink_","onCursorBlink_","backgroundColor_","foregroundColor_","scrollOnOutput_","scrollOnKeystroke_","scrollWheelArrowKeys_","defeatMouseReports_","setAutomaticMouseHiding","mouseHideDelay_","bellAudio_","contextMenu","bellNotificationList_","bellSquelchTimeout_","desktopNotificationBell_","savedOptions_","options_","VT","io","IO","enableMouseDragScroll","copyOnSelect","mouseRightClickPaste","mousePasteButton","useDefaultWindowCopy","realizeSize_","setDefaultTabStops","allowImagesInline","reportFocus","setProfile","onTerminalReady","BEAM","UNDERLINE","tabWidth","permission","characterMaps","setOverrides","setCursorBlink","setCursorShape","setCursorColor","isNaN","resetColorPalette","enable8BitControl","syncBoldSafeState","enableBoldAsBright","setTextBlink","enableClipboardWrite","enableDec12","enableCsiJ3","syncFontFamily","syncMousePasteButton","characterEncoding","setEncoding","getPrefs","setBracketedPaste","setCssVar","getCssVar","setSelectionEnabled","setDefaults","runCommandClass","commandClass","commandName","environment","command","onExit","dispatchEvent","CustomEvent","isPrimaryScreen","opt_prefix","documentElement","setProperty","getPropertyValue","enableBold","normalSize","boldSize","isBoldSafe","syncMouseStyle","mouseReport","MOUSE_REPORT_DISABLED","getTextAttributes","setTextAttributes","setWindowTitle","clearCursorOverflow","both","shape","restyleCursor_","getCursorShape","setWidth","scheduleSyncCursorPosition_","setHeight","rowCount","realizeWidth_","realizeHeight_","onTerminalResize_","deltaColumns","deltaRows","getRowText","scrollbackCount","appendRows_","setVTScrollRegion","renumberRows_","syncCursorPosition_","clearAllTabStops","resetScreen","setCursorVisible","forwardTabStop","setCursorColumn","backwardTabStop","setTabStop","clearTabStopAtCursor","opt_start","w","interpret","charset","characterSet","setupScrollPort_","oncontextmenu","onMouse","onMouse_","screenNode","onKeyboardActivity_","onFocusChange_","scrollBlockerNode_","event","setReverseVideo","screenIndex","extraRows","scheduleScrollDown_","setAbsoluteCursorPosition","moveRows_","fromIndex","toIndex","opt_screen","print","didOverflow","tokens","splitWidecharString","wcStrWidth","scrollBottom","getVTScrollTop","getVTScrollBottom","dueToOverflow","cursorAtEndOfScreen","vtScrollUp","lineFeed","formFeed","reverseLineFeed","currentRow","insertLines","setAbsoluteCursorRow","eraseToLeft","eraseToRight","opt_count","maxCount","DEFAULT_COLOR","eraseLine","eraseAbove","eraseBelow","fill","col","moveCount","deleteLines","moveStart","insertSpace","vtScrollDown","setRelativeCursorPosition","getCursorColumn","getCursorRow","scheduleRedraw_","scrollDown","cursorUp","cursorDown","minHeight","maxHeight","cursorLeft","newRow","newColumn","cursorRight","ringBell","play","bellSequelchTimeout_","hasFocus","closeBellNotifications_","setOriginMode","setInsertMode","setAutoCarriageReturn","setWraparound","setReverseWraparound","setAlternateMode","pauseCursorBlink_","cursorBlinkPause","cursorRowIndex","forceSyncSelection","cursorColumnIndex","cursorLineText","borderBottomStyle","borderLeftStyle","syncCursor","showZoomWarning_","zoomWarningNode_","showOverlay","opt_timeout","overlayNode_","divSize","overlaySize","overlayTimeout_","hideOverlay","copyStringToClipboard","displayImage","onError","uri","blob","ext","span","borderWidth","borderStyle","marginLeft","inline","sendString","img","src","URL","createObjectURL","objectFit","preserveAspectRatio","maxWidth","clientHeight","parseDim","dim","maxDim","cssVar","padRows","textAlign","align","revokeObjectURL","download","click","getSelectionText","openSelectedUrl_","mouseHideWhileTyping_","processedByTerminalHandler_","reportMouseEvents","terminalRow","terminalColumn","engaged","deltaToArrows","distance","charSize","arrowPos","arrowNeg","cells","filter","isNewSize","wasScrolledEnd","previousIO_","buffered_","textDecoder_","TextDecoder","createFrame","setTerminalProfile","profileName","keyboardCaptured_","flush","onTerminalResize","writeUTF8","u8","writelnUTF8","writeUTF16","println","writelnUTF16","foregroundSource","SRC_DEFAULT","backgroundSource","underlineSource","foreground","underlineColor","defaultForeground","defaultBackground","bold","faint","italic","blink","invisible","uriId","resetColor","opt_textContent","classes","fontStyle","blinkNode","textDecorationColor","getDefaultColor","defaultColor","getBrightIndex","Number","isInteger","colorFromSource","colorToMakeFaint","swp","containersMatch","obj1","obj2","containerIsDefault","style1","style2","nodeSubstring","asciiRegex","segmenter","it","isAscii","isWideChar","prev","onTerminalMouse_","mouseCoordinates","MOUSE_COORDINATES_X10","lastMouseDragResponse_","parseState_","ParseState","parseUnknown_","leadingModifier_","trailingModifier_","allowColumnWidthChanges_","oscTimeLimit_","warnUnimplemented","CharacterMaps","getMap","codingSystemUtf8_","codingSystemLocked_","cc1Pattern_","updateEncodingState_","MOUSE_REPORT_PRESS","MOUSE_REPORT_CLICK","MOUSE_REPORT_DRAG","MOUSE_COORDINATES_UTF8","MOUSE_COORDINATES_SGR","defaultFunction","opt_buf","buf","func","subargs","resetParseFunction","resetBuf","resetArguments","opt_arg_zero","argstr","iarg","argnum","argHasSubargs","argSetSubargs","peekRemainingBuf","peekChar","consumeChar","response","limit","buttons","encoding","cc1","CC1","parseState","nextControl","dispatch","parseCSI_","finishParsing","parseUntilStringTerminator_","bufInserted","Date","nextTerminator","foundTerminator","abortReason","ignore","supportsSubargs","setANSIMode","setDECMode","scrollOnOutput","scrollOnKeystroke","OSC","VT52","parseESC","parseOSC","pairCount","responseArray","pairNumber","colorIndex","colorValue","param","idx","attrs","colorX11","atob","decoder","ele","kv","queued","urxvtMod","arg","parseSgrExtendedColors","usedSubargs","skipCount","uarg","CharacterMap","description","glmap","glmapBase_","sync_","opt_glmap","glmap_","glre_","glchars","maps_","DefaultMaps","mapsBase_","addMap","maps"],"mappings":"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UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAGvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,U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,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAS,OAAU,CAAC,MAAS,OAChD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,SAKlC7d,EAAIwd,GAAGM,UAAY,CACf,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAAS,CAAC,IAAQ,KAC7C,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAA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","file":"hterm-test.0531ab64.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// This file was generated by libdot/bin/concat.sh.\n// It has been marked read-only for your safety.  Rather than\n// edit it directly, please modify one of these source files.\n//\n// libdot/js/lib.js\n// libdot/js/lib_polyfill.js\n// libdot/js/lib_array.js\n// libdot/js/lib_codec.js\n// libdot/js/lib_colors.js\n// libdot/js/lib_f.js\n// libdot/js/lib_i18n.js\n// libdot/js/lib_message_manager.js\n// libdot/js/lib_preference_manager.js\n// libdot/js/lib_resource.js\n// libdot/js/lib_storage.js\n// libdot/js/lib_storage_chrome.js\n// libdot/js/lib_storage_local.js\n// libdot/js/lib_storage_memory.js\n// libdot/js/lib_storage_terminal_private.js\n// libdot/third_party/fast-text-encoding/text.js\n// libdot/third_party/intl-segmenter/intl-segmenter.js\n// libdot/third_party/wcwidth/lib_wc.js\n// hterm/js/hterm.js\n// hterm/js/hterm_accessibility_reader.js\n// hterm/js/hterm_contextmenu.js\n// hterm/js/hterm_frame.js\n// hterm/js/hterm_keyboard.js\n// hterm/js/hterm_keyboard_bindings.js\n// hterm/js/hterm_keyboard_keymap.js\n// hterm/js/hterm_keyboard_keypattern.js\n// hterm/js/hterm_options.js\n// hterm/js/hterm_parser.js\n// hterm/js/hterm_parser_identifiers.js\n// hterm/js/hterm_preference_manager.js\n// hterm/js/hterm_pubsub.js\n// hterm/js/hterm_screen.js\n// hterm/js/hterm_scrollport.js\n// hterm/js/hterm_terminal.js\n// hterm/js/hterm_terminal_io.js\n// hterm/js/hterm_text_attributes.js\n// hterm/js/hterm_vt.js\n// hterm/js/hterm_vt_character_map.js\n// hterm/audio/bell.ogg\n// hterm/images/icon-96.png\n\n'use strict';\n\n// SOURCE FILE: libdot/js/lib.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const lib = {};\n\n/**\n * List of functions that need to be invoked during library initialization.\n *\n * Each element in the initCallbacks_ array is itself a two-element array.\n * Element 0 is a short string describing the owner of the init routine, useful\n * for debugging.  Element 1 is the callback function.\n */\nlib.initCallbacks_ = [];\n\n/**\n * Register an initialization function.\n *\n * The initialization functions are invoked in registration order when\n * lib.init() is invoked.  Each function will receive a single parameter, which\n * is a function to be invoked when it completes its part of the initialization.\n *\n * @param {string} name A short descriptive name of the init routine useful for\n *     debugging.\n * @param {function(function())} callback The initialization function to\n *     register.\n * @return {function(function())} The callback parameter.\n */\nlib.registerInit = function(name, callback) {\n  lib.initCallbacks_.push([name, callback]);\n  return callback;\n};\n\n/**\n * Initialize the library.\n *\n * This will ensure that all registered runtime dependencies are met, and\n * invoke any registered initialization functions.\n *\n * Initialization is asynchronous.  The library is not ready for use until\n * the onInit function is invoked.\n *\n * @param {function()} onInit The function to invoke when initialization is\n *     complete.\n * @param {function(*)=} logFunction An optional function to send initialization\n *     related log messages to.\n */\nlib.init = function(onInit, logFunction) {\n  var ary = lib.initCallbacks_;\n\n  var initNext = function() {\n    if (ary.length) {\n      var rec = ary.shift();\n      if (logFunction) {\n        logFunction(`init: ${rec[0]}`);\n      }\n      rec[1](initNext);\n    } else {\n      onInit();\n    }\n  };\n\n  if (typeof onInit != 'function')\n    throw new Error('Missing or invalid argument: onInit');\n\n  setTimeout(initNext, 0);\n};\n\n/**\n * Verify |condition| is truthy else throw Error.\n *\n * This function is primarily for satisfying the JS compiler and should be\n * used only when you are certain that your condition is true.  The function is\n * designed to have a version that throws Errors in tests if condition fails,\n * and a nop version for production code.  It configures itself the first time\n * it runs.\n *\n * @param {boolean} condition A condition to check.\n * @closurePrimitive {asserts.truthy}\n */\nlib.assert = function(condition) {\n  if (window.chai) {\n    lib.assert = window.chai.assert;\n  } else {\n    lib.assert = function(condition) {};\n  }\n  lib.assert(condition);\n};\n\n/**\n * Verify |value| is not null and return |value| if so, else throw Error.\n * See lib.assert.\n *\n * @template T\n * @param {T} value A value to check for null.\n * @return {T} A non-null |value|.\n * @closurePrimitive {asserts.truthy}\n */\nlib.notNull = function(value) {\n  lib.assert(value !== null);\n  return value;\n};\n\n/**\n * Verify |value| is not undefined and return |value| if so, else throw Error.\n * See lib.assert.\n *\n * @template T\n * @param {T} value A value to check for null.\n * @return {T} A non-undefined |value|.\n * @closurePrimitive {asserts.truthy}\n */\nlib.notUndefined = function(value) {\n  lib.assert(value !== undefined);\n  return value;\n};\n// SOURCE FILE: libdot/js/lib_polyfill.js\n// Copyright 2017 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Polyfills for ES2016+ features we want to use.\n * @suppress {duplicate} This file redefines many functions.\n */\n\n/** @const */\nlib.polyfill = {};\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\n */\nlib.polyfill.stringPadStart = function() {\n  /**\n   * @param {number} targetLength\n   * @param {string=} padString\n   * @return {string}\n   */\n  String.prototype.padStart = function(targetLength, padString) {\n    // If the string is already long enough, nothing to do!\n    targetLength -= this.length;\n    if (targetLength <= 0)\n      return String(this);\n\n    if (padString === undefined)\n      padString = ' ';\n\n    // In case the pad is multiple chars long.\n    if (targetLength > padString.length)\n      padString = padString.repeat((targetLength / padString.length) + 1);\n\n    return padString.slice(0, targetLength) + String(this);\n  };\n};\n\nif (!String.prototype.padStart) {\n  lib.polyfill.stringPadStart();\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n */\nlib.polyfill.stringPadEnd = function() {\n  /**\n   * @param {number} targetLength\n   * @param {string=} padString\n   * @return {string}\n   */\n  String.prototype.padEnd = function(targetLength, padString) {\n    // If the string is already long enough, nothing to do!\n    targetLength -= this.length;\n    if (targetLength <= 0)\n      return String(this);\n\n    if (padString === undefined)\n      padString = ' ';\n\n    // In case the pad is multiple chars long.\n    if (targetLength > padString.length)\n      padString = padString.repeat((targetLength / padString.length) + 1);\n\n    return String(this) + padString.slice(0, targetLength);\n  };\n};\n\nif (!String.prototype.padEnd) {\n  lib.polyfill.stringPadEnd();\n}\n\n/**\n * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Object/values\n * https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\n */\nlib.polyfill.object = function() {\n  const reduce = Function.bind.call(Function.call, Array.prototype.reduce);\n  const isEnumerable = Function.bind.call(Function.call,\n      Object.prototype.propertyIsEnumerable);\n  const concat = Function.bind.call(Function.call, Array.prototype.concat);\n\n  if (!Object.values) {\n    /**\n     * @param {!Object} O\n     * @return {!Array}\n     */\n    Object.values = function values(O) {\n      return reduce(Reflect.ownKeys(O), (v, k) => concat(v,\n          typeof k === 'string' && isEnumerable(O, k) ? [O[k]] : []), []);\n    };\n  }\n\n  if (!Object.entries) {\n    /**\n     * @param {!Object} O\n     * @return {!Array<!Array<string>>}\n     */\n    Object.entries = function entries(O) {\n      return reduce(Reflect.ownKeys(O), (e, k) => concat(e,\n          typeof k === 'string' && isEnumerable(O, k) ? [[k, O[k]]] : []), []);\n    };\n  }\n};\n\nif (!Object.values || !Object.entries) {\n  lib.polyfill.object();\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally\n * https://github.com/tc39/proposal-promise-finally/blob/master/polyfill.js\n */\nlib.polyfill.promiseFinally = function() {\n  /**\n   * @param {!Object} O\n   * @param {!Function} defaultConstructor\n   * @return {!Function}\n   */\n  const speciesConstructor = function(O, defaultConstructor) {\n    if (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n      throw new TypeError('Assertion failed: Type(O) is not Object');\n    }\n    const C = O.constructor;\n    if (typeof C === 'undefined') {\n      return defaultConstructor;\n    }\n    if (!C || (typeof C !== 'object' && typeof C !== 'function')) {\n      throw new TypeError('O.constructor is not an Object');\n    }\n    const S =\n        typeof Symbol === 'function' && typeof Symbol.species === 'symbol' ?\n        C[Symbol.species] : undefined;\n    if (S == null) {\n      return defaultConstructor;\n    }\n    if (typeof S === 'function' && S.prototype) {\n      return S;\n    }\n    throw new TypeError('no constructor found');\n  };\n\n  /**\n   * @param {function()} onFinally\n   * @return {!Promise}\n   */\n  function finallyFn(onFinally) {\n    const promise = this;\n    if (typeof promise !== 'object' || promise === null) {\n      throw new TypeError('\"this\" value is not an Object');\n    }\n    const C = speciesConstructor(promise, Promise);\n    if (typeof onFinally !== 'function') {\n      return Promise.prototype.then.call(promise, onFinally, onFinally);\n    }\n    return Promise.prototype.then.call(\n      promise,\n      x => new C(resolve => resolve(onFinally())).then(() => x),\n      e => new C(resolve => resolve(onFinally())).then(() => { throw e; })\n    );\n  }\n  Object.defineProperty(Promise.prototype, 'finally', {\n    configurable: true, writable: true, value: finallyFn,\n  });\n};\n\nif (typeof Promise.prototype.finally !== 'function') {\n  lib.polyfill.promiseFinally();\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer\n *\n * @return {!Promise<!ArrayBuffer>}\n */\nlib.polyfill.BlobArrayBuffer = function() {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onabort = reader.onerror = () => reject(reader);\n    reader.readAsArrayBuffer(this);\n  });\n};\n\nif (typeof Blob.prototype.arrayBuffer != 'function') {\n  Blob.prototype.arrayBuffer = lib.polyfill.BlobArrayBuffer;\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\n *\n * @return {!Promise<string>}\n */\nlib.polyfill.BlobText = function() {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onabort = reader.onerror = () => reject(reader);\n    reader.readAsText(this);\n  });\n};\n\nif (typeof Blob.prototype.arrayBuffer != 'function') {\n  Blob.prototype.text = lib.polyfill.BlobText;\n}\n// SOURCE FILE: libdot/js/lib_array.js\n// Copyright 2017 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Helper functions for (typed) arrays.\n */\n\nlib.array = {};\n\n/**\n * Concatenate an arbitrary number of typed arrays of the same type into a new\n * typed array of this type.\n *\n * @template TYPED_ARRAY\n * @param {...!TYPED_ARRAY} arrays\n * @return {!TYPED_ARRAY}\n */\nlib.array.concatTyped = function(...arrays) {\n  let resultLength = 0;\n  for (const array of arrays) {\n    resultLength += array.length;\n  }\n  const result = new arrays[0].constructor(resultLength);\n  let pos = 0;\n  for (const array of arrays) {\n    result.set(array, pos);\n    pos += array.length;\n  }\n  return result;\n};\n\n/**\n * Compare two array-like objects entrywise.\n *\n * @template ARRAY_LIKE\n * @param {?ARRAY_LIKE} a The first array to compare.\n * @param {?ARRAY_LIKE} b The second array to compare.\n * @return {boolean} true if both arrays are null or they agree entrywise;\n *     false otherwise.\n */\nlib.array.compare = function(a, b) {\n  if (a === null || b === null) {\n    return a === null && b === null;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n// SOURCE FILE: libdot/js/lib_codec.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nlib.codec = {};\n\n/**\n * Join an array of code units to a string.\n *\n * The code units must not be larger than 65535.  The individual code units may\n * be for UTF-8 or UTF-16 -- it doesn't matter since UTF-16 can handle all UTF-8\n * code units.\n *\n * The input array type may be an Array or a typed Array (e.g. Uint8Array).\n *\n * @param {!Uint8Array|!Array<number>} array The code units to generate for\n *     the string.\n * @return {string} A UTF-16 encoded string.\n */\nlib.codec.codeUnitArrayToString = function(array) {\n  // String concat is faster than Array.join.\n  //\n  // String.fromCharCode.apply is faster than this if called less frequently\n  // and with smaller array sizes (like <32K).  But it's a recursive call so\n  // larger arrays will blow the stack and fail.  We also seem to be faster\n  // (or at least more constant time) when called frequently.\n  let ret = '';\n  for (let i = 0; i < array.length; ++i) {\n    ret += String.fromCharCode(array[i]);\n  }\n  return ret;\n};\n\n/**\n * Create an array of code units from a UTF-16 encoded string.\n *\n * @param {string} str The string to extract code units from.\n * @param {!ArrayBufferView=} ret The buffer to hold the result.  If not set, a\n *     new Uint8Array is created.\n * @return {!ArrayBufferView} The array of code units.\n */\nlib.codec.stringToCodeUnitArray = function(\n    str, ret = new Uint8Array(str.length)) {\n  // Indexing string directly is faster than Array.map.\n  for (let i = 0; i < str.length; ++i) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n};\n// SOURCE FILE: libdot/js/lib_colors.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Namespace for color utilities.\n */\nlib.colors = {};\n\n/**\n * First, some canned regular expressions we're going to use in this file.\n *\n *\n *                              BRACE YOURSELF\n *\n *                                 ,~~~~.\n *                                 |>_< ~~\n *                                3`---'-/.\n *                                3:::::\\v\\\n *                               =o=:::::\\,\\\n *                                | :::::\\,,\\\n *\n *                        THE REGULAR EXPRESSIONS\n *                               ARE COMING.\n *\n * There's no way to break long RE literals in JavaScript.  Fix that why don't\n * you?  Oh, and also there's no way to write a string that doesn't interpret\n * escapes.\n *\n * Instead, we stoop to this .replace() trick.\n */\nlib.colors.re_ = {\n  // CSS hex color, #RGB or RGBA.\n  hex16: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?$/i,\n\n  // CSS hex color, #RRGGBB or #RRGGBBAA.\n  hex24: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?$/i,\n\n  // CSS rgb color, rgb(rrr,ggg,bbb).\n  rgb: new RegExp(\n      ('^/s*rgb/s*/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,' +\n       '/s*(/d{1,3})/s*/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS rgb color, rgba(rrr,ggg,bbb,aaa).\n  rgba: new RegExp(\n      ('^/s*rgba/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,/s*(/d{1,3})/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // Either RGB or RGBA.\n  rgbx: new RegExp(\n      ('^/s*rgba?/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*,/s*(/d{1,3})/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)?/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS hsl color, hsl(hhh,sss%,lll%).\n  hsl: new RegExp(\n      ('^/s*hsl/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // CSS hsl color, hsla(hhh,sss%,lll%,aaa).\n  hsla: new RegExp(\n      ('^/s*hsla/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // Either HSL or HSLA.\n  hslx: new RegExp(\n      ('^/s*hsla?/s*' +\n       '/(/s*(/d{1,3})/s*,/s*(/d{1,3})/s*%/s*,/s*(/d{1,3})/s*%/s*' +\n       '(?:,/s*(/d+(?:/./d+)?)/s*)?/)/s*$'\n       ).replace(/\\//g, '\\\\'), 'i'),\n\n  // An X11 \"rgb:dddd/dddd/dddd\" value.\n  x11rgb: /^\\s*rgb:([a-f0-9]{1,4})\\/([a-f0-9]{1,4})\\/([a-f0-9]{1,4})\\s*$/i,\n\n  // English color name.\n  name: /[a-z][a-z0-9\\s]+/,\n};\n\n/**\n * Convert a CSS rgb(ddd,ddd,ddd) color value into an X11 color value.\n *\n * Other CSS color values are ignored to ensure sanitary data handling.\n *\n * Each 'ddd' component is a one byte value specified in decimal.\n *\n * @param {string} value The CSS color value to convert.\n * @return {?string} The X11 color value or null if the value could not be\n *     converted.\n */\nlib.colors.rgbToX11 = function(value) {\n  function scale(v) {\n    v = (Math.min(v, 255) * 257).toString(16);\n    return lib.f.zpad(v, 4);\n  }\n\n  var ary = value.match(lib.colors.re_.rgbx);\n  if (!ary)\n    return null;\n\n  return 'rgb:' + scale(ary[1]) + '/' + scale(ary[2]) + '/' + scale(ary[3]);\n};\n\n/**\n * Convert a legacy X11 color value into an CSS rgb(...) color value.\n *\n * They take the form:\n * 12 bit: #RGB          -> #R000G000B000\n * 24 bit: #RRGGBB       -> #RR00GG00BB00\n * 36 bit: #RRRGGGBBB    -> #RRR0GGG0BBB0\n * 48 bit: #RRRRGGGGBBBB\n * These are the most significant bits.\n *\n * Truncate values back down to 24 bit since that's all CSS supports.\n *\n * @param {string} v The X11 hex color value to convert.\n * @return {?string} The CSS color value or null if the value could not be\n *     converted.\n */\nlib.colors.x11HexToCSS = function(v) {\n  if (!v.startsWith('#'))\n    return null;\n  // Strip the leading # off.\n  v = v.substr(1);\n\n  // Reject unknown sizes.\n  if ([3, 6, 9, 12].indexOf(v.length) == -1)\n    return null;\n\n  // Reject non-hex values.\n  if (v.match(/[^a-f0-9]/i))\n    return null;\n\n  // Split the colors out.\n  var size = v.length / 3;\n  var r = v.substr(0, size);\n  var g = v.substr(size, size);\n  var b = v.substr(size + size, size);\n\n  // Normalize to 16 bits.\n  function norm16(v) {\n    v = parseInt(v, 16);\n    return size == 2 ? v :         // 16 bit\n           size == 1 ? v << 4 :    // 8 bit\n           v >> (4 * (size - 2));  // 24 or 32 bit\n  }\n  return lib.colors.arrayToRGBA([r, g, b].map(norm16));\n};\n\n/**\n * Convert an X11 color value into an CSS rgb(...) color value.\n *\n * The X11 value may be an X11 color name, or an RGB value of the form\n * rgb:hhhh/hhhh/hhhh.  If a component value is less than 4 digits it is\n * padded out to 4, then scaled down to fit in a single byte.\n *\n * @param {string} v The X11 color value to convert.\n * @return {?string} The CSS color value or null if the value could not be\n *     converted.\n */\nlib.colors.x11ToCSS = function(v) {\n  function scale(v) {\n    // Pad out values with less than four digits.  This padding (probably)\n    // matches xterm.  It's difficult to say for sure since xterm seems to\n    // arrive at a padded value and then perform some combination of\n    // gamma correction, color space transformation, and quantization.\n\n    if (v.length == 1) {\n      // Single digits pad out to four by repeating the character.  \"f\" becomes\n      // \"ffff\".  Scaling down a hex value of this pattern by 257 is the same\n      // as cutting off one byte.  We skip the middle step and just double\n      // the character.\n      return parseInt(v + v, 16);\n    }\n\n    if (v.length == 2) {\n      // Similar deal here.  X11 pads two digit values by repeating the\n      // byte (or scale up by 257).  Since we're going to scale it back\n      // down anyway, we can just return the original value.\n      return parseInt(v, 16);\n    }\n\n    if (v.length == 3) {\n      // Three digit values seem to be padded by repeating the final digit.\n      // e.g. 10f becomes 10ff.\n      v = v + v.substr(2);\n    }\n\n    // Scale down the 2 byte value.\n    return Math.round(parseInt(v, 16) / 257);\n  }\n\n  var ary = v.match(lib.colors.re_.x11rgb);\n  if (!ary) {\n    // Handle the legacy format.\n    if (v.startsWith('#'))\n      return lib.colors.x11HexToCSS(v);\n    else\n      return lib.colors.nameToRGB(v);\n  }\n\n  ary.splice(0, 1);\n  return lib.colors.arrayToRGBA(ary.map(scale));\n};\n\n/**\n * Converts one or more CSS '#RRGGBB' or '#RRGGBBAA' color values into their\n * rgb(...) or rgba(...) form respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} hex A single RGB or RGBA value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.hexToRGB = function(hex) {\n  const hex16 = lib.colors.re_.hex16;\n  const hex24 = lib.colors.re_.hex24;\n\n  if (hex16.test(hex)) {\n    // Convert from RGB to RRGGBB and from RGBA to RRGGBBAA.\n    hex = `#${hex.match(/[a-f0-9]/gi).map(x => `${x}${x}`).join('')}`;\n  }\n\n  const ary = hex.match(hex24);\n  if (!ary) {\n    return null;\n  }\n\n  const val = (index) => parseInt(ary[index + 1], 16);\n  return ary[4] === undefined || val(3) === 255\n      ? `rgb(${val(0)}, ${val(1)}, ${val(2)})`\n      : `rgba(${val(0)}, ${val(1)}, ${val(2)}, ${val(3) / 255})`;\n};\n\n/**\n * Converts one or more CSS rgb(...) or rgba(...) forms into their '#RRGGBB' or\n * '#RRGGBBAA' color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} rgb A single rgb(...) or rgba(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.rgbToHex = function(rgb) {\n  const ary = lib.colors.crackRGB(rgb);\n  if (!ary) {\n    return null;\n  }\n\n  const hex = '#' + lib.f.zpad((\n      (parseInt(ary[0], 10) << 16) |\n      (parseInt(ary[1], 10) <<  8) |\n      (parseInt(ary[2], 10) <<  0)).toString(16), 6);\n  return ary[3] === undefined || ary[3] === '1'\n      ? hex\n      : `${hex}${lib.f.zpad(Math.round(255 * ary[3]).toString(16), 2)}`;\n};\n\n/**\n * Split an hsl/hsla color into an array of its components.\n *\n * On success, a 4 element array will be returned.  For hsl values, the alpha\n * will be set to 1.\n *\n * @param {string} color The HSL/HSLA CSS color spec.\n * @return {?Array<string>} The HSL/HSLA values split out.\n */\nlib.colors.crackHSL = function(color) {\n  if (color.startsWith('hsla')) {\n    const ary = color.match(lib.colors.re_.hsla);\n    if (ary) {\n      ary.shift();\n      return Array.from(ary);\n    }\n  } else {\n    const ary = color.match(lib.colors.re_.hsl);\n    if (ary) {\n      ary.shift();\n      ary.push('1');\n      return Array.from(ary);\n    }\n  }\n\n  console.error(`Couldn't crack: ${color}`);\n  return null;\n};\n\n/**\n * Converts hslx array to rgba array.\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * The returned values are not rounded to preserve precision for computations,\n * rounded before they are used in CSS strings.\n *\n * @param {?Array<string|number>} hslx The HSL or HSLA elements to convert.\n * @return {!Array<number>} The RGBA values.\n */\nlib.colors.hslxArrayToRgbaArray = function(hslx) {\n  const hue = hslx[0] / 60;\n  const sat = hslx[1] / 100;\n  const light = hslx[2] / 100;\n\n  // The following algorithm has been adapted from:\n  //     https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n  const hueToRgb = (t1, t2, hue) => {\n    if (hue < 0) {\n      hue += 6;\n    }\n    if (hue >= 6) {\n      hue -= 6;\n    }\n\n    if (hue < 1) {\n      return (t2 - t1) * hue + t1;\n    } else if (hue < 3) {\n      return t2;\n    } else if (hue < 4) {\n      return (t2 - t1) * (4 - hue) + t1;\n    } else {\n      return t1;\n    }\n  };\n\n  const t2 = light <= 0.5 ?  light * (sat + 1) : light + sat - (light * sat);\n  const t1 = light * 2 - t2;\n\n  return [\n    255 * hueToRgb(t1, t2, hue + 2),\n    255 * hueToRgb(t1, t2, hue),\n    255 * hueToRgb(t1, t2, hue - 2),\n    hslx[3] !== undefined ? +hslx[3] : 1\n  ];\n};\n\n/**\n * Converts one or more CSS hsl(...) or hsla(...) forms into their rgb(...) or\n * rgba(...) color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} hsl A single hsl(...) or hsla(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.hslToRGB = function(hsl) {\n  const ary = lib.colors.crackHSL(hsl);\n  if (!ary) {\n    return null;\n  }\n\n  const [r, g, b, a] = lib.colors.hslxArrayToRgbaArray(ary);\n\n  const rgb = [r, g, b].map(Math.round).join(', ');\n\n  return a === 1 ? `rgb(${rgb})` : `rgba(${rgb}, ${a})`;\n};\n\n/**\n * Converts rgbx array to hsla array.\n *\n * The returned alpha component defaults to 1 if it isn't present in the input.\n *\n * The returned values are not rounded to preserve precision for computations,\n * so should be rounded before they are used in CSS strings.\n *\n * @param {?Array<string|number>} rgbx The RGB or RGBA elements to convert.\n * @return {!Array<number>} The HSLA values.\n */\nlib.colors.rgbxArrayToHslaArray = function(rgbx) {\n  const r = rgbx[0] / 255;\n  const g = rgbx[1] / 255;\n  const b = rgbx[2] / 255;\n\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const spread = max - min;\n\n  const l = (max + min) / 2;\n\n  if (spread == 0) {\n    return [0, 0, 100 * l, rgbx[3] !== undefined ? +rgbx[3] : 1];\n  }\n\n  let h = (() => {\n    switch (max) {\n      case r: return ((g - b) / spread) % 6;\n      case g: return (b - r) / spread + 2;\n      case b: return (r - g) / spread + 4;\n    }\n  })();\n  h *= 60;\n  if (h < 0) {\n    h += 360;\n  }\n\n  const s = spread / (1 - Math.abs(2 * l - 1));\n\n  return [h, 100 * s, 100 * l, rgbx[3] !== undefined ? +rgbx[3] : 1];\n};\n\n/**\n * Converts one or more CSS rgb(...) or rgba(...) forms into their hsl(...) or\n * hsla(...) color values respectively.\n *\n * Arrays are converted in place. If a value cannot be converted, it is\n * replaced with null.\n *\n * @param {string} rgb A single rgb(...) or rgba(...) value to convert.\n * @return {?string} The converted value.\n */\nlib.colors.rgbToHsl = function(rgb) {\n  const ary = lib.colors.crackRGB(rgb);\n  if (!ary) {\n    return null;\n  }\n\n  let [h, s, l, a] = lib.colors.rgbxArrayToHslaArray(ary);\n  h = Math.round(h);\n  s = Math.round(s);\n  l = Math.round(l);\n\n  return a === 1 ? `hsl(${h}, ${s}%, ${l}%)` : `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\n/**\n * Take any valid css color definition and turn it into an rgb or rgba value.\n *\n * @param {string} def The CSS color spec to normalize.\n * @return {?string} The converted value.\n */\nlib.colors.normalizeCSS = function(def) {\n  if (def.startsWith('#')) {\n    return lib.colors.hexToRGB(def);\n  }\n\n  if (lib.colors.re_.rgbx.test(def)) {\n    return def;\n  }\n\n  if (lib.colors.re_.hslx.test(def)) {\n    return lib.colors.hslToRGB(def);\n  }\n\n  return lib.colors.nameToRGB(def);\n};\n\n/**\n * Convert a 3 or 4 element array into an rgba(...) string.\n *\n * @param {?Array<string|number>} ary The RGB or RGBA elements to convert.\n * @return {string} The normalized CSS color spec.\n */\nlib.colors.arrayToRGBA = function(ary) {\n  var alpha = (ary.length > 3) ? ary[3] : 1;\n  return 'rgba(' + ary[0] + ', ' + ary[1] + ', ' + ary[2] + ', ' + alpha + ')';\n};\n\n/**\n * Overwrite the alpha channel of an rgb/rgba color.\n *\n * @param {string} rgb The normalized CSS color spec.\n * @param {number} alpha The alpha channel.\n * @return {string} The normalized CSS color spec with updated alpha channel.\n */\nlib.colors.setAlpha = function(rgb, alpha) {\n  var ary = lib.colors.crackRGB(rgb);\n  ary[3] = alpha.toString();\n  return lib.colors.arrayToRGBA(ary);\n};\n\n/**\n * Mix a percentage of a tint color into a base color.\n *\n * @param  {string} base The normalized CSS base color spec.\n * @param  {string} tint The normalized CSS color to tint with.\n * @param  {number} percent The percentage of the tinting.\n * @return {string} The new tinted CSS color spec.\n */\nlib.colors.mix = function(base, tint, percent) {\n  var ary1 = lib.colors.crackRGB(base);\n  var ary2 = lib.colors.crackRGB(tint);\n\n  for (var i = 0; i < 4; ++i) {\n    var diff = ary2[i] - ary1[i];\n    ary1[i] = Math.round(parseInt(ary1[i], 10) + diff * percent).toString();\n  }\n\n  return lib.colors.arrayToRGBA(ary1);\n};\n\n/**\n * Split an rgb/rgba color into an array of its components.\n *\n * On success, a 4 element array will be returned.  For rgb values, the alpha\n * will be set to 1.\n *\n * @param {string} color The RGB/RGBA CSS color spec.\n * @return {?Array<string>} The RGB/RGBA values split out.\n */\nlib.colors.crackRGB = function(color) {\n  if (color.startsWith('rgba')) {\n    var ary = color.match(lib.colors.re_.rgba);\n    if (ary) {\n      ary.shift();\n      return Array.from(ary);\n    }\n  } else {\n    var ary = color.match(lib.colors.re_.rgb);\n    if (ary) {\n      ary.shift();\n      ary.push('1');\n      return Array.from(ary);\n    }\n  }\n\n  console.error('Couldn\\'t crack: ' + color);\n  return null;\n};\n\n/**\n * Convert an X11 color name into a CSS rgb(...) value.\n *\n * Names are stripped of spaces and converted to lowercase.  If the name is\n * unknown, null is returned.\n *\n * This list of color name to RGB mapping is derived from the stock X11\n * rgb.txt file.\n *\n * @param {string} name The color name to convert.\n * @return {?string} The corresponding CSS rgb(...) value.\n */\nlib.colors.nameToRGB = function(name) {\n  if (name in lib.colors.colorNames)\n    return lib.colors.colorNames[name];\n\n  name = name.toLowerCase();\n  if (name in lib.colors.colorNames)\n    return lib.colors.colorNames[name];\n\n  name = name.replace(/\\s+/g, '');\n  if (name in lib.colors.colorNames)\n    return lib.colors.colorNames[name];\n\n  return null;\n};\n\n/**\n * The stock color palette.\n *\n * @type {!Array<string>}\n */\nlib.colors.stockColorPalette = [\n     // The \"ANSI 16\"...\n    '#000000', '#CC0000', '#4E9A06', '#C4A000',\n    '#3465A4', '#75507B', '#06989A', '#D3D7CF',\n    '#555753', '#EF2929', '#00BA13', '#FCE94F',\n    '#729FCF', '#F200CB', '#00B5BD', '#EEEEEC',\n\n    // The 6x6 color cubes...\n    '#000000', '#00005F', '#000087', '#0000AF', '#0000D7', '#0000FF',\n    '#005F00', '#005F5F', '#005F87', '#005FAF', '#005FD7', '#005FFF',\n    '#008700', '#00875F', '#008787', '#0087AF', '#0087D7', '#0087FF',\n    '#00AF00', '#00AF5F', '#00AF87', '#00AFAF', '#00AFD7', '#00AFFF',\n    '#00D700', '#00D75F', '#00D787', '#00D7AF', '#00D7D7', '#00D7FF',\n    '#00FF00', '#00FF5F', '#00FF87', '#00FFAF', '#00FFD7', '#00FFFF',\n\n    '#5F0000', '#5F005F', '#5F0087', '#5F00AF', '#5F00D7', '#5F00FF',\n    '#5F5F00', '#5F5F5F', '#5F5F87', '#5F5FAF', '#5F5FD7', '#5F5FFF',\n    '#5F8700', '#5F875F', '#5F8787', '#5F87AF', '#5F87D7', '#5F87FF',\n    '#5FAF00', '#5FAF5F', '#5FAF87', '#5FAFAF', '#5FAFD7', '#5FAFFF',\n    '#5FD700', '#5FD75F', '#5FD787', '#5FD7AF', '#5FD7D7', '#5FD7FF',\n    '#5FFF00', '#5FFF5F', '#5FFF87', '#5FFFAF', '#5FFFD7', '#5FFFFF',\n\n    '#870000', '#87005F', '#870087', '#8700AF', '#8700D7', '#8700FF',\n    '#875F00', '#875F5F', '#875F87', '#875FAF', '#875FD7', '#875FFF',\n    '#878700', '#87875F', '#878787', '#8787AF', '#8787D7', '#8787FF',\n    '#87AF00', '#87AF5F', '#87AF87', '#87AFAF', '#87AFD7', '#87AFFF',\n    '#87D700', '#87D75F', '#87D787', '#87D7AF', '#87D7D7', '#87D7FF',\n    '#87FF00', '#87FF5F', '#87FF87', '#87FFAF', '#87FFD7', '#87FFFF',\n\n    '#AF0000', '#AF005F', '#AF0087', '#AF00AF', '#AF00D7', '#AF00FF',\n    '#AF5F00', '#AF5F5F', '#AF5F87', '#AF5FAF', '#AF5FD7', '#AF5FFF',\n    '#AF8700', '#AF875F', '#AF8787', '#AF87AF', '#AF87D7', '#AF87FF',\n    '#AFAF00', '#AFAF5F', '#AFAF87', '#AFAFAF', '#AFAFD7', '#AFAFFF',\n    '#AFD700', '#AFD75F', '#AFD787', '#AFD7AF', '#AFD7D7', '#AFD7FF',\n    '#AFFF00', '#AFFF5F', '#AFFF87', '#AFFFAF', '#AFFFD7', '#AFFFFF',\n\n    '#D70000', '#D7005F', '#D70087', '#D700AF', '#D700D7', '#D700FF',\n    '#D75F00', '#D75F5F', '#D75F87', '#D75FAF', '#D75FD7', '#D75FFF',\n    '#D78700', '#D7875F', '#D78787', '#D787AF', '#D787D7', '#D787FF',\n    '#D7AF00', '#D7AF5F', '#D7AF87', '#D7AFAF', '#D7AFD7', '#D7AFFF',\n    '#D7D700', '#D7D75F', '#D7D787', '#D7D7AF', '#D7D7D7', '#D7D7FF',\n    '#D7FF00', '#D7FF5F', '#D7FF87', '#D7FFAF', '#D7FFD7', '#D7FFFF',\n\n    '#FF0000', '#FF005F', '#FF0087', '#FF00AF', '#FF00D7', '#FF00FF',\n    '#FF5F00', '#FF5F5F', '#FF5F87', '#FF5FAF', '#FF5FD7', '#FF5FFF',\n    '#FF8700', '#FF875F', '#FF8787', '#FF87AF', '#FF87D7', '#FF87FF',\n    '#FFAF00', '#FFAF5F', '#FFAF87', '#FFAFAF', '#FFAFD7', '#FFAFFF',\n    '#FFD700', '#FFD75F', '#FFD787', '#FFD7AF', '#FFD7D7', '#FFD7FF',\n    '#FFFF00', '#FFFF5F', '#FFFF87', '#FFFFAF', '#FFFFD7', '#FFFFFF',\n\n    // The greyscale ramp...\n    '#080808', '#121212', '#1C1C1C', '#262626', '#303030', '#3A3A3A',\n    '#444444', '#4E4E4E', '#585858', '#626262', '#6C6C6C', '#767676',\n    '#808080', '#8A8A8A', '#949494', '#9E9E9E', '#A8A8A8', '#B2B2B2',\n    '#BCBCBC', '#C6C6C6', '#D0D0D0', '#DADADA', '#E4E4E4', '#EEEEEE'\n   ].map(lib.colors.hexToRGB);\n\n/**\n * The current color palette, possibly with user changes.\n */\nlib.colors.colorPalette = lib.colors.stockColorPalette;\n\n/**\n * Named colors according to the stock X11 rgb.txt file.\n */\nlib.colors.colorNames = {\n  \"aliceblue\": \"rgb(240, 248, 255)\",\n  \"antiquewhite\": \"rgb(250, 235, 215)\",\n  \"antiquewhite1\": \"rgb(255, 239, 219)\",\n  \"antiquewhite2\": \"rgb(238, 223, 204)\",\n  \"antiquewhite3\": \"rgb(205, 192, 176)\",\n  \"antiquewhite4\": \"rgb(139, 131, 120)\",\n  \"aquamarine\": \"rgb(127, 255, 212)\",\n  \"aquamarine1\": \"rgb(127, 255, 212)\",\n  \"aquamarine2\": \"rgb(118, 238, 198)\",\n  \"aquamarine3\": \"rgb(102, 205, 170)\",\n  \"aquamarine4\": \"rgb(69, 139, 116)\",\n  \"azure\": \"rgb(240, 255, 255)\",\n  \"azure1\": \"rgb(240, 255, 255)\",\n  \"azure2\": \"rgb(224, 238, 238)\",\n  \"azure3\": \"rgb(193, 205, 205)\",\n  \"azure4\": \"rgb(131, 139, 139)\",\n  \"beige\": \"rgb(245, 245, 220)\",\n  \"bisque\": \"rgb(255, 228, 196)\",\n  \"bisque1\": \"rgb(255, 228, 196)\",\n  \"bisque2\": \"rgb(238, 213, 183)\",\n  \"bisque3\": \"rgb(205, 183, 158)\",\n  \"bisque4\": \"rgb(139, 125, 107)\",\n  \"black\": \"rgb(0, 0, 0)\",\n  \"blanchedalmond\": \"rgb(255, 235, 205)\",\n  \"blue\": \"rgb(0, 0, 255)\",\n  \"blue1\": \"rgb(0, 0, 255)\",\n  \"blue2\": \"rgb(0, 0, 238)\",\n  \"blue3\": \"rgb(0, 0, 205)\",\n  \"blue4\": \"rgb(0, 0, 139)\",\n  \"blueviolet\": \"rgb(138, 43, 226)\",\n  \"brown\": \"rgb(165, 42, 42)\",\n  \"brown1\": \"rgb(255, 64, 64)\",\n  \"brown2\": \"rgb(238, 59, 59)\",\n  \"brown3\": \"rgb(205, 51, 51)\",\n  \"brown4\": \"rgb(139, 35, 35)\",\n  \"burlywood\": \"rgb(222, 184, 135)\",\n  \"burlywood1\": \"rgb(255, 211, 155)\",\n  \"burlywood2\": \"rgb(238, 197, 145)\",\n  \"burlywood3\": \"rgb(205, 170, 125)\",\n  \"burlywood4\": \"rgb(139, 115, 85)\",\n  \"cadetblue\": \"rgb(95, 158, 160)\",\n  \"cadetblue1\": \"rgb(152, 245, 255)\",\n  \"cadetblue2\": \"rgb(142, 229, 238)\",\n  \"cadetblue3\": \"rgb(122, 197, 205)\",\n  \"cadetblue4\": \"rgb(83, 134, 139)\",\n  \"chartreuse\": \"rgb(127, 255, 0)\",\n  \"chartreuse1\": \"rgb(127, 255, 0)\",\n  \"chartreuse2\": \"rgb(118, 238, 0)\",\n  \"chartreuse3\": \"rgb(102, 205, 0)\",\n  \"chartreuse4\": \"rgb(69, 139, 0)\",\n  \"chocolate\": \"rgb(210, 105, 30)\",\n  \"chocolate1\": \"rgb(255, 127, 36)\",\n  \"chocolate2\": \"rgb(238, 118, 33)\",\n  \"chocolate3\": \"rgb(205, 102, 29)\",\n  \"chocolate4\": \"rgb(139, 69, 19)\",\n  \"coral\": \"rgb(255, 127, 80)\",\n  \"coral1\": \"rgb(255, 114, 86)\",\n  \"coral2\": \"rgb(238, 106, 80)\",\n  \"coral3\": \"rgb(205, 91, 69)\",\n  \"coral4\": \"rgb(139, 62, 47)\",\n  \"cornflowerblue\": \"rgb(100, 149, 237)\",\n  \"cornsilk\": \"rgb(255, 248, 220)\",\n  \"cornsilk1\": \"rgb(255, 248, 220)\",\n  \"cornsilk2\": \"rgb(238, 232, 205)\",\n  \"cornsilk3\": \"rgb(205, 200, 177)\",\n  \"cornsilk4\": \"rgb(139, 136, 120)\",\n  \"cyan\": \"rgb(0, 255, 255)\",\n  \"cyan1\": \"rgb(0, 255, 255)\",\n  \"cyan2\": \"rgb(0, 238, 238)\",\n  \"cyan3\": \"rgb(0, 205, 205)\",\n  \"cyan4\": \"rgb(0, 139, 139)\",\n  \"darkblue\": \"rgb(0, 0, 139)\",\n  \"darkcyan\": \"rgb(0, 139, 139)\",\n  \"darkgoldenrod\": \"rgb(184, 134, 11)\",\n  \"darkgoldenrod1\": \"rgb(255, 185, 15)\",\n  \"darkgoldenrod2\": \"rgb(238, 173, 14)\",\n  \"darkgoldenrod3\": \"rgb(205, 149, 12)\",\n  \"darkgoldenrod4\": \"rgb(139, 101, 8)\",\n  \"darkgray\": \"rgb(169, 169, 169)\",\n  \"darkgreen\": \"rgb(0, 100, 0)\",\n  \"darkgrey\": \"rgb(169, 169, 169)\",\n  \"darkkhaki\": \"rgb(189, 183, 107)\",\n  \"darkmagenta\": \"rgb(139, 0, 139)\",\n  \"darkolivegreen\": \"rgb(85, 107, 47)\",\n  \"darkolivegreen1\": \"rgb(202, 255, 112)\",\n  \"darkolivegreen2\": \"rgb(188, 238, 104)\",\n  \"darkolivegreen3\": \"rgb(162, 205, 90)\",\n  \"darkolivegreen4\": \"rgb(110, 139, 61)\",\n  \"darkorange\": \"rgb(255, 140, 0)\",\n  \"darkorange1\": \"rgb(255, 127, 0)\",\n  \"darkorange2\": \"rgb(238, 118, 0)\",\n  \"darkorange3\": \"rgb(205, 102, 0)\",\n  \"darkorange4\": \"rgb(139, 69, 0)\",\n  \"darkorchid\": \"rgb(153, 50, 204)\",\n  \"darkorchid1\": \"rgb(191, 62, 255)\",\n  \"darkorchid2\": \"rgb(178, 58, 238)\",\n  \"darkorchid3\": \"rgb(154, 50, 205)\",\n  \"darkorchid4\": \"rgb(104, 34, 139)\",\n  \"darkred\": \"rgb(139, 0, 0)\",\n  \"darksalmon\": \"rgb(233, 150, 122)\",\n  \"darkseagreen\": \"rgb(143, 188, 143)\",\n  \"darkseagreen1\": \"rgb(193, 255, 193)\",\n  \"darkseagreen2\": \"rgb(180, 238, 180)\",\n  \"darkseagreen3\": \"rgb(155, 205, 155)\",\n  \"darkseagreen4\": \"rgb(105, 139, 105)\",\n  \"darkslateblue\": \"rgb(72, 61, 139)\",\n  \"darkslategray\": \"rgb(47, 79, 79)\",\n  \"darkslategray1\": \"rgb(151, 255, 255)\",\n  \"darkslategray2\": \"rgb(141, 238, 238)\",\n  \"darkslategray3\": \"rgb(121, 205, 205)\",\n  \"darkslategray4\": \"rgb(82, 139, 139)\",\n  \"darkslategrey\": \"rgb(47, 79, 79)\",\n  \"darkturquoise\": \"rgb(0, 206, 209)\",\n  \"darkviolet\": \"rgb(148, 0, 211)\",\n  \"debianred\": \"rgb(215, 7, 81)\",\n  \"deeppink\": \"rgb(255, 20, 147)\",\n  \"deeppink1\": \"rgb(255, 20, 147)\",\n  \"deeppink2\": \"rgb(238, 18, 137)\",\n  \"deeppink3\": \"rgb(205, 16, 118)\",\n  \"deeppink4\": \"rgb(139, 10, 80)\",\n  \"deepskyblue\": \"rgb(0, 191, 255)\",\n  \"deepskyblue1\": \"rgb(0, 191, 255)\",\n  \"deepskyblue2\": \"rgb(0, 178, 238)\",\n  \"deepskyblue3\": \"rgb(0, 154, 205)\",\n  \"deepskyblue4\": \"rgb(0, 104, 139)\",\n  \"dimgray\": \"rgb(105, 105, 105)\",\n  \"dimgrey\": \"rgb(105, 105, 105)\",\n  \"dodgerblue\": \"rgb(30, 144, 255)\",\n  \"dodgerblue1\": \"rgb(30, 144, 255)\",\n  \"dodgerblue2\": \"rgb(28, 134, 238)\",\n  \"dodgerblue3\": \"rgb(24, 116, 205)\",\n  \"dodgerblue4\": \"rgb(16, 78, 139)\",\n  \"firebrick\": \"rgb(178, 34, 34)\",\n  \"firebrick1\": \"rgb(255, 48, 48)\",\n  \"firebrick2\": \"rgb(238, 44, 44)\",\n  \"firebrick3\": \"rgb(205, 38, 38)\",\n  \"firebrick4\": \"rgb(139, 26, 26)\",\n  \"floralwhite\": \"rgb(255, 250, 240)\",\n  \"forestgreen\": \"rgb(34, 139, 34)\",\n  \"gainsboro\": \"rgb(220, 220, 220)\",\n  \"ghostwhite\": \"rgb(248, 248, 255)\",\n  \"gold\": \"rgb(255, 215, 0)\",\n  \"gold1\": \"rgb(255, 215, 0)\",\n  \"gold2\": \"rgb(238, 201, 0)\",\n  \"gold3\": \"rgb(205, 173, 0)\",\n  \"gold4\": \"rgb(139, 117, 0)\",\n  \"goldenrod\": \"rgb(218, 165, 32)\",\n  \"goldenrod1\": \"rgb(255, 193, 37)\",\n  \"goldenrod2\": \"rgb(238, 180, 34)\",\n  \"goldenrod3\": \"rgb(205, 155, 29)\",\n  \"goldenrod4\": \"rgb(139, 105, 20)\",\n  \"gray\": \"rgb(190, 190, 190)\",\n  \"gray0\": \"rgb(0, 0, 0)\",\n  \"gray1\": \"rgb(3, 3, 3)\",\n  \"gray10\": \"rgb(26, 26, 26)\",\n  \"gray100\": \"rgb(255, 255, 255)\",\n  \"gray11\": \"rgb(28, 28, 28)\",\n  \"gray12\": \"rgb(31, 31, 31)\",\n  \"gray13\": \"rgb(33, 33, 33)\",\n  \"gray14\": \"rgb(36, 36, 36)\",\n  \"gray15\": \"rgb(38, 38, 38)\",\n  \"gray16\": \"rgb(41, 41, 41)\",\n  \"gray17\": \"rgb(43, 43, 43)\",\n  \"gray18\": \"rgb(46, 46, 46)\",\n  \"gray19\": \"rgb(48, 48, 48)\",\n  \"gray2\": \"rgb(5, 5, 5)\",\n  \"gray20\": \"rgb(51, 51, 51)\",\n  \"gray21\": \"rgb(54, 54, 54)\",\n  \"gray22\": \"rgb(56, 56, 56)\",\n  \"gray23\": \"rgb(59, 59, 59)\",\n  \"gray24\": \"rgb(61, 61, 61)\",\n  \"gray25\": \"rgb(64, 64, 64)\",\n  \"gray26\": \"rgb(66, 66, 66)\",\n  \"gray27\": \"rgb(69, 69, 69)\",\n  \"gray28\": \"rgb(71, 71, 71)\",\n  \"gray29\": \"rgb(74, 74, 74)\",\n  \"gray3\": \"rgb(8, 8, 8)\",\n  \"gray30\": \"rgb(77, 77, 77)\",\n  \"gray31\": \"rgb(79, 79, 79)\",\n  \"gray32\": \"rgb(82, 82, 82)\",\n  \"gray33\": \"rgb(84, 84, 84)\",\n  \"gray34\": \"rgb(87, 87, 87)\",\n  \"gray35\": \"rgb(89, 89, 89)\",\n  \"gray36\": \"rgb(92, 92, 92)\",\n  \"gray37\": \"rgb(94, 94, 94)\",\n  \"gray38\": \"rgb(97, 97, 97)\",\n  \"gray39\": \"rgb(99, 99, 99)\",\n  \"gray4\": \"rgb(10, 10, 10)\",\n  \"gray40\": \"rgb(102, 102, 102)\",\n  \"gray41\": \"rgb(105, 105, 105)\",\n  \"gray42\": \"rgb(107, 107, 107)\",\n  \"gray43\": \"rgb(110, 110, 110)\",\n  \"gray44\": \"rgb(112, 112, 112)\",\n  \"gray45\": \"rgb(115, 115, 115)\",\n  \"gray46\": \"rgb(117, 117, 117)\",\n  \"gray47\": \"rgb(120, 120, 120)\",\n  \"gray48\": \"rgb(122, 122, 122)\",\n  \"gray49\": \"rgb(125, 125, 125)\",\n  \"gray5\": \"rgb(13, 13, 13)\",\n  \"gray50\": \"rgb(127, 127, 127)\",\n  \"gray51\": \"rgb(130, 130, 130)\",\n  \"gray52\": \"rgb(133, 133, 133)\",\n  \"gray53\": \"rgb(135, 135, 135)\",\n  \"gray54\": \"rgb(138, 138, 138)\",\n  \"gray55\": \"rgb(140, 140, 140)\",\n  \"gray56\": \"rgb(143, 143, 143)\",\n  \"gray57\": \"rgb(145, 145, 145)\",\n  \"gray58\": \"rgb(148, 148, 148)\",\n  \"gray59\": \"rgb(150, 150, 150)\",\n  \"gray6\": \"rgb(15, 15, 15)\",\n  \"gray60\": \"rgb(153, 153, 153)\",\n  \"gray61\": \"rgb(156, 156, 156)\",\n  \"gray62\": \"rgb(158, 158, 158)\",\n  \"gray63\": \"rgb(161, 161, 161)\",\n  \"gray64\": \"rgb(163, 163, 163)\",\n  \"gray65\": \"rgb(166, 166, 166)\",\n  \"gray66\": \"rgb(168, 168, 168)\",\n  \"gray67\": \"rgb(171, 171, 171)\",\n  \"gray68\": \"rgb(173, 173, 173)\",\n  \"gray69\": \"rgb(176, 176, 176)\",\n  \"gray7\": \"rgb(18, 18, 18)\",\n  \"gray70\": \"rgb(179, 179, 179)\",\n  \"gray71\": \"rgb(181, 181, 181)\",\n  \"gray72\": \"rgb(184, 184, 184)\",\n  \"gray73\": \"rgb(186, 186, 186)\",\n  \"gray74\": \"rgb(189, 189, 189)\",\n  \"gray75\": \"rgb(191, 191, 191)\",\n  \"gray76\": \"rgb(194, 194, 194)\",\n  \"gray77\": \"rgb(196, 196, 196)\",\n  \"gray78\": \"rgb(199, 199, 199)\",\n  \"gray79\": \"rgb(201, 201, 201)\",\n  \"gray8\": \"rgb(20, 20, 20)\",\n  \"gray80\": \"rgb(204, 204, 204)\",\n  \"gray81\": \"rgb(207, 207, 207)\",\n  \"gray82\": \"rgb(209, 209, 209)\",\n  \"gray83\": \"rgb(212, 212, 212)\",\n  \"gray84\": \"rgb(214, 214, 214)\",\n  \"gray85\": \"rgb(217, 217, 217)\",\n  \"gray86\": \"rgb(219, 219, 219)\",\n  \"gray87\": \"rgb(222, 222, 222)\",\n  \"gray88\": \"rgb(224, 224, 224)\",\n  \"gray89\": \"rgb(227, 227, 227)\",\n  \"gray9\": \"rgb(23, 23, 23)\",\n  \"gray90\": \"rgb(229, 229, 229)\",\n  \"gray91\": \"rgb(232, 232, 232)\",\n  \"gray92\": \"rgb(235, 235, 235)\",\n  \"gray93\": \"rgb(237, 237, 237)\",\n  \"gray94\": \"rgb(240, 240, 240)\",\n  \"gray95\": \"rgb(242, 242, 242)\",\n  \"gray96\": \"rgb(245, 245, 245)\",\n  \"gray97\": \"rgb(247, 247, 247)\",\n  \"gray98\": \"rgb(250, 250, 250)\",\n  \"gray99\": \"rgb(252, 252, 252)\",\n  \"green\": \"rgb(0, 255, 0)\",\n  \"green1\": \"rgb(0, 255, 0)\",\n  \"green2\": \"rgb(0, 238, 0)\",\n  \"green3\": \"rgb(0, 205, 0)\",\n  \"green4\": \"rgb(0, 139, 0)\",\n  \"greenyellow\": \"rgb(173, 255, 47)\",\n  \"grey\": \"rgb(190, 190, 190)\",\n  \"grey0\": \"rgb(0, 0, 0)\",\n  \"grey1\": \"rgb(3, 3, 3)\",\n  \"grey10\": \"rgb(26, 26, 26)\",\n  \"grey100\": \"rgb(255, 255, 255)\",\n  \"grey11\": \"rgb(28, 28, 28)\",\n  \"grey12\": \"rgb(31, 31, 31)\",\n  \"grey13\": \"rgb(33, 33, 33)\",\n  \"grey14\": \"rgb(36, 36, 36)\",\n  \"grey15\": \"rgb(38, 38, 38)\",\n  \"grey16\": \"rgb(41, 41, 41)\",\n  \"grey17\": \"rgb(43, 43, 43)\",\n  \"grey18\": \"rgb(46, 46, 46)\",\n  \"grey19\": \"rgb(48, 48, 48)\",\n  \"grey2\": \"rgb(5, 5, 5)\",\n  \"grey20\": \"rgb(51, 51, 51)\",\n  \"grey21\": \"rgb(54, 54, 54)\",\n  \"grey22\": \"rgb(56, 56, 56)\",\n  \"grey23\": \"rgb(59, 59, 59)\",\n  \"grey24\": \"rgb(61, 61, 61)\",\n  \"grey25\": \"rgb(64, 64, 64)\",\n  \"grey26\": \"rgb(66, 66, 66)\",\n  \"grey27\": \"rgb(69, 69, 69)\",\n  \"grey28\": \"rgb(71, 71, 71)\",\n  \"grey29\": \"rgb(74, 74, 74)\",\n  \"grey3\": \"rgb(8, 8, 8)\",\n  \"grey30\": \"rgb(77, 77, 77)\",\n  \"grey31\": \"rgb(79, 79, 79)\",\n  \"grey32\": \"rgb(82, 82, 82)\",\n  \"grey33\": \"rgb(84, 84, 84)\",\n  \"grey34\": \"rgb(87, 87, 87)\",\n  \"grey35\": \"rgb(89, 89, 89)\",\n  \"grey36\": \"rgb(92, 92, 92)\",\n  \"grey37\": \"rgb(94, 94, 94)\",\n  \"grey38\": \"rgb(97, 97, 97)\",\n  \"grey39\": \"rgb(99, 99, 99)\",\n  \"grey4\": \"rgb(10, 10, 10)\",\n  \"grey40\": \"rgb(102, 102, 102)\",\n  \"grey41\": \"rgb(105, 105, 105)\",\n  \"grey42\": \"rgb(107, 107, 107)\",\n  \"grey43\": \"rgb(110, 110, 110)\",\n  \"grey44\": \"rgb(112, 112, 112)\",\n  \"grey45\": \"rgb(115, 115, 115)\",\n  \"grey46\": \"rgb(117, 117, 117)\",\n  \"grey47\": \"rgb(120, 120, 120)\",\n  \"grey48\": \"rgb(122, 122, 122)\",\n  \"grey49\": \"rgb(125, 125, 125)\",\n  \"grey5\": \"rgb(13, 13, 13)\",\n  \"grey50\": \"rgb(127, 127, 127)\",\n  \"grey51\": \"rgb(130, 130, 130)\",\n  \"grey52\": \"rgb(133, 133, 133)\",\n  \"grey53\": \"rgb(135, 135, 135)\",\n  \"grey54\": \"rgb(138, 138, 138)\",\n  \"grey55\": \"rgb(140, 140, 140)\",\n  \"grey56\": \"rgb(143, 143, 143)\",\n  \"grey57\": \"rgb(145, 145, 145)\",\n  \"grey58\": \"rgb(148, 148, 148)\",\n  \"grey59\": \"rgb(150, 150, 150)\",\n  \"grey6\": \"rgb(15, 15, 15)\",\n  \"grey60\": \"rgb(153, 153, 153)\",\n  \"grey61\": \"rgb(156, 156, 156)\",\n  \"grey62\": \"rgb(158, 158, 158)\",\n  \"grey63\": \"rgb(161, 161, 161)\",\n  \"grey64\": \"rgb(163, 163, 163)\",\n  \"grey65\": \"rgb(166, 166, 166)\",\n  \"grey66\": \"rgb(168, 168, 168)\",\n  \"grey67\": \"rgb(171, 171, 171)\",\n  \"grey68\": \"rgb(173, 173, 173)\",\n  \"grey69\": \"rgb(176, 176, 176)\",\n  \"grey7\": \"rgb(18, 18, 18)\",\n  \"grey70\": \"rgb(179, 179, 179)\",\n  \"grey71\": \"rgb(181, 181, 181)\",\n  \"grey72\": \"rgb(184, 184, 184)\",\n  \"grey73\": \"rgb(186, 186, 186)\",\n  \"grey74\": \"rgb(189, 189, 189)\",\n  \"grey75\": \"rgb(191, 191, 191)\",\n  \"grey76\": \"rgb(194, 194, 194)\",\n  \"grey77\": \"rgb(196, 196, 196)\",\n  \"grey78\": \"rgb(199, 199, 199)\",\n  \"grey79\": \"rgb(201, 201, 201)\",\n  \"grey8\": \"rgb(20, 20, 20)\",\n  \"grey80\": \"rgb(204, 204, 204)\",\n  \"grey81\": \"rgb(207, 207, 207)\",\n  \"grey82\": \"rgb(209, 209, 209)\",\n  \"grey83\": \"rgb(212, 212, 212)\",\n  \"grey84\": \"rgb(214, 214, 214)\",\n  \"grey85\": \"rgb(217, 217, 217)\",\n  \"grey86\": \"rgb(219, 219, 219)\",\n  \"grey87\": \"rgb(222, 222, 222)\",\n  \"grey88\": \"rgb(224, 224, 224)\",\n  \"grey89\": \"rgb(227, 227, 227)\",\n  \"grey9\": \"rgb(23, 23, 23)\",\n  \"grey90\": \"rgb(229, 229, 229)\",\n  \"grey91\": \"rgb(232, 232, 232)\",\n  \"grey92\": \"rgb(235, 235, 235)\",\n  \"grey93\": \"rgb(237, 237, 237)\",\n  \"grey94\": \"rgb(240, 240, 240)\",\n  \"grey95\": \"rgb(242, 242, 242)\",\n  \"grey96\": \"rgb(245, 245, 245)\",\n  \"grey97\": \"rgb(247, 247, 247)\",\n  \"grey98\": \"rgb(250, 250, 250)\",\n  \"grey99\": \"rgb(252, 252, 252)\",\n  \"honeydew\": \"rgb(240, 255, 240)\",\n  \"honeydew1\": \"rgb(240, 255, 240)\",\n  \"honeydew2\": \"rgb(224, 238, 224)\",\n  \"honeydew3\": \"rgb(193, 205, 193)\",\n  \"honeydew4\": \"rgb(131, 139, 131)\",\n  \"hotpink\": \"rgb(255, 105, 180)\",\n  \"hotpink1\": \"rgb(255, 110, 180)\",\n  \"hotpink2\": \"rgb(238, 106, 167)\",\n  \"hotpink3\": \"rgb(205, 96, 144)\",\n  \"hotpink4\": \"rgb(139, 58, 98)\",\n  \"indianred\": \"rgb(205, 92, 92)\",\n  \"indianred1\": \"rgb(255, 106, 106)\",\n  \"indianred2\": \"rgb(238, 99, 99)\",\n  \"indianred3\": \"rgb(205, 85, 85)\",\n  \"indianred4\": \"rgb(139, 58, 58)\",\n  \"ivory\": \"rgb(255, 255, 240)\",\n  \"ivory1\": \"rgb(255, 255, 240)\",\n  \"ivory2\": \"rgb(238, 238, 224)\",\n  \"ivory3\": \"rgb(205, 205, 193)\",\n  \"ivory4\": \"rgb(139, 139, 131)\",\n  \"khaki\": \"rgb(240, 230, 140)\",\n  \"khaki1\": \"rgb(255, 246, 143)\",\n  \"khaki2\": \"rgb(238, 230, 133)\",\n  \"khaki3\": \"rgb(205, 198, 115)\",\n  \"khaki4\": \"rgb(139, 134, 78)\",\n  \"lavender\": \"rgb(230, 230, 250)\",\n  \"lavenderblush\": \"rgb(255, 240, 245)\",\n  \"lavenderblush1\": \"rgb(255, 240, 245)\",\n  \"lavenderblush2\": \"rgb(238, 224, 229)\",\n  \"lavenderblush3\": \"rgb(205, 193, 197)\",\n  \"lavenderblush4\": \"rgb(139, 131, 134)\",\n  \"lawngreen\": \"rgb(124, 252, 0)\",\n  \"lemonchiffon\": \"rgb(255, 250, 205)\",\n  \"lemonchiffon1\": \"rgb(255, 250, 205)\",\n  \"lemonchiffon2\": \"rgb(238, 233, 191)\",\n  \"lemonchiffon3\": \"rgb(205, 201, 165)\",\n  \"lemonchiffon4\": \"rgb(139, 137, 112)\",\n  \"lightblue\": \"rgb(173, 216, 230)\",\n  \"lightblue1\": \"rgb(191, 239, 255)\",\n  \"lightblue2\": \"rgb(178, 223, 238)\",\n  \"lightblue3\": \"rgb(154, 192, 205)\",\n  \"lightblue4\": \"rgb(104, 131, 139)\",\n  \"lightcoral\": \"rgb(240, 128, 128)\",\n  \"lightcyan\": \"rgb(224, 255, 255)\",\n  \"lightcyan1\": \"rgb(224, 255, 255)\",\n  \"lightcyan2\": \"rgb(209, 238, 238)\",\n  \"lightcyan3\": \"rgb(180, 205, 205)\",\n  \"lightcyan4\": \"rgb(122, 139, 139)\",\n  \"lightgoldenrod\": \"rgb(238, 221, 130)\",\n  \"lightgoldenrod1\": \"rgb(255, 236, 139)\",\n  \"lightgoldenrod2\": \"rgb(238, 220, 130)\",\n  \"lightgoldenrod3\": \"rgb(205, 190, 112)\",\n  \"lightgoldenrod4\": \"rgb(139, 129, 76)\",\n  \"lightgoldenrodyellow\": \"rgb(250, 250, 210)\",\n  \"lightgray\": \"rgb(211, 211, 211)\",\n  \"lightgreen\": \"rgb(144, 238, 144)\",\n  \"lightgrey\": \"rgb(211, 211, 211)\",\n  \"lightpink\": \"rgb(255, 182, 193)\",\n  \"lightpink1\": \"rgb(255, 174, 185)\",\n  \"lightpink2\": \"rgb(238, 162, 173)\",\n  \"lightpink3\": \"rgb(205, 140, 149)\",\n  \"lightpink4\": \"rgb(139, 95, 101)\",\n  \"lightsalmon\": \"rgb(255, 160, 122)\",\n  \"lightsalmon1\": \"rgb(255, 160, 122)\",\n  \"lightsalmon2\": \"rgb(238, 149, 114)\",\n  \"lightsalmon3\": \"rgb(205, 129, 98)\",\n  \"lightsalmon4\": \"rgb(139, 87, 66)\",\n  \"lightseagreen\": \"rgb(32, 178, 170)\",\n  \"lightskyblue\": \"rgb(135, 206, 250)\",\n  \"lightskyblue1\": \"rgb(176, 226, 255)\",\n  \"lightskyblue2\": \"rgb(164, 211, 238)\",\n  \"lightskyblue3\": \"rgb(141, 182, 205)\",\n  \"lightskyblue4\": \"rgb(96, 123, 139)\",\n  \"lightslateblue\": \"rgb(132, 112, 255)\",\n  \"lightslategray\": \"rgb(119, 136, 153)\",\n  \"lightslategrey\": \"rgb(119, 136, 153)\",\n  \"lightsteelblue\": \"rgb(176, 196, 222)\",\n  \"lightsteelblue1\": \"rgb(202, 225, 255)\",\n  \"lightsteelblue2\": \"rgb(188, 210, 238)\",\n  \"lightsteelblue3\": \"rgb(162, 181, 205)\",\n  \"lightsteelblue4\": \"rgb(110, 123, 139)\",\n  \"lightyellow\": \"rgb(255, 255, 224)\",\n  \"lightyellow1\": \"rgb(255, 255, 224)\",\n  \"lightyellow2\": \"rgb(238, 238, 209)\",\n  \"lightyellow3\": \"rgb(205, 205, 180)\",\n  \"lightyellow4\": \"rgb(139, 139, 122)\",\n  \"limegreen\": \"rgb(50, 205, 50)\",\n  \"linen\": \"rgb(250, 240, 230)\",\n  \"magenta\": \"rgb(255, 0, 255)\",\n  \"magenta1\": \"rgb(255, 0, 255)\",\n  \"magenta2\": \"rgb(238, 0, 238)\",\n  \"magenta3\": \"rgb(205, 0, 205)\",\n  \"magenta4\": \"rgb(139, 0, 139)\",\n  \"maroon\": \"rgb(176, 48, 96)\",\n  \"maroon1\": \"rgb(255, 52, 179)\",\n  \"maroon2\": \"rgb(238, 48, 167)\",\n  \"maroon3\": \"rgb(205, 41, 144)\",\n  \"maroon4\": \"rgb(139, 28, 98)\",\n  \"mediumaquamarine\": \"rgb(102, 205, 170)\",\n  \"mediumblue\": \"rgb(0, 0, 205)\",\n  \"mediumorchid\": \"rgb(186, 85, 211)\",\n  \"mediumorchid1\": \"rgb(224, 102, 255)\",\n  \"mediumorchid2\": \"rgb(209, 95, 238)\",\n  \"mediumorchid3\": \"rgb(180, 82, 205)\",\n  \"mediumorchid4\": \"rgb(122, 55, 139)\",\n  \"mediumpurple\": \"rgb(147, 112, 219)\",\n  \"mediumpurple1\": \"rgb(171, 130, 255)\",\n  \"mediumpurple2\": \"rgb(159, 121, 238)\",\n  \"mediumpurple3\": \"rgb(137, 104, 205)\",\n  \"mediumpurple4\": \"rgb(93, 71, 139)\",\n  \"mediumseagreen\": \"rgb(60, 179, 113)\",\n  \"mediumslateblue\": \"rgb(123, 104, 238)\",\n  \"mediumspringgreen\": \"rgb(0, 250, 154)\",\n  \"mediumturquoise\": \"rgb(72, 209, 204)\",\n  \"mediumvioletred\": \"rgb(199, 21, 133)\",\n  \"midnightblue\": \"rgb(25, 25, 112)\",\n  \"mintcream\": \"rgb(245, 255, 250)\",\n  \"mistyrose\": \"rgb(255, 228, 225)\",\n  \"mistyrose1\": \"rgb(255, 228, 225)\",\n  \"mistyrose2\": \"rgb(238, 213, 210)\",\n  \"mistyrose3\": \"rgb(205, 183, 181)\",\n  \"mistyrose4\": \"rgb(139, 125, 123)\",\n  \"moccasin\": \"rgb(255, 228, 181)\",\n  \"navajowhite\": \"rgb(255, 222, 173)\",\n  \"navajowhite1\": \"rgb(255, 222, 173)\",\n  \"navajowhite2\": \"rgb(238, 207, 161)\",\n  \"navajowhite3\": \"rgb(205, 179, 139)\",\n  \"navajowhite4\": \"rgb(139, 121, 94)\",\n  \"navy\": \"rgb(0, 0, 128)\",\n  \"navyblue\": \"rgb(0, 0, 128)\",\n  \"oldlace\": \"rgb(253, 245, 230)\",\n  \"olivedrab\": \"rgb(107, 142, 35)\",\n  \"olivedrab1\": \"rgb(192, 255, 62)\",\n  \"olivedrab2\": \"rgb(179, 238, 58)\",\n  \"olivedrab3\": \"rgb(154, 205, 50)\",\n  \"olivedrab4\": \"rgb(105, 139, 34)\",\n  \"orange\": \"rgb(255, 165, 0)\",\n  \"orange1\": \"rgb(255, 165, 0)\",\n  \"orange2\": \"rgb(238, 154, 0)\",\n  \"orange3\": \"rgb(205, 133, 0)\",\n  \"orange4\": \"rgb(139, 90, 0)\",\n  \"orangered\": \"rgb(255, 69, 0)\",\n  \"orangered1\": \"rgb(255, 69, 0)\",\n  \"orangered2\": \"rgb(238, 64, 0)\",\n  \"orangered3\": \"rgb(205, 55, 0)\",\n  \"orangered4\": \"rgb(139, 37, 0)\",\n  \"orchid\": \"rgb(218, 112, 214)\",\n  \"orchid1\": \"rgb(255, 131, 250)\",\n  \"orchid2\": \"rgb(238, 122, 233)\",\n  \"orchid3\": \"rgb(205, 105, 201)\",\n  \"orchid4\": \"rgb(139, 71, 137)\",\n  \"palegoldenrod\": \"rgb(238, 232, 170)\",\n  \"palegreen\": \"rgb(152, 251, 152)\",\n  \"palegreen1\": \"rgb(154, 255, 154)\",\n  \"palegreen2\": \"rgb(144, 238, 144)\",\n  \"palegreen3\": \"rgb(124, 205, 124)\",\n  \"palegreen4\": \"rgb(84, 139, 84)\",\n  \"paleturquoise\": \"rgb(175, 238, 238)\",\n  \"paleturquoise1\": \"rgb(187, 255, 255)\",\n  \"paleturquoise2\": \"rgb(174, 238, 238)\",\n  \"paleturquoise3\": \"rgb(150, 205, 205)\",\n  \"paleturquoise4\": \"rgb(102, 139, 139)\",\n  \"palevioletred\": \"rgb(219, 112, 147)\",\n  \"palevioletred1\": \"rgb(255, 130, 171)\",\n  \"palevioletred2\": \"rgb(238, 121, 159)\",\n  \"palevioletred3\": \"rgb(205, 104, 137)\",\n  \"palevioletred4\": \"rgb(139, 71, 93)\",\n  \"papayawhip\": \"rgb(255, 239, 213)\",\n  \"peachpuff\": \"rgb(255, 218, 185)\",\n  \"peachpuff1\": \"rgb(255, 218, 185)\",\n  \"peachpuff2\": \"rgb(238, 203, 173)\",\n  \"peachpuff3\": \"rgb(205, 175, 149)\",\n  \"peachpuff4\": \"rgb(139, 119, 101)\",\n  \"peru\": \"rgb(205, 133, 63)\",\n  \"pink\": \"rgb(255, 192, 203)\",\n  \"pink1\": \"rgb(255, 181, 197)\",\n  \"pink2\": \"rgb(238, 169, 184)\",\n  \"pink3\": \"rgb(205, 145, 158)\",\n  \"pink4\": \"rgb(139, 99, 108)\",\n  \"plum\": \"rgb(221, 160, 221)\",\n  \"plum1\": \"rgb(255, 187, 255)\",\n  \"plum2\": \"rgb(238, 174, 238)\",\n  \"plum3\": \"rgb(205, 150, 205)\",\n  \"plum4\": \"rgb(139, 102, 139)\",\n  \"powderblue\": \"rgb(176, 224, 230)\",\n  \"purple\": \"rgb(160, 32, 240)\",\n  \"purple1\": \"rgb(155, 48, 255)\",\n  \"purple2\": \"rgb(145, 44, 238)\",\n  \"purple3\": \"rgb(125, 38, 205)\",\n  \"purple4\": \"rgb(85, 26, 139)\",\n  \"red\": \"rgb(255, 0, 0)\",\n  \"red1\": \"rgb(255, 0, 0)\",\n  \"red2\": \"rgb(238, 0, 0)\",\n  \"red3\": \"rgb(205, 0, 0)\",\n  \"red4\": \"rgb(139, 0, 0)\",\n  \"rosybrown\": \"rgb(188, 143, 143)\",\n  \"rosybrown1\": \"rgb(255, 193, 193)\",\n  \"rosybrown2\": \"rgb(238, 180, 180)\",\n  \"rosybrown3\": \"rgb(205, 155, 155)\",\n  \"rosybrown4\": \"rgb(139, 105, 105)\",\n  \"royalblue\": \"rgb(65, 105, 225)\",\n  \"royalblue1\": \"rgb(72, 118, 255)\",\n  \"royalblue2\": \"rgb(67, 110, 238)\",\n  \"royalblue3\": \"rgb(58, 95, 205)\",\n  \"royalblue4\": \"rgb(39, 64, 139)\",\n  \"saddlebrown\": \"rgb(139, 69, 19)\",\n  \"salmon\": \"rgb(250, 128, 114)\",\n  \"salmon1\": \"rgb(255, 140, 105)\",\n  \"salmon2\": \"rgb(238, 130, 98)\",\n  \"salmon3\": \"rgb(205, 112, 84)\",\n  \"salmon4\": \"rgb(139, 76, 57)\",\n  \"sandybrown\": \"rgb(244, 164, 96)\",\n  \"seagreen\": \"rgb(46, 139, 87)\",\n  \"seagreen1\": \"rgb(84, 255, 159)\",\n  \"seagreen2\": \"rgb(78, 238, 148)\",\n  \"seagreen3\": \"rgb(67, 205, 128)\",\n  \"seagreen4\": \"rgb(46, 139, 87)\",\n  \"seashell\": \"rgb(255, 245, 238)\",\n  \"seashell1\": \"rgb(255, 245, 238)\",\n  \"seashell2\": \"rgb(238, 229, 222)\",\n  \"seashell3\": \"rgb(205, 197, 191)\",\n  \"seashell4\": \"rgb(139, 134, 130)\",\n  \"sienna\": \"rgb(160, 82, 45)\",\n  \"sienna1\": \"rgb(255, 130, 71)\",\n  \"sienna2\": \"rgb(238, 121, 66)\",\n  \"sienna3\": \"rgb(205, 104, 57)\",\n  \"sienna4\": \"rgb(139, 71, 38)\",\n  \"skyblue\": \"rgb(135, 206, 235)\",\n  \"skyblue1\": \"rgb(135, 206, 255)\",\n  \"skyblue2\": \"rgb(126, 192, 238)\",\n  \"skyblue3\": \"rgb(108, 166, 205)\",\n  \"skyblue4\": \"rgb(74, 112, 139)\",\n  \"slateblue\": \"rgb(106, 90, 205)\",\n  \"slateblue1\": \"rgb(131, 111, 255)\",\n  \"slateblue2\": \"rgb(122, 103, 238)\",\n  \"slateblue3\": \"rgb(105, 89, 205)\",\n  \"slateblue4\": \"rgb(71, 60, 139)\",\n  \"slategray\": \"rgb(112, 128, 144)\",\n  \"slategray1\": \"rgb(198, 226, 255)\",\n  \"slategray2\": \"rgb(185, 211, 238)\",\n  \"slategray3\": \"rgb(159, 182, 205)\",\n  \"slategray4\": \"rgb(108, 123, 139)\",\n  \"slategrey\": \"rgb(112, 128, 144)\",\n  \"snow\": \"rgb(255, 250, 250)\",\n  \"snow1\": \"rgb(255, 250, 250)\",\n  \"snow2\": \"rgb(238, 233, 233)\",\n  \"snow3\": \"rgb(205, 201, 201)\",\n  \"snow4\": \"rgb(139, 137, 137)\",\n  \"springgreen\": \"rgb(0, 255, 127)\",\n  \"springgreen1\": \"rgb(0, 255, 127)\",\n  \"springgreen2\": \"rgb(0, 238, 118)\",\n  \"springgreen3\": \"rgb(0, 205, 102)\",\n  \"springgreen4\": \"rgb(0, 139, 69)\",\n  \"steelblue\": \"rgb(70, 130, 180)\",\n  \"steelblue1\": \"rgb(99, 184, 255)\",\n  \"steelblue2\": \"rgb(92, 172, 238)\",\n  \"steelblue3\": \"rgb(79, 148, 205)\",\n  \"steelblue4\": \"rgb(54, 100, 139)\",\n  \"tan\": \"rgb(210, 180, 140)\",\n  \"tan1\": \"rgb(255, 165, 79)\",\n  \"tan2\": \"rgb(238, 154, 73)\",\n  \"tan3\": \"rgb(205, 133, 63)\",\n  \"tan4\": \"rgb(139, 90, 43)\",\n  \"thistle\": \"rgb(216, 191, 216)\",\n  \"thistle1\": \"rgb(255, 225, 255)\",\n  \"thistle2\": \"rgb(238, 210, 238)\",\n  \"thistle3\": \"rgb(205, 181, 205)\",\n  \"thistle4\": \"rgb(139, 123, 139)\",\n  \"tomato\": \"rgb(255, 99, 71)\",\n  \"tomato1\": \"rgb(255, 99, 71)\",\n  \"tomato2\": \"rgb(238, 92, 66)\",\n  \"tomato3\": \"rgb(205, 79, 57)\",\n  \"tomato4\": \"rgb(139, 54, 38)\",\n  \"turquoise\": \"rgb(64, 224, 208)\",\n  \"turquoise1\": \"rgb(0, 245, 255)\",\n  \"turquoise2\": \"rgb(0, 229, 238)\",\n  \"turquoise3\": \"rgb(0, 197, 205)\",\n  \"turquoise4\": \"rgb(0, 134, 139)\",\n  \"violet\": \"rgb(238, 130, 238)\",\n  \"violetred\": \"rgb(208, 32, 144)\",\n  \"violetred1\": \"rgb(255, 62, 150)\",\n  \"violetred2\": \"rgb(238, 58, 140)\",\n  \"violetred3\": \"rgb(205, 50, 120)\",\n  \"violetred4\": \"rgb(139, 34, 82)\",\n  \"wheat\": \"rgb(245, 222, 179)\",\n  \"wheat1\": \"rgb(255, 231, 186)\",\n  \"wheat2\": \"rgb(238, 216, 174)\",\n  \"wheat3\": \"rgb(205, 186, 150)\",\n  \"wheat4\": \"rgb(139, 126, 102)\",\n  \"white\": \"rgb(255, 255, 255)\",\n  \"whitesmoke\": \"rgb(245, 245, 245)\",\n  \"yellow\": \"rgb(255, 255, 0)\",\n  \"yellow1\": \"rgb(255, 255, 0)\",\n  \"yellow2\": \"rgb(238, 238, 0)\",\n  \"yellow3\": \"rgb(205, 205, 0)\",\n  \"yellow4\": \"rgb(139, 139, 0)\",\n  \"yellowgreen\": \"rgb(154, 205, 50)\"\n};\n// SOURCE FILE: libdot/js/lib_f.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Grab bag of utility functions.\n */\nlib.f = {};\n\n/**\n * Replace variable references in a string.\n *\n * Variables are of the form %FUNCTION(VARNAME).  FUNCTION is an optional\n * escape function to apply to the value.\n *\n * For example\n *   lib.f.replaceVars(\"%(greeting), %encodeURIComponent(name)\",\n *                     { greeting: \"Hello\",\n *                       name: \"Google+\" });\n *\n * Will result in \"Hello, Google%2B\".\n *\n * @param {string} str String containing variable references.\n * @param {!Object<string, string>} vars Variables to substitute in.\n * @return {string} String with references substituted.\n */\nlib.f.replaceVars = function(str, vars) {\n  return str.replace(/%([a-z]*)\\(([^\\)]+)\\)/gi, function(match, fn, varname) {\n      if (typeof vars[varname] == 'undefined')\n        throw 'Unknown variable: ' + varname;\n\n      var rv = vars[varname];\n\n      if (fn in lib.f.replaceVars.functions) {\n        rv = lib.f.replaceVars.functions[fn](rv);\n      } else if (fn) {\n        throw 'Unknown escape function: ' + fn;\n      }\n\n      return rv;\n    });\n};\n\n/**\n * Functions that can be used with replaceVars.\n *\n * Clients can add to this list to extend lib.f.replaceVars().\n */\nlib.f.replaceVars.functions = {\n  encodeURI: encodeURI,\n  encodeURIComponent: encodeURIComponent,\n  escapeHTML: function(str) {\n    var map = {\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    return str.replace(/[<>&\\\"\\']/g, (m) => map[m]);\n  }\n};\n\n/**\n * Convert a relative path to a fully qulified URI.\n *\n * @param {string} path Relative path\n * @return {string} Fully qualified URI.\n */\nlib.f.getURL = function(path) {\n  if (lib.f.getURL.chromeSupported())\n    return chrome.runtime.getURL(path);\n\n  return path;\n};\n\n/**\n * Determine whether the runtime is Chrome (or equiv).\n *\n * @return {boolean} True if chrome.runtime.getURL is supported.\n */\nlib.f.getURL.chromeSupported = function() {\n  return window.chrome && chrome.runtime && chrome.runtime.getURL;\n};\n\n/**\n * Clamp a given integer to a specified range.\n *\n * @param {number} v The value to be clamped.\n * @param {number} min The minimum acceptable value.\n * @param {number} max The maximum acceptable value.\n * @return {number} The clamped value.\n */\nlib.f.clamp = function(v, min, max) {\n  if (v < min)\n    return min;\n  if (v > max)\n    return max;\n  return v;\n};\n\n/**\n * Left pad a number to a given length with leading zeros.\n *\n * @param {string|number} number The number to pad.\n * @param {number} length The desired length.\n * @return {string} The padded number as a string.\n */\nlib.f.zpad = function(number, length) {\n  return String(number).padStart(length, '0');\n};\n\n/**\n * Return the current call stack after skipping a given number of frames.\n *\n * This method is intended to be used for debugging only.  It returns an\n * Object instead of an Array, because the console stringifies arrays by\n * default and that's not what we want.\n *\n * A typical call might look like...\n *\n *    console.log('Something wicked this way came', lib.f.getStack());\n *    //                         Notice the comma ^\n *\n * This would print the message to the js console, followed by an object\n * which can be clicked to reveal the stack.\n *\n * @param {number=} ignoreFrames How many inner stack frames to ignore.  The\n *     innermost 'getStack' call is always ignored.\n * @param {number=} count How many frames to return.\n * @return {!Array<string>} The stack frames.\n */\nlib.f.getStack = function(ignoreFrames = 0, count = undefined) {\n  const stackArray = (new Error()).stack.split('\\n');\n\n  // Always ignore the Error() object and getStack call itself.\n  // [0] = 'Error'\n  // [1] = '    at Object.lib.f.getStack (file:///.../lib_f.js:267:23)'\n  ignoreFrames += 2;\n\n  const max = stackArray.length - ignoreFrames;\n  if (count === undefined)\n    count = max;\n  else\n    count = lib.f.clamp(count, 0, max);\n\n  // Remove the leading spaces and \"at\" from each line:\n  // '    at window.onload (file:///.../lib_test.js:11:18)'\n  const stackObject = new Array();\n  for (let i = ignoreFrames; i < count + ignoreFrames; ++i)\n    stackObject.push(stackArray[i].replace(/^\\s*at\\s+/, ''));\n\n  return stackObject;\n};\n\n/**\n * Divides the two numbers and floors the results, unless the remainder is less\n * than an incredibly small value, in which case it returns the ceiling.\n * This is useful when the number are truncated approximations of longer\n * values, and so doing division with these numbers yields a result incredibly\n * close to a whole number.\n *\n * @param {number} numerator\n * @param {number} denominator\n * @return {number}\n */\nlib.f.smartFloorDivide = function(numerator,  denominator) {\n  var val = numerator / denominator;\n  var ceiling = Math.ceil(val);\n  if (ceiling - val < .0001) {\n    return ceiling;\n  } else {\n    return Math.floor(val);\n  }\n};\n\n/**\n * Get a random integer in a range (inclusive).\n *\n * @param {number} min The lowest integer in the range.\n * @param {number} max The highest integer in the range.\n * @return {number} A random number between min & max.\n */\nlib.f.randomInt = function(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * Get the current OS.\n *\n * @return {!Promise<string>} A promise that resolves to a constant in\n *     runtime.PlatformOs.\n */\nlib.f.getOs = function() {\n  // Try the brower extensions API.\n  if (window.browser && browser.runtime && browser.runtime.getPlatformInfo)\n    return browser.runtime.getPlatformInfo().then((info) => info.os);\n\n  // Use the native Chrome API if available.\n  if (window.chrome && chrome.runtime && chrome.runtime.getPlatformInfo) {\n    return new Promise((resolve, reject) =>\n        chrome.runtime.getPlatformInfo((info) => resolve(info.os)));\n  }\n\n  // Fallback logic.  Capture the major OS's.  The rest should support the\n  // browser API above.\n  if (window.navigator && navigator.userAgent) {\n    const ua = navigator.userAgent;\n    if (ua.includes('Mac OS X'))\n      return Promise.resolve('mac');\n    else if (ua.includes('CrOS'))\n      return Promise.resolve('cros');\n    else if (ua.includes('Linux'))\n      return Promise.resolve('linux');\n    else if (ua.includes('Android'))\n      return Promise.resolve('android');\n    else if (ua.includes('Windows'))\n      return Promise.resolve('windows');\n  }\n\n  // Probe node environment.\n  if (typeof process != 'undefined') {\n    return Promise.resolve('node');\n  }\n\n  // Still here?  No idea.\n  return Promise.reject(null);\n};\n\n/**\n * Get the current Chrome milestone version.\n *\n * @return {number} The milestone number if we're running on Chrome, else NaN.\n */\nlib.f.getChromeMilestone = function() {\n  if (window.navigator && navigator.userAgent) {\n    const ary = navigator.userAgent.match(/\\sChrome\\/(\\d+)/);\n    if (ary)\n      return parseInt(ary[1], 10);\n  }\n\n  // Returning NaN will make all number comparisons fail.\n  return NaN;\n};\n\n/**\n * Return the lastError string in the browser.\n *\n * This object might live in different locations, and it isn't always defined\n * (if there hasn't been a \"last error\").  Wrap all that ugliness here.\n *\n * @param {?string=} defaultMsg The default message if no error is found.\n * @return {?string} The last error message from the browser.\n */\nlib.f.lastError = function(defaultMsg = null) {\n  let lastError;\n  if (window.browser && browser.runtime)\n    lastError = browser.runtime.lastError;\n  else if (window.chrome && chrome.runtime)\n    lastError = chrome.runtime.lastError;\n\n  if (lastError && lastError.message)\n    return lastError.message;\n  else\n    return defaultMsg;\n};\n\n/**\n * Just like window.open, but enforce noopener.\n *\n * If we're not careful, the website we open will have access to use via its\n * window.opener field.  Newer browser support putting 'noopener' into the\n * features argument, but there are many which still don't.  So hack it.\n *\n * @param {string=} url The URL to point the new window to.\n * @param {string=} name The name of the new window.\n * @param {string=} features The window features to enable.\n * @return {?Window} The newly opened window.\n */\nlib.f.openWindow = function(url, name=undefined, features=undefined) {\n  // We create the window first without the URL loaded.\n  const win = window.open(undefined, name, features);\n\n  // If the system is blocking window.open, don't crash.\n  if (win !== null) {\n    // Clear the opener setting before redirecting.\n    win.opener = null;\n\n    // Now it's safe to redirect.  Skip this step if the url is not set so we\n    // mimic the window.open behavior more precisely.\n    if (url) {\n      win.location = url;\n    }\n  }\n\n  return win;\n};\n// SOURCE FILE: libdot/js/lib_i18n.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Wrappers over the browser i18n helpers.\n *\n * Arguably some of these functions should be l10n, but oh well.\n */\nlib.i18n = {};\n\n/**\n * Convenience shortcut to the browser i18n object.\n */\nlib.i18n.browser_ =\n    window.browser && browser.i18n ? browser.i18n :\n    window.chrome && chrome.i18n ? chrome.i18n :\n    null;\n\n/**\n * Return whether the browser supports i18n natively.\n *\n * @return {boolean} True if browser.i18n or chrome.i18n exists.\n */\nlib.i18n.browserSupported = function() {\n  return lib.i18n.browser_ !== null;\n};\n\n/**\n * Get the list of accepted UI languages.\n *\n * https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/i18n/getAcceptLanguages\n *\n * @param {function(!Array<string>)} callback Function to invoke with the\n *     results.  The parameter is a list of locale names.\n */\nlib.i18n.getAcceptLanguages = function(callback) {\n  if (lib.i18n.browser_) {\n    lib.i18n.browser_.getAcceptLanguages(callback);\n  } else {\n    setTimeout(function() {\n        callback([navigator.language.replace(/-/g, '_')]);\n      }, 0);\n  }\n};\n\n/**\n * Get a message by name, optionally replacing arguments too.\n *\n * https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/i18n/getMessage\n *\n * @param {string} msgname The id for this localized string.\n * @param {?Array<string>=} substitutions Any replacements in the string.\n * @param {string=} fallback Translation if the message wasn't found.\n * @return {string} The translated message.\n */\nlib.i18n.getMessage = function(msgname, substitutions = [], fallback = '') {\n  // First let the native browser APIs handle everything for us.\n  if (lib.i18n.browser_) {\n    const message = lib.i18n.browser_.getMessage(msgname, substitutions);\n    if (message)\n      return message;\n  }\n\n  // Do our best to get something reasonable.\n  return lib.i18n.replaceReferences(fallback, substitutions);\n};\n\n/**\n * Replace $1...$n references with the elements of the args array.\n *\n * This largely behaves like Chrome's getMessage helper.  The $# references are\n * always replaced/removed regardless of the specified substitutions.\n *\n * @param {string} msg String containing the message and argument references.\n * @param {?Array<string>=} args Array containing the argument values.\n * @return {string} The message with replacements expanded.\n */\nlib.i18n.replaceReferences = function(msg, args = []) {\n  // The Chrome API allows a single substitution as a string rather than array.\n  if (args === null) {\n    args = [];\n  }\n  if (!(args instanceof Array)) {\n    args = [args];\n  }\n\n  return msg.replace(/\\$(\\d+)/g, (m, index) => {\n    return index <= args.length ? args[index - 1] : '';\n  });\n};\n// SOURCE FILE: libdot/js/lib_message_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * MessageManager class handles internationalized strings.\n *\n * Note: chrome.i18n isn't sufficient because...\n *     1. There's a bug in chrome that makes it unavailable in iframes:\n *        https://crbug.com/130200\n *     2. The client code may not be packaged in a Chrome extension.\n *     3. The client code may be part of a library packaged in a third-party\n *        Chrome extension.\n *\n * @param {!Array<string>} languages List of languages to load, in the order\n *     they are preferred.  The first language found will be used.  'en' is\n *     automatically added as the last language if it is not already present.\n * @param {boolean=} useCrlf If true, '\\n' in messages are substituted for\n *     '\\r\\n'.  This fixes the translation process which discards '\\r'\n *     characters.\n * @constructor\n */\nlib.MessageManager = function(languages, useCrlf = false) {\n  this.languages_ = languages.map((el) => el.replace(/-/g, '_'));\n\n  if (this.languages_.indexOf('en') == -1)\n    this.languages_.push('en');\n\n  this.useCrlf = useCrlf;\n\n  /**\n   * @private {!Object<string, string>}\n   * @const\n   */\n  this.messages_ = {};\n};\n\n/**\n * @typedef {!Object<string, {\n *     message: string,\n *     description: (string|undefined),\n *     placeholders: ({content: string, example: string}|undefined),\n * }>}\n */\nlib.MessageManager.Messages;\n\n/**\n * Add message definitions to the message manager.\n *\n * This takes an object of the same format of a Chrome messages.json file.  See\n * <https://developer.chrome.com/extensions/i18n-messages>.\n *\n * @param {!lib.MessageManager.Messages} defs The message to add to the\n *     database.\n */\nlib.MessageManager.prototype.addMessages = function(defs) {\n  for (var key in defs) {\n    var def = defs[key];\n\n    if (!def.placeholders) {\n      // Upper case key into this.messages_ since our translated\n      // bundles are lower case, but we request msg as upper.\n      this.messages_[key.toUpperCase()] = def.message;\n    } else {\n      // Replace \"$NAME$\" placeholders with \"$1\", etc.\n      this.messages_[key.toUpperCase()] =\n          def.message.replace(/\\$([a-z][^\\s\\$]+)\\$/ig, function(m, name) {\n            return defs[key].placeholders[name.toLowerCase()].content;\n          });\n    }\n  }\n};\n\n/**\n * Load the first available language message bundle.\n *\n * @param {string} pattern A url pattern containing a \"$1\" where the locale\n *     name should go.\n */\nlib.MessageManager.prototype.findAndLoadMessages = async function(pattern) {\n  if (lib.i18n.browserSupported()) {\n    return;\n  }\n\n  for (const lang of this.languages_) {\n    const url = lib.i18n.replaceReferences(pattern, lang);\n    try {\n      await this.loadMessages(url);\n      return;\n    } catch (e) {\n      console.warn(\n          `Error fetching ${lang} messages at ${url}`, e,\n          'Trying all languages:', this.languages_);\n    }\n  }\n};\n\n/**\n * Load messages from a messages.json file.\n *\n * @param {string} url The URL to load the messages from.\n * @return {!Promise<void>}\n */\nlib.MessageManager.prototype.loadMessages = function(url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n      try {\n        this.addMessages(/** @type {!lib.MessageManager.Messages} */ (\n            JSON.parse(xhr.responseText)));\n        resolve();\n      } catch (e) {\n        // Error parsing JSON.\n        reject(e);\n      }\n    };\n    xhr.onerror = () => reject(xhr);\n\n    xhr.open('GET', url);\n    xhr.send();\n  });\n};\n\n/**\n * Get a message by name, optionally replacing arguments too.\n *\n * @param {string} msgname String containing the name of the message to get.\n * @param {!Array<string>=} args Optional array containing the argument values.\n * @param {string=} fallback Optional value to return if the msgname is not\n *     found.  Returns the message name by default.\n * @return {string} The formatted translation.\n */\nlib.MessageManager.prototype.get = function(msgname, args, fallback) {\n  // First try the integrated browser getMessage.  We prefer that over any\n  // registered messages as only the browser supports translations.\n  let message = lib.i18n.getMessage(msgname, args);\n  if (!message) {\n    // Look it up in the registered cache next.\n    message = this.messages_[msgname];\n    if (!message) {\n      console.warn('Unknown message: ' + msgname);\n      message = fallback === undefined ? msgname : fallback;\n      // Register the message with the default to avoid multiple warnings.\n      this.messages_[msgname] = message;\n    }\n    message = lib.i18n.replaceReferences(message, args);\n  }\n  if (this.useCrlf) {\n    message = message.replace(/\\n/g, '\\r\\n');\n  }\n  return message;\n};\n\n/**\n * Process all of the \"i18n\" html attributes found in a given element.\n *\n * The real work happens in processI18nAttribute.\n *\n * @param {!Element} node The element whose nodes will be translated.\n */\nlib.MessageManager.prototype.processI18nAttributes = function(node) {\n  var nodes = node.querySelectorAll('[i18n]');\n\n  for (var i = 0; i < nodes.length; i++)\n    this.processI18nAttribute(nodes[i]);\n};\n\n/**\n * Process the \"i18n\" attribute in the specified node.\n *\n * The i18n attribute should contain a JSON object.  The keys are taken to\n * be attribute names, and the values are message names.\n *\n * If the JSON object has a \"_\" (underscore) key, its value is used as the\n * textContent of the element.\n *\n * Message names can refer to other attributes on the same element with by\n * prefixing with a dollar sign.  For example...\n *\n *   <button id='send-button'\n *           i18n='{\"aria-label\": \"$id\", \"_\": \"SEND_BUTTON_LABEL\"}'\n *           ></button>\n *\n * The aria-label message name will be computed as \"SEND_BUTTON_ARIA_LABEL\".\n * Notice that the \"id\" attribute was appended to the target attribute, and\n * the result converted to UPPER_AND_UNDER style.\n *\n * @param {!Element} node The element to translate.\n */\nlib.MessageManager.prototype.processI18nAttribute = function(node) {\n  // Convert the \"lower-and-dashes\" attribute names into\n  // \"UPPER_AND_UNDER\" style.\n  const thunk = (str) => str.replace(/-/g, '_').toUpperCase();\n\n  var i18n = node.getAttribute('i18n');\n  if (!i18n)\n    return;\n\n  try {\n    i18n = JSON.parse(i18n);\n  } catch (ex) {\n    console.error('Can\\'t parse ' + node.tagName + '#' + node.id + ': ' + i18n);\n    throw ex;\n  }\n\n  // Load all the messages specified in the i18n attributes.\n  for (var key in i18n) {\n    // The node attribute we'll be setting.\n    var attr = key;\n\n    var msgname = i18n[key];\n    // For \"=foo\", re-use the referenced message name.\n    if (msgname.startsWith('=')) {\n      key = msgname.substr(1);\n      msgname = i18n[key];\n    }\n\n    // For \"$foo\", calculate the message name.\n    if (msgname.startsWith('$'))\n      msgname = thunk(node.getAttribute(msgname.substr(1)) + '_' + key);\n\n    // Finally load the message.\n    var msg = this.get(msgname);\n    if (attr == '_')\n      node.textContent = msg;\n    else\n      node.setAttribute(attr, msg);\n  }\n};\n// SOURCE FILE: libdot/js/lib_preference_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for lib.PreferenceManager objects.\n *\n * These objects deal with persisting changes to stable storage and notifying\n * consumers when preferences change.\n *\n * It is intended that the backing store could be something other than HTML5\n * storage, but there aren't any use cases at the moment.  In the future there\n * may be a chrome api to store sync-able name/value pairs, and we'd want\n * that.\n *\n * @param {!lib.Storage} storage The storage object to use as a backing\n *     store.\n * @param {string=} prefix The optional prefix to be used for all preference\n *     names.  The '/' character should be used to separate levels of hierarchy,\n *     if you're going to have that kind of thing.  If provided, the prefix\n *     should start with a '/'.  If not provided, it defaults to '/'.\n * @constructor\n */\nlib.PreferenceManager = function(storage, prefix = '/') {\n  this.storage = storage;\n  this.storageObserver_ = this.onStorageChange_.bind(this);\n\n  this.isActive_ = false;\n  this.activate();\n\n  this.trace = false;\n\n  if (!prefix.endsWith('/'))\n    prefix += '/';\n\n  this.prefix = prefix;\n\n  // Internal state for when we're doing a bulk import from JSON and we want\n  // to elide redundant storage writes (for quota reasons).\n  this.isImportingJson_ = false;\n\n  /** @type {!Object<string, !lib.PreferenceManager.Record>} */\n  this.prefRecords_ = {};\n  this.globalObservers_ = [];\n\n  this.childFactories_ = {};\n\n  // Map of list-name to {map of child pref managers}\n  // As in...\n  //\n  //  this.childLists_ = {\n  //    'profile-ids': {\n  //      'one': PreferenceManager,\n  //      'two': PreferenceManager,\n  //      ...\n  //    },\n  //\n  //    'frob-ids': {\n  //      ...\n  //    }\n  //  }\n  this.childLists_ = {};\n};\n\n/**\n * Used internally to indicate that the current value of the preference should\n * be taken from the default value defined with the preference.\n *\n * Equality tests against this value MUST use '===' or '!==' to be accurate.\n *\n * @type {symbol}\n */\nlib.PreferenceManager.prototype.DEFAULT_VALUE = Symbol('DEFAULT_VALUE');\n\n/**\n * An individual preference.\n *\n * These objects are managed by the PreferenceManager, you shouldn't need to\n * handle them directly.\n *\n * @param {string} name The name of the new preference (used for indexing).\n * @param {*} defaultValue The default value for this preference.\n * @constructor\n */\nlib.PreferenceManager.Record = function(name, defaultValue) {\n  this.name = name;\n  this.defaultValue = defaultValue;\n  this.currentValue = this.DEFAULT_VALUE;\n  this.observers = [];\n};\n\n/**\n * A local copy of the DEFAULT_VALUE constant to make it less verbose.\n *\n * @type {symbol}\n */\nlib.PreferenceManager.Record.prototype.DEFAULT_VALUE =\n    lib.PreferenceManager.prototype.DEFAULT_VALUE;\n\n/**\n * Register a callback to be invoked when this preference changes.\n *\n * @param {function(string, string, !lib.PreferenceManager)} observer The\n *     function to invoke.  It will receive the new value, the name of the\n *     preference, and a reference to the PreferenceManager as parameters.\n */\nlib.PreferenceManager.Record.prototype.addObserver = function(observer) {\n  this.observers.push(observer);\n};\n\n/**\n * Unregister an observer callback.\n *\n * @param {function()} observer A previously registered callback.\n */\nlib.PreferenceManager.Record.prototype.removeObserver = function(observer) {\n  var i = this.observers.indexOf(observer);\n  if (i >= 0)\n    this.observers.splice(i, 1);\n};\n\n/**\n * Fetch the value of this preference.\n *\n * @return {*} The value for this preference.\n */\nlib.PreferenceManager.Record.prototype.get = function() {\n  if (this.currentValue === this.DEFAULT_VALUE) {\n    if (/^(string|number)$/.test(typeof this.defaultValue))\n      return this.defaultValue;\n\n    if (typeof this.defaultValue == 'object') {\n      // We want to return a COPY of the default value so that users can\n      // modify the array or object without changing the default value.\n      return JSON.parse(JSON.stringify(this.defaultValue));\n    }\n\n    return this.defaultValue;\n  }\n\n  return this.currentValue;\n};\n\n/**\n * Stop this preference manager from tracking storage changes.\n *\n * Call this if you're going to swap out one preference manager for another so\n * that you don't get notified about irrelevant changes.\n */\nlib.PreferenceManager.prototype.deactivate = function() {\n  if (!this.isActive_)\n    throw new Error('Not activated');\n\n  this.isActive_ = false;\n  this.storage.removeObserver(this.storageObserver_);\n};\n\n/**\n * Start tracking storage changes.\n *\n * If you previously deactivated this preference manager, you can reactivate it\n * with this method.  You don't need to call this at initialization time, as\n * it's automatically called as part of the constructor.\n */\nlib.PreferenceManager.prototype.activate = function() {\n  if (this.isActive_)\n    throw new Error('Already activated');\n\n  this.isActive_ = true;\n  this.storage.addObserver(this.storageObserver_);\n};\n\n/**\n * Read the backing storage for these preferences.\n *\n * You should do this once at initialization time to prime the local cache\n * of preference values.  The preference manager will monitor the backing\n * storage for changes, so you should not need to call this more than once.\n *\n * This function recursively reads storage for all child preference managers as\n * well.\n *\n * This function is asynchronous, if you need to read preference values, you\n * *must* wait for the callback.\n *\n * @param {function()=} opt_callback Optional function to invoke when the read\n *     has completed.\n */\nlib.PreferenceManager.prototype.readStorage = function(opt_callback) {\n  var pendingChildren = 0;\n\n  function onChildComplete() {\n    if (--pendingChildren == 0 && opt_callback)\n      opt_callback();\n  }\n\n  var keys = Object.keys(this.prefRecords_).map((el) => this.prefix + el);\n\n  if (this.trace)\n    console.log('Preferences read: ' + this.prefix);\n\n  this.storage.getItems(keys, function(items) {\n      var prefixLength = this.prefix.length;\n\n      for (var key in items) {\n        var value = items[key];\n        var name = key.substr(prefixLength);\n        var needSync = (name in this.childLists_ &&\n                        (JSON.stringify(value) !=\n                         JSON.stringify(this.prefRecords_[name].currentValue)));\n\n        this.prefRecords_[name].currentValue = value;\n\n        if (needSync) {\n          pendingChildren++;\n          this.syncChildList(name, onChildComplete);\n        }\n      }\n\n      if (pendingChildren == 0 && opt_callback)\n        setTimeout(opt_callback);\n    }.bind(this));\n};\n\n/**\n * Define a preference.\n *\n * This registers a name, default value, and onChange handler for a preference.\n *\n * @param {string} name The name of the preference.  This will be prefixed by\n *     the prefix of this PreferenceManager before written to local storage.\n * @param {string|number|boolean|!Object|!Array|null} value The default value of\n *     this preference.  Anything that can be represented in JSON is a valid\n *     default value.\n * @param {function(*, string, !lib.PreferenceManager)=} opt_onChange A\n *     function to invoke when the preference changes.  It will receive the new\n *     value, the name of the preference, and a reference to the\n *     PreferenceManager as parameters.\n */\nlib.PreferenceManager.prototype.definePreference = function(\n    name, value, opt_onChange) {\n\n  var record = this.prefRecords_[name];\n  if (record) {\n    this.changeDefault(name, value);\n  } else {\n    record = this.prefRecords_[name] =\n        new lib.PreferenceManager.Record(name, value);\n  }\n\n  if (opt_onChange)\n    record.addObserver(opt_onChange);\n};\n\n/**\n * Define multiple preferences with a single function call.\n *\n * @param {!Array<*>} defaults An array of 3-element arrays.  Each three element\n *     array should contain the [key, value, onChange] parameters for a\n *     preference.\n */\nlib.PreferenceManager.prototype.definePreferences = function(defaults) {\n  for (var i = 0; i < defaults.length; i++) {\n    this.definePreference(defaults[i][0], defaults[i][1], defaults[i][2]);\n  }\n};\n\n/**\n * Define an ordered list of child preferences.\n *\n * Child preferences are different from just storing an array of JSON objects\n * in that each child is an instance of a preference manager.  This means you\n * can observe changes to individual child preferences, and get some validation\n * that you're not reading or writing to an undefined child preference value.\n *\n * @param {string} listName A name for the list of children.  This must be\n *     unique in this preference manager.  The listName will become a\n *     preference on this PreferenceManager used to store the ordered list of\n *     child ids.  It is also used in get/add/remove operations to identify the\n *     list of children to operate on.\n * @param {function(!lib.PreferenceManager, string)} childFactory A function\n *     that will be used to generate instances of these children.  The factory\n *     function will receive the parent lib.PreferenceManager object and a\n *     unique id for the new child preferences.\n */\nlib.PreferenceManager.prototype.defineChildren = function(\n    listName, childFactory) {\n\n  // Define a preference to hold the ordered list of child ids.\n  this.definePreference(listName, [],\n                        this.onChildListChange_.bind(this, listName));\n  this.childFactories_[listName] = childFactory;\n  this.childLists_[listName] = {};\n};\n\n/**\n * Register to observe preference changes.\n *\n * @param {string} name The name of preference you wish to observe..\n * @param {function()} observer The callback.\n */\nlib.PreferenceManager.prototype.addObserver = function(name, observer) {\n  if (!(name in this.prefRecords_)) {\n    throw new Error(`Unknown preference: ${name}`);\n  }\n\n  this.prefRecords_[name].addObserver(observer);\n};\n\n/**\n * Register to observe preference changes.\n *\n * @param {?function()} global A callback that will happen for every preference.\n *     Pass null if you don't need one.\n * @param {!Object} map A map of preference specific callbacks.  Pass null if\n *     you don't need any.\n */\nlib.PreferenceManager.prototype.addObservers = function(global, map) {\n  if (global && typeof global != 'function')\n    throw new Error('Invalid param: globals');\n\n  if (global)\n    this.globalObservers_.push(global);\n\n  if (!map)\n    return;\n\n  for (var name in map) {\n    this.addObserver(name, map[name]);\n  }\n};\n\n/**\n * Remove preference observer.\n *\n * @param {string} name The name of preference you wish to stop observing.\n * @param {function()} observer The observer to remove.\n */\nlib.PreferenceManager.prototype.removeObserver = function(name, observer) {\n  if (!(name in this.prefRecords_)) {\n    throw new Error(`Unknown preference: ${name}`);\n  }\n\n  this.prefRecords_[name].removeObserver(observer);\n};\n\n/**\n * Dispatch the change observers for all known preferences.\n *\n * It may be useful to call this after readStorage completes, in order to\n * get application state in sync with user preferences.\n *\n * This can be used if you've changed a preference manager out from under\n * a live object, for example when switching to a different prefix.\n */\nlib.PreferenceManager.prototype.notifyAll = function() {\n  for (var name in this.prefRecords_) {\n    this.notifyChange_(name);\n  }\n};\n\n/**\n * Notify the change observers for a given preference.\n *\n * @param {string} name The name of the preference that changed.\n */\nlib.PreferenceManager.prototype.notifyChange_ = function(name) {\n  var record = this.prefRecords_[name];\n  if (!record)\n    throw new Error('Unknown preference: ' + name);\n\n  var currentValue = record.get();\n\n  for (var i = 0; i < this.globalObservers_.length; i++)\n    this.globalObservers_[i](name, currentValue);\n\n  for (var i = 0; i < record.observers.length; i++) {\n    record.observers[i](currentValue, name, this);\n  }\n};\n\n/**\n * Create a new child PreferenceManager for the given child list.\n *\n * The optional hint parameter is an opaque prefix added to the auto-generated\n * unique id for this child.  Your child factory can parse out the prefix\n * and use it.\n *\n * @param {string} listName The child list to create the new instance from.\n * @param {?string=} opt_hint Optional hint to include in the child id.\n * @param {string=} opt_id Optional id to override the generated id.\n * @return {!lib.PreferenceManager} The new child preference manager.\n */\nlib.PreferenceManager.prototype.createChild = function(listName, opt_hint,\n                                                       opt_id) {\n  var ids = this.get(listName);\n  var id;\n\n  if (opt_id) {\n    id = opt_id;\n    if (ids.indexOf(id) != -1)\n      throw new Error('Duplicate child: ' + listName + ': ' + id);\n\n  } else {\n    // Pick a random, unique 4-digit hex identifier for the new profile.\n    while (!id || ids.indexOf(id) != -1) {\n      id = lib.f.randomInt(1, 0xffff).toString(16);\n      id = lib.f.zpad(id, 4);\n      if (opt_hint)\n        id = opt_hint + ':' + id;\n    }\n  }\n\n  var childManager = this.childFactories_[listName](this, id);\n  childManager.trace = this.trace;\n  childManager.resetAll();\n\n  this.childLists_[listName][id] = childManager;\n\n  ids.push(id);\n  this.set(listName, ids, undefined, !this.isImportingJson_);\n\n  return childManager;\n};\n\n/**\n * Remove a child preferences instance.\n *\n * Removes a child preference manager and clears any preferences stored in it.\n *\n * @param {string} listName The name of the child list containing the child to\n *     remove.\n * @param {string} id The child ID.\n */\nlib.PreferenceManager.prototype.removeChild = function(listName, id) {\n  var prefs = this.getChild(listName, id);\n  prefs.resetAll();\n\n  var ids = this.get(listName);\n  var i = ids.indexOf(id);\n  if (i != -1) {\n    ids.splice(i, 1);\n    this.set(listName, ids, undefined, !this.isImportingJson_);\n  }\n\n  delete this.childLists_[listName][id];\n};\n\n/**\n * Return a child PreferenceManager instance for a given id.\n *\n * If the child list or child id is not known this will return the specified\n * default value or throw an exception if no default value is provided.\n *\n * @param {string} listName The child list to look in.\n * @param {string} id The child ID.\n * @param {!lib.PreferenceManager=} opt_default The value to return if the child\n *     is not found.\n * @return {!lib.PreferenceManager} The specified child PreferenceManager.\n */\nlib.PreferenceManager.prototype.getChild = function(listName, id, opt_default) {\n  if (!(listName in this.childLists_))\n    throw new Error('Unknown child list: ' + listName);\n\n  var childList = this.childLists_[listName];\n  if (!(id in childList)) {\n    if (typeof opt_default == 'undefined')\n      throw new Error('Unknown \"' + listName + '\" child: ' + id);\n\n    return opt_default;\n  }\n\n  return childList[id];\n};\n\n/**\n * Synchronize a list of child PreferenceManagers instances with the current\n * list stored in prefs.\n *\n * This will instantiate any missing managers and read current preference values\n * from storage.  Any active managers that no longer appear in preferences will\n * be deleted.\n *\n * @param {string} listName The child list to synchronize.\n * @param {function()=} opt_callback Function to invoke when the sync finishes.\n */\nlib.PreferenceManager.prototype.syncChildList = function(\n    listName, opt_callback) {\n\n  var pendingChildren = 0;\n  function onChildStorage() {\n    if (--pendingChildren == 0 && opt_callback)\n      opt_callback();\n  }\n\n  // The list of child ids that we *should* have a manager for.\n  var currentIds = this.get(listName);\n\n  // The known managers at the start of the sync.  Any manager still in this\n  // list at the end should be discarded.\n  var oldIds = Object.keys(this.childLists_[listName]);\n\n  for (var i = 0; i < currentIds.length; i++) {\n    var id = currentIds[i];\n\n    var managerIndex = oldIds.indexOf(id);\n    if (managerIndex >= 0)\n      oldIds.splice(managerIndex, 1);\n\n    if (!this.childLists_[listName][id]) {\n      var childManager = this.childFactories_[listName](this, id);\n      if (!childManager) {\n        console.warn('Unable to restore child: ' + listName + ': ' + id);\n        continue;\n      }\n\n      childManager.trace = this.trace;\n      this.childLists_[listName][id] = childManager;\n      pendingChildren++;\n      childManager.readStorage(onChildStorage);\n    }\n  }\n\n  for (var i = 0; i < oldIds.length; i++) {\n    delete this.childLists_[listName][oldIds[i]];\n  }\n\n  if (!pendingChildren && opt_callback)\n    setTimeout(opt_callback);\n};\n\n/**\n * Reset a preference to its default state.\n *\n * This will dispatch the onChange handler if the preference value actually\n * changes.\n *\n * @param {string} name The preference to reset.\n */\nlib.PreferenceManager.prototype.reset = function(name) {\n  var record = this.prefRecords_[name];\n  if (!record)\n    throw new Error('Unknown preference: ' + name);\n\n  this.storage.removeItem(this.prefix + name);\n\n  if (record.currentValue !== this.DEFAULT_VALUE) {\n    record.currentValue = this.DEFAULT_VALUE;\n    this.notifyChange_(name);\n  }\n};\n\n/**\n * Reset all preferences back to their default state.\n */\nlib.PreferenceManager.prototype.resetAll = function() {\n  var changed = [];\n\n  for (var listName in this.childLists_) {\n    var childList = this.childLists_[listName];\n    for (var id in childList) {\n      childList[id].resetAll();\n    }\n  }\n\n  for (var name in this.prefRecords_) {\n    if (this.prefRecords_[name].currentValue !== this.DEFAULT_VALUE) {\n      this.prefRecords_[name].currentValue = this.DEFAULT_VALUE;\n      changed.push(name);\n    }\n  }\n\n  var keys = Object.keys(this.prefRecords_).map(function(el) {\n      return this.prefix + el;\n  }.bind(this));\n\n  this.storage.removeItems(keys);\n\n  changed.forEach(this.notifyChange_.bind(this));\n};\n\n/**\n * Return true if two values should be considered not-equal.\n *\n * If both values are the same scalar type and compare equal this function\n * returns false (no difference), otherwise return true.\n *\n * This is used in places where we want to check if a preference has changed.\n * Rather than take the time to compare complex values we just consider them\n * to always be different.\n *\n * @param {*} a A value to compare.\n * @param {*} b A value to compare.\n * @return {boolean} Whether the two are not equal.\n */\nlib.PreferenceManager.prototype.diff = function(a, b) {\n  // If the types are different.\n  if ((typeof a) !== (typeof b)) {\n    return true;\n  }\n\n  // Or if the type is not a simple primitive one.\n  if (!(/^(undefined|boolean|number|string)$/.test(typeof a))) {\n    // Special case the null object.\n    if (a === null && b === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // Do a normal compare for primitive types.\n  return a !== b;\n};\n\n/**\n * Change the default value of a preference.\n *\n * This is useful when subclassing preference managers.\n *\n * The function does not alter the current value of the preference, unless\n * it has the old default value.  When that happens, the change observers\n * will be notified.\n *\n * @param {string} name The name of the parameter to change.\n * @param {*} newValue The new default value for the preference.\n */\nlib.PreferenceManager.prototype.changeDefault = function(name, newValue) {\n  var record = this.prefRecords_[name];\n  if (!record)\n    throw new Error('Unknown preference: ' + name);\n\n  if (!this.diff(record.defaultValue, newValue)) {\n    // Default value hasn't changed.\n    return;\n  }\n\n  if (record.currentValue !== this.DEFAULT_VALUE) {\n    // This pref has a specific value, just change the default and we're done.\n    record.defaultValue = newValue;\n    return;\n  }\n\n  record.defaultValue = newValue;\n\n  this.notifyChange_(name);\n};\n\n/**\n * Change the default value of multiple preferences.\n *\n * @param {!Object} map A map of name -> value pairs specifying the new default\n *     values.\n */\nlib.PreferenceManager.prototype.changeDefaults = function(map) {\n  for (var key in map) {\n    this.changeDefault(key, map[key]);\n  }\n};\n\n/**\n * Set a preference to a specific value.\n *\n * This will dispatch the onChange handler if the preference value actually\n * changes.\n *\n * @param {string} name The preference to set.\n * @param {*} newValue The value to set.  Anything that can be represented in\n *     JSON is a valid value.\n * @param {function()=} onComplete Callback when the set call completes.\n * @param {boolean=} saveToStorage Whether to commit the change to the backing\n *     storage or only the in-memory record copy.\n * @return {!Promise<void>} Promise which resolves once all observers are\n *     notified.\n */\nlib.PreferenceManager.prototype.set = function(\n    name, newValue, onComplete=undefined, saveToStorage=true) {\n  var record = this.prefRecords_[name];\n  if (!record)\n    throw new Error('Unknown preference: ' + name);\n\n  var oldValue = record.get();\n\n  if (!this.diff(oldValue, newValue))\n    return Promise.resolve();\n\n  if (this.diff(record.defaultValue, newValue)) {\n    record.currentValue = newValue;\n    if (saveToStorage)\n      this.storage.setItem(this.prefix + name, newValue, onComplete);\n  } else {\n    record.currentValue = this.DEFAULT_VALUE;\n    if (saveToStorage)\n      this.storage.removeItem(this.prefix + name, onComplete);\n  }\n\n  // We need to manually send out the notification on this instance.  If we\n  // The storage event won't fire a notification because we've already changed\n  // the currentValue, so it won't see a difference.  If we delayed changing\n  // currentValue until the storage event, a pref read immediately after a write\n  // would return the previous value.\n  //\n  // The notification is async so clients don't accidentally depend on\n  // a synchronous notification.\n  return Promise.resolve().then(() => {\n    this.notifyChange_(name);\n  });\n};\n\n/**\n * Get the value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {*} The preference's value.\n */\nlib.PreferenceManager.prototype.get = function(name) {\n  var record = this.prefRecords_[name];\n  if (!record)\n    throw new Error('Unknown preference: ' + name);\n\n  return record.get();\n};\n\n/**\n * Get the boolean value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {boolean}\n */\nlib.PreferenceManager.prototype.getBoolean = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'boolean');\n  return result;\n};\n\n/**\n * Get the number value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {number}\n */\nlib.PreferenceManager.prototype.getNumber = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'number');\n  return result;\n};\n\n/**\n * Get the string value of a preference.\n *\n * @param {string} name The preference to get.\n * @return {string}\n */\nlib.PreferenceManager.prototype.getString = function(name) {\n  const result = this.get(name);\n  lib.assert(typeof result == 'string');\n  return result;\n};\n\n/**\n * Return all non-default preferences as a JSON object.\n *\n * This includes any nested preference managers as well.\n *\n * @return {!Object} The JSON preferences.\n */\nlib.PreferenceManager.prototype.exportAsJson = function() {\n  var rv = {};\n\n  for (var name in this.prefRecords_) {\n    if (name in this.childLists_) {\n      rv[name] = [];\n      var childIds = this.get(name);\n      for (var i = 0; i < childIds.length; i++) {\n        var id = childIds[i];\n        rv[name].push({id: id, json: this.getChild(name, id).exportAsJson()});\n      }\n\n    } else {\n      var record = this.prefRecords_[name];\n      if (record.currentValue != this.DEFAULT_VALUE)\n        rv[name] = record.currentValue;\n    }\n  }\n\n  return rv;\n};\n\n/**\n * Import a JSON blob of preferences previously generated with exportAsJson.\n *\n * This will create nested preference managers as well.\n *\n * @param {!Object} json The JSON settings to import.\n * @param {function()=} onComplete Callback when all imports have finished.\n */\nlib.PreferenceManager.prototype.importFromJson = function(json, onComplete) {\n  this.isImportingJson_ = true;\n\n  let pendingWrites = 0;\n  const onWriteStorage = () => {\n    if (--pendingWrites < 1) {\n      if (onComplete) {\n        onComplete();\n      }\n\n      // We've delayed updates to the child arrays, so flush them now.\n      for (let name in json)\n        if (name in this.childLists_)\n          this.set(name, this.get(name));\n\n      this.isImportingJson_ = false;\n    }\n  };\n\n  for (var name in json) {\n    if (name in this.childLists_) {\n      var childList = json[name];\n      for (var i = 0; i < childList.length; i++) {\n        var id = childList[i].id;\n\n        var childPrefManager = this.childLists_[name][id];\n        if (!childPrefManager)\n          childPrefManager = this.createChild(name, null, id);\n\n        childPrefManager.importFromJson(childList[i].json, onWriteStorage);\n        pendingWrites++;\n      }\n\n    } else {\n      // The set is synchronous.\n      this.set(name, json[name]);\n    }\n  }\n\n  // If we didn't update any children, no async work has been queued, so make\n  // the completion callback directly.\n  if (pendingWrites == 0 && onComplete) {\n    onComplete();\n  }\n};\n\n/**\n * Called when one of the child list preferences changes.\n *\n * @param {string} listName The child list to synchronize.\n */\nlib.PreferenceManager.prototype.onChildListChange_ = function(listName) {\n  this.syncChildList(listName);\n};\n\n/**\n * Called when a key in the storage changes.\n *\n * @param {!Object} map Dictionary of changed settings.\n */\nlib.PreferenceManager.prototype.onStorageChange_ = function(map) {\n  for (var key in map) {\n    if (this.prefix) {\n      if (key.lastIndexOf(this.prefix, 0) != 0)\n        continue;\n    }\n\n    var name = key.substr(this.prefix.length);\n\n    if (!(name in this.prefRecords_)) {\n      // Sometimes we'll get notified about prefs that are no longer defined.\n      continue;\n    }\n\n    var record = this.prefRecords_[name];\n\n    var newValue = map[key].newValue;\n    var currentValue = record.currentValue;\n    if (currentValue === record.DEFAULT_VALUE)\n      currentValue = undefined;\n\n    if (this.diff(currentValue, newValue)) {\n      if (typeof newValue == 'undefined' || newValue === null) {\n        record.currentValue = record.DEFAULT_VALUE;\n      } else {\n        record.currentValue = newValue;\n      }\n\n      this.notifyChange_(name);\n    }\n  }\n};\n// SOURCE FILE: libdot/js/lib_resource.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Storage for canned resources.\n *\n * These are usually non-JavaScript things that are collected during a build\n * step and converted into a series of 'lib.resource.add(...)' calls.  See\n * the \"@resource\" directive from libdot/bin/concat for the canonical use\n * case.\n *\n * This is global storage, so you should prefix your resource names to avoid\n * collisions.\n */\nlib.resource = {\n  resources_: {}\n};\n\n/** @typedef {{type: string, name: string, data: *}} */\nlib.resource.ResourceRecord;\n\n/**\n * Add a resource.\n *\n * @param {string} name A name for the resource.  You should prefix this to\n *     avoid collisions with resources from a shared library.\n * @param {string} type A mime type for the resource, or \"raw\" if not\n *     applicable.\n * @param {*} data The value of the resource.\n */\nlib.resource.add = function(name, type, data) {\n  lib.resource.resources_[name] = {\n    type: type,\n    name: name,\n    data: data\n  };\n};\n\n/**\n * Retrieve a resource record.\n *\n * The resource data is stored on the \"data\" property of the returned object.\n *\n * @param {string} name The name of the resource to get.\n * @param {!lib.resource.ResourceRecord=} defaultValue The value to return if\n *     the resource is not defined.\n * @return {!lib.resource.ResourceRecord} The matching resource if it exists.\n */\nlib.resource.get = function(name, defaultValue) {\n  if (!(name in lib.resource.resources_)) {\n    lib.assert(defaultValue !== undefined);\n    return defaultValue;\n  }\n\n  return lib.resource.resources_[name];\n};\n\n/**\n * Retrieve resource data.\n *\n * @param {string} name The name of the resource to get.\n * @param {*=} defaultValue The value to return if the resource is not defined.\n * @return {*} The resource data.\n */\nlib.resource.getData = function(name, defaultValue) {\n  if (!(name in lib.resource.resources_)) {\n    return defaultValue;\n  }\n\n  return lib.resource.resources_[name].data;\n};\n\n/**\n * Retrieve resource as a data: url.\n *\n * @param {string} name The name of the resource to get.\n * @param {!lib.resource.ResourceRecord=} defaultValue The value to return if\n *     the resource is not defined.\n * @return {string} A data: url encoded version of the resource.\n */\nlib.resource.getDataUrl = function(name, defaultValue) {\n  var resource = lib.resource.get(name, defaultValue);\n  return 'data:' + resource.type + ',' + resource.data;\n};\n// SOURCE FILE: libdot/js/lib_storage.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Namespace for implementations of persistent, possibly cloud-backed\n * storage.\n *\n * @interface\n */\nlib.Storage = function() {};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n */\nlib.Storage.prototype.addObserver = function(callback) {};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n */\nlib.Storage.prototype.removeObserver = function(callback) {};\n\n/**\n * Delete everything in this storage.\n *\n * @param {function()=} callback The function to invoke when the delete has\n *     completed.\n */\nlib.Storage.prototype.clear = function(callback) {};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @param {function(*)} callback The function to invoke when the value has\n *     been retrieved.\n */\nlib.Storage.prototype.getItem = function(key, callback) {};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @param {function(!Object)} callback The function to invoke when the values\n *     have been retrieved.\n */\nlib.Storage.prototype.getItems = function(keys, callback) {};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n */\nlib.Storage.prototype.setItem = function(key, value, callback) {};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n */\nlib.Storage.prototype.setItems = function(obj, callback) {};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n */\nlib.Storage.prototype.removeItem = function(key, callback) {};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} ary The keys to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n */\nlib.Storage.prototype.removeItems = function(ary, callback) {};\n// SOURCE FILE: libdot/js/lib_storage_chrome.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * chrome.storage based class with an async interface that is interchangeable\n * with other lib.Storage.* implementations.\n *\n * @param {!StorageArea} storage The backing storage.\n * @implements {lib.Storage}\n * @constructor\n */\nlib.Storage.Chrome = function(storage) {\n  this.storage_ = storage;\n  this.observers_ = [];\n\n  chrome.storage.onChanged.addListener(this.onChanged_.bind(this));\n};\n\n/**\n * Called by the storage implementation when the storage is modified.\n *\n * @param {!Array<*>} changes Object mapping each key that changed to its\n *     corresponding storage.StorageChange for that item.\n * @param {string} areaname The name of the storage area (\"sync\", \"local\",\n *     or \"managed\") the changes are for.\n */\nlib.Storage.Chrome.prototype.onChanged_ = function(changes, areaname) {\n  if (chrome.storage[areaname] != this.storage_)\n    return;\n\n  for (var i = 0; i < this.observers_.length; i++) {\n    this.observers_[i](changes);\n  }\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.Chrome.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.Chrome.prototype.removeObserver = function(callback) {\n  var i = this.observers_.indexOf(callback);\n  if (i != -1)\n    this.observers_.splice(i, 1);\n};\n\n/**\n * Delete everything in this storage.\n *\n * @param {function()=} callback The function to invoke when the delete has\n *     completed.\n * @override\n */\nlib.Storage.Chrome.prototype.clear = function(callback) {\n  this.storage_.clear();\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @param {function(*)} callback The function to invoke when the value has\n *     been retrieved.\n * @override\n */\nlib.Storage.Chrome.prototype.getItem = function(key, callback) {\n  this.storage_.get(key, callback);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @param {function(!Object)} callback The function to invoke when the values\n *     have been retrieved.\n * @override\n */\nlib.Storage.Chrome.prototype.getItems = function(keys, callback) {\n  this.storage_.get(keys, callback);\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the\n *     value since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Chrome.prototype.setItem = function(key, value, callback) {\n  const onComplete = () => {\n    const err = lib.f.lastError();\n    if (err) {\n      // Doesn't seem to be any better way of handling this.\n      // https://crbug.com/764759\n      if (err.indexOf('MAX_WRITE_OPERATIONS')) {\n        console.warn(`Will retry save of ${key} after exceeding quota: ${err}`);\n        setTimeout(() => this.setItem(key, value, onComplete), 1000);\n        return;\n      } else {\n        console.error(`Unknown runtime error: ${err}`);\n      }\n    }\n\n    if (callback) {\n      callback();\n    }\n  };\n\n  var obj = {};\n  obj[key] = value;\n  this.storage_.set(obj, onComplete);\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the\n *     value since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Chrome.prototype.setItems = function(obj, callback) {\n  this.storage_.set(obj, callback);\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Chrome.prototype.removeItem = function(key, callback) {\n  this.storage_.remove(key, callback);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Chrome.prototype.removeItems = function(keys, callback) {\n  this.storage_.remove(keys, callback);\n};\n// SOURCE FILE: libdot/js/lib_storage_local.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * window.localStorage based class with an async interface that is\n * interchangeable with other lib.Storage.* implementations.\n *\n * @implements {lib.Storage}\n * @constructor\n */\nlib.Storage.Local = function() {\n  this.observers_ = [];\n  this.storage_ = window.localStorage;\n  window.addEventListener('storage', this.onStorage_.bind(this));\n};\n\n/**\n * Called by the storage implementation when the storage is modified.\n *\n * @param {!Event} e The setting that has changed.\n */\nlib.Storage.Local.prototype.onStorage_ = function(e) {\n  if (e.storageArea != this.storage_)\n    return;\n\n  // JS throws an exception if JSON.parse is given an empty string. So here we\n  // only parse if the value is truthy. This mean the empty string, undefined\n  // and null will not be parsed.\n  var prevValue = e.oldValue ? JSON.parse(e.oldValue) : e.oldValue;\n  var curValue = e.newValue ? JSON.parse(e.newValue) : e.newValue;\n  var o = {};\n  o[e.key] = {\n    oldValue: prevValue,\n    newValue: curValue\n  };\n\n  for (var i = 0; i < this.observers_.length; i++) {\n    this.observers_[i](o);\n  }\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.Local.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.Local.prototype.removeObserver = function(callback) {\n  var i = this.observers_.indexOf(callback);\n  if (i != -1)\n    this.observers_.splice(i, 1);\n};\n\n/**\n * Delete everything in this storage.\n *\n * @param {function()=} callback The function to invoke when the delete has\n *     completed.\n * @override\n */\nlib.Storage.Local.prototype.clear = function(callback) {\n  this.storage_.clear();\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @param {function(*)} callback The function to invoke when the value has\n *     been retrieved.\n * @override\n */\nlib.Storage.Local.prototype.getItem = function(key, callback) {\n  var value = this.storage_.getItem(key);\n\n  if (typeof value == 'string') {\n    try {\n      value = JSON.parse(value);\n    } catch (e) {\n      // If we can't parse the value, just return it unparsed.\n    }\n  }\n\n  setTimeout(callback.bind(null, value), 0);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @param {function(!Object)} callback The function to invoke when the values\n *     have been retrieved.\n * @override\n */\nlib.Storage.Local.prototype.getItems = function(keys, callback) {\n  var rv = {};\n  if (!keys) {\n    keys = [];\n    for (let i = 0; i < this.storage_.length; i++) {\n      keys.push(this.storage_.key(i));\n    }\n  }\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var value = this.storage_.getItem(key);\n    if (typeof value == 'string') {\n      try {\n        rv[key] = JSON.parse(value);\n      } catch (e) {\n        // If we can't parse the value, just return it unparsed.\n        rv[key] = value;\n      }\n    } else {\n      keys.splice(i, 1);\n    }\n  }\n\n  setTimeout(callback.bind(null, rv), 0);\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Local.prototype.setItem = function(key, value, callback) {\n  this.storage_.setItem(key, JSON.stringify(value));\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Local.prototype.setItems = function(obj, callback) {\n  for (var key in obj) {\n    this.storage_.setItem(key, JSON.stringify(obj[key]));\n  }\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Local.prototype.removeItem = function(key, callback) {\n  this.storage_.removeItem(key);\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} ary The keys to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Local.prototype.removeItems = function(ary, callback) {\n  for (var i = 0; i < ary.length; i++) {\n    this.storage_.removeItem(ary[i]);\n  }\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n// SOURCE FILE: libdot/js/lib_storage_memory.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * In-memory storage class with an async interface that is interchangeable with\n * other lib.Storage.* implementations.\n *\n * @constructor\n * @implements {lib.Storage}\n */\nlib.Storage.Memory = function() {\n  this.observers_ = [];\n  this.storage_ = {};\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.Memory.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.Memory.prototype.removeObserver = function(callback) {\n  var i = this.observers_.indexOf(callback);\n  if (i != -1)\n    this.observers_.splice(i, 1);\n};\n\n/**\n * Delete everything in this storage.\n *\n * @param {function()=} callback The function to invoke when the delete has\n *     completed.\n * @override\n */\nlib.Storage.Memory.prototype.clear = function(callback) {\n  var e = {};\n  for (var key in this.storage_) {\n    e[key] = {oldValue: this.storage_[key], newValue: undefined};\n  }\n\n  this.storage_ = {};\n\n  setTimeout(function() {\n    for (var i = 0; i < this.observers_.length; i++) {\n      this.observers_[i](e);\n    }\n  }.bind(this), 0);\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @param {function(*)} callback The function to invoke when the value has\n *     been retrieved.\n * @override\n */\nlib.Storage.Memory.prototype.getItem = function(key, callback) {\n  var value = this.storage_[key];\n\n  if (typeof value == 'string') {\n    try {\n      value = JSON.parse(value);\n    } catch (e) {\n      // If we can't parse the value, just return it unparsed.\n    }\n  }\n\n  setTimeout(callback.bind(null, value), 0);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @param {function(!Object)} callback The function to invoke when the values\n *     have been retrieved.\n * @override\n */\nlib.Storage.Memory.prototype.getItems = function(keys, callback) {\n  var rv = {};\n  if (!keys) {\n    keys = Object.keys(this.storage_);\n  }\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var value = this.storage_[key];\n    if (typeof value == 'string') {\n      try {\n        rv[key] = JSON.parse(value);\n      } catch (e) {\n        // If we can't parse the value, just return it unparsed.\n        rv[key] = value;\n      }\n    } else {\n      keys.splice(i, 1);\n    }\n  }\n\n  setTimeout(callback.bind(null, rv), 0);\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Memory.prototype.setItem = function(key, value, callback) {\n  var oldValue = this.storage_[key];\n  this.storage_[key] = JSON.stringify(value);\n\n  var e = {};\n  e[key] = {oldValue: oldValue, newValue: value};\n\n  setTimeout(function() {\n    for (var i = 0; i < this.observers_.length; i++) {\n      this.observers_[i](e);\n    }\n  }.bind(this), 0);\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.Memory.prototype.setItems = function(obj, callback) {\n  var e = {};\n\n  for (var key in obj) {\n    e[key] = {oldValue: this.storage_[key], newValue: obj[key]};\n    this.storage_[key] = JSON.stringify(obj[key]);\n  }\n\n  setTimeout(function() {\n    for (var i = 0; i < this.observers_.length; i++) {\n      this.observers_[i](e);\n    }\n  }.bind(this));\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     The local cache is updated synchronously, so reads will immediately\n *     return undefined for this item even before removeItem completes.\n * @override\n */\nlib.Storage.Memory.prototype.removeItem = function(key, callback) {\n  delete this.storage_[key];\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} ary The keys to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     The local cache is updated synchronously, so reads will immediately\n *     return undefined for these items even before removeItems completes.\n * @override\n */\nlib.Storage.Memory.prototype.removeItems = function(ary, callback) {\n  for (var i = 0; i < ary.length; i++) {\n    delete this.storage_[ary[i]];\n  }\n\n  if (callback) {\n    setTimeout(callback, 0);\n  }\n};\n// SOURCE FILE: libdot/js/lib_storage_terminal_private.js\n// Copyright 2019 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Storage implementation using chrome.settingsPrivate.\n *\n * @param {function()} callback Callback invoked when object is ready.\n * @constructor\n * @implements {lib.Storage}\n */\nlib.Storage.TerminalPrivate = function(callback) {\n  /**\n   * @const\n   * @private\n   */\n  this.observers_ = [];\n  /** @private {!Object<string, *>} */\n  this.prefValue_ = {};\n\n  // Load.\n  chrome.terminalPrivate.getSettings((settings) => {\n    if (chrome.runtime.lastError) {\n      console.error(chrome.runtime.lastError.message);\n    } else {\n      this.prefValue_ = settings;\n    }\n    chrome.terminalPrivate.onSettingsChanged.addListener(\n        this.onSettingsChanged_.bind(this));\n    callback();\n  });\n};\n\n/**\n * Called when settings change.\n *\n * @param {!Object<string, *>} settings\n * @private\n */\nlib.Storage.TerminalPrivate.prototype.onSettingsChanged_ = function(settings) {\n  // Check what is deleted.\n  const e = {};\n  for (const key in this.prefValue_) {\n    if (!settings.hasOwnProperty(key)) {\n      e[key] = {oldValue: this.prefValue_[key], newValue: undefined};\n    }\n  }\n  // Check what has changed.\n  for (const key in settings) {\n    const oldValue = this.prefValue_[key];\n    const newValue = settings[key];\n    if (newValue === oldValue ||\n        JSON.stringify(newValue) === JSON.stringify(oldValue)) {\n      continue;\n    }\n    e[key] = {oldValue, newValue};\n  }\n\n  setTimeout(() => {\n    for (const observer of this.observers_) {\n      observer(e);\n    }\n  }, 0);\n};\n\n/**\n * Set pref then run callback.\n *\n * @param {function()=} callback Callback to run once pref is set.\n * @private\n */\nlib.Storage.TerminalPrivate.prototype.setPref_ = function(callback) {\n  chrome.terminalPrivate.setSettings(this.prefValue_, () => {\n    if (chrome.runtime.lastError) {\n      console.error(chrome.runtime.lastError.message);\n    }\n    if (callback) {\n      callback();\n    }\n  });\n};\n\n/**\n * Register a function to observe storage changes.\n *\n * @param {function(!Object)} callback The function to invoke when the storage\n *     changes.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.addObserver = function(callback) {\n  this.observers_.push(callback);\n};\n\n/**\n * Unregister a change observer.\n *\n * @param {function(!Object)} callback A previously registered callback.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeObserver = function(callback) {\n  const i = this.observers_.indexOf(callback);\n  if (i !== -1) {\n    this.observers_.splice(i, 1);\n  }\n};\n\n/**\n * Delete everything in this storage.\n *\n * @param {function()=} callback The function to invoke when the delete has\n *     completed.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.clear = function(callback) {\n  this.prefValue_= {};\n  this.setPref_(callback);\n};\n\n/**\n * Return the current value of a storage item.\n *\n * @param {string} key The key to look up.\n * @param {function(*)} callback The function to invoke when the value has\n *     been retrieved.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.getItem = function(key, callback) {\n  setTimeout(() => callback(this.prefValue_[key]), 0);\n};\n\n/**\n * Fetch the values of multiple storage items.\n *\n * @param {?Array<string>} keys The keys to look up.  Pass null for all keys.\n * @param {function(!Object)} callback The function to invoke when the values\n *     have been retrieved.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.getItems = function(keys, callback) {\n  const rv = {};\n  if (!keys) {\n    keys = Object.keys(this.prefValue_);\n  }\n\n  for (const key of keys) {\n    if (this.prefValue_.hasOwnProperty(key)) {\n      rv[key] = this.prefValue_[key];\n    }\n  }\n\n  setTimeout(() => callback(rv), 0);\n};\n\n/**\n * Set a value in storage.\n *\n * @param {string} key The key for the value to be stored.\n * @param {*} value The value to be stored.  Anything that can be serialized\n *     with JSON is acceptable.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.setItem = function(key, value, callback) {\n  this.setItems({[key]: value}, callback);\n};\n\n/**\n * Set multiple values in storage.\n *\n * @param {!Object} obj A map of key/values to set in storage.\n * @param {function()=} callback Function to invoke when the set is complete.\n *     You don't have to wait for the set to complete in order to read the value\n *     since the local cache is updated synchronously.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.setItems = function(obj, callback) {\n  const e = {};\n\n  for (const key in obj) {\n    e[key] = {oldValue: this.prefValue_[key], newValue: obj[key]};\n    this.prefValue_[key] = obj[key];\n  }\n\n  setTimeout(() => {\n    for (const observer of this.observers_) {\n      observer(e);\n    }\n  });\n\n  this.setPref_(callback);\n};\n\n/**\n * Remove an item from storage.\n *\n * @param {string} key The key to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     The local cache is updated synchronously, so reads will immediately\n *     return undefined for this item even before removeItem completes.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeItem = function(key, callback) {\n  this.removeItems([key], callback);\n};\n\n/**\n * Remove multiple items from storage.\n *\n * @param {!Array<string>} keys The keys to be removed.\n * @param {function()=} callback Function to invoke when the remove is complete.\n *     The local cache is updated synchronously, so reads will immediately\n *     return undefined for these items even before removeItems completes.\n * @override\n */\nlib.Storage.TerminalPrivate.prototype.removeItems = function(keys, callback) {\n  for (const key of keys) {\n    delete this.prefValue_[key];\n  }\n  this.setPref_(callback);\n};\n// SOURCE FILE: libdot/third_party/fast-text-encoding/text.js\n/*\n * Copyright 2017 Sam Thorogood. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n/**\n * @fileoverview Polyfill for TextEncoder and TextDecoder.\n *\n * You probably want `text.min.js`, and not this file directly.\n */\n\n(function(scope) {\n'use strict';\n\n// fail early\nif (scope['TextEncoder'] && scope['TextDecoder']) {\n  return false;\n}\n\n/**\n * @constructor\n * @param {string=} utfLabel\n */\nfunction FastTextEncoder(utfLabel='utf-8') {\n  if (utfLabel !== 'utf-8') {\n    throw new RangeError(\n        `Failed to construct 'TextEncoder': ` +\n        `The encoding label provided ('${utfLabel}') is invalid.`);\n  }\n}\n\nObject.defineProperty(FastTextEncoder.prototype, 'encoding', {value: 'utf-8'});\n\n/**\n * @param {string} string\n * @param {{stream: boolean}=} options\n * @return {!Uint8Array}\n */\nFastTextEncoder.prototype.encode = function(string, options={stream: false}) {\n  if (options.stream) {\n    throw new Error(`Failed to encode: the 'stream' option is unsupported.`);\n  }\n\n  let pos = 0;\n  const len = string.length;\n\n  let at = 0;  // output position\n  let tlen = Math.max(32, len + (len >> 1) + 7);  // 1.5x size\n  let target = new Uint8Array((tlen >> 3) << 3);  // ... but at 8 byte offset\n\n  while (pos < len) {\n    let value = string.charCodeAt(pos++);\n    if (value >= 0xd800 && value <= 0xdbff) {\n      // high surrogate\n      if (pos < len) {\n        const extra = string.charCodeAt(pos);\n        if ((extra & 0xfc00) === 0xdc00) {\n          ++pos;\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n        }\n      }\n      if (value >= 0xd800 && value <= 0xdbff) {\n        continue;  // drop lone surrogate\n      }\n    }\n\n    // expand the buffer if we couldn't write 4 bytes\n    if (at + 4 > target.length) {\n      tlen += 8;  // minimum extra\n      tlen *= (1.0 + (pos / string.length) * 2);  // take 2x the remaining\n      tlen = (tlen >> 3) << 3;  // 8 byte offset\n\n      const update = new Uint8Array(tlen);\n      update.set(target);\n      target = update;\n    }\n\n    if ((value & 0xffffff80) === 0) {  // 1-byte\n      target[at++] = value;  // ASCII\n      continue;\n    } else if ((value & 0xfffff800) === 0) {  // 2-byte\n      target[at++] = ((value >>  6) & 0x1f) | 0xc0;\n    } else if ((value & 0xffff0000) === 0) {  // 3-byte\n      target[at++] = ((value >> 12) & 0x0f) | 0xe0;\n      target[at++] = ((value >>  6) & 0x3f) | 0x80;\n    } else if ((value & 0xffe00000) === 0) {  // 4-byte\n      target[at++] = ((value >> 18) & 0x07) | 0xf0;\n      target[at++] = ((value >> 12) & 0x3f) | 0x80;\n      target[at++] = ((value >>  6) & 0x3f) | 0x80;\n    } else {\n      // TODO: do we care\n      continue;\n    }\n\n    target[at++] = (value & 0x3f) | 0x80;\n  }\n\n  return target.slice(0, at);\n};\n\n/**\n * @constructor\n * @param {string=} utfLabel\n * @param {{fatal: boolean}=} options\n */\nfunction FastTextDecoder(utfLabel='utf-8', options={fatal: false}) {\n  if (utfLabel !== 'utf-8') {\n    throw new RangeError(\n        `Failed to construct 'TextDecoder': ` +\n        `The encoding label provided ('${utfLabel}') is invalid.`);\n  }\n  if (options.fatal) {\n    throw new Error(\n        `Failed to construct 'TextDecoder': ` +\n        `the 'fatal' option is unsupported.`);\n  }\n}\n\nObject.defineProperty(FastTextDecoder.prototype, 'encoding', {value: 'utf-8'});\n\nObject.defineProperty(FastTextDecoder.prototype, 'fatal', {value: false});\n\nObject.defineProperty(FastTextDecoder.prototype, 'ignoreBOM', {value: false});\n\n/**\n * @param {(!ArrayBuffer|!ArrayBufferView)} buffer\n * @param {{stream: boolean}=} options\n * @return {string}\n */\nFastTextDecoder.prototype.decode = function(buffer, options={stream: false}) {\n  if (options['stream']) {\n    throw new Error(`Failed to decode: the 'stream' option is unsupported.`);\n  }\n\n  const bytes = new Uint8Array(buffer);\n  let pos = 0;\n  const len = bytes.length;\n  const out = [];\n\n  while (pos < len) {\n    const byte1 = bytes[pos++];\n    if (byte1 === 0) {\n      break;  // NULL\n    }\n\n    if ((byte1 & 0x80) === 0) {  // 1-byte\n      out.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {  // 2-byte\n      const byte2 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      const byte4 = bytes[pos++] & 0x3f;\n\n      // this can be > 0xffff, so possibly generate surrogates\n      let codepoint =\n          ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (codepoint > 0xffff) {\n        // codepoint &= ~0x10000;\n        codepoint -= 0x10000;\n        out.push((codepoint >>> 10) & 0x3ff | 0xd800);\n        codepoint = 0xdc00 | codepoint & 0x3ff;\n      }\n      out.push(codepoint);\n    } else {\n      // TODO: we're ignoring this\n    }\n  }\n\n  return String.fromCharCode.apply(null, out);\n};\n\nscope['TextEncoder'] = FastTextEncoder;\nscope['TextDecoder'] = FastTextDecoder;\n}(typeof window !== 'undefined' ?\n      window :\n      (typeof global !== 'undefined' ? global : this)));\n// SOURCE FILE: libdot/third_party/intl-segmenter/intl-segmenter.js\n// Rough polyfill for Intl.Segmenter proposal\n//\n// https://github.com/tc39/proposal-intl-segmenter/blob/master/README.md\n//\n// Caveats and Limitations\n//  * granularity: 'line': 'strictness' option is not supported (ignored)\n//  * In Chrome, uses v8BreakIterator\n//  * Otherwise, uses very simplistic rules\n//    * Ignores locale; only \"usable\" on English\n//    * granularity: 'grapheme' does not understand combining characters\n//    * granularity: 'sentence' does not understand decimals\n\n(function(global) {\n  if ('Intl' in global && 'Segmenter' in global.Intl)\n    return;\n\n  global.Intl = global.Intl || {};\n\n  const GRANULARITIES = ['grapheme', 'word','sentence', 'line'];\n\n  // TODO: Implement https://www.unicode.org/reports/tr29/\n  const RULES = {\n    grapheme: {\n      grapheme: /^(.|\\n)/\n    },\n    word: {\n      letter: /^[a-z](?:'?[a-z])*/i,\n      number: /^\\d+([,.]\\d+)*/\n    },\n    sentence: {\n      terminator: /^[^.?!\\r\\n]+[.?!]+[\\r\\n]?/,\n      separator: /^[^.?!\\r\\n]+[\\r\\n]?/\n    },\n    line: {\n      hard: /^\\S*[\\r\\n]/,\n      soft: /^\\S*\\s*/\n    }\n  };\n\n  // Work around bug in v8BreakIterator where ICU's UWordBreak enum is\n  // used even if granularity is not \"word\". See the code in\n  // Runtime_BreakIteratorBreakType in runtime/runtime-i18n.cc for\n  // details.\n  function fixBreakType(value, granularity) {\n    // Undo the mapping of UWordBreak to string\n    const ruleStatus = {\n      none: 0, // UBRK_WORD_NONE\n      number: 100, // UBRK_WORD_NUMBER\n      letter: 200, // UBRK_WORD_LETTER\n      kana: 300, // UBRK_WORD_KANA\n      ideo: 400, // UBRK_WORD_IDEO\n      unknown: -1\n    }[value] || 0;\n\n\n    switch (granularity) {\n    case 'character':\n      return undefined;\n    case 'word':\n      return value;\n    case 'sentence':\n      // Map ULineBreakTag rule status to string.\n      return {\n        0: 'terminator',\n        100: 'separator'\n      }[ruleStatus] || value;\n    case 'line':\n      // Map ULineBreakTag rule status to string.\n      return {\n        0: 'soft',\n        100: 'hard'\n      }[ruleStatus] || value;\n    default:\n      return value;\n    }\n  }\n\n  function segment(locale, granularity, string) {\n    const breaks = [];\n    if ('v8BreakIterator' in global.Intl) {\n      if (granularity === 'grapheme')\n        granularity = 'character';\n      const vbi = new global.Intl.v8BreakIterator(locale, {type: granularity});\n      vbi.adoptText(string);\n      let last = 0;\n      let pos = vbi.next();\n      while (pos !== -1) {\n        breaks.push({\n          pos: vbi.current(),\n          segment: string.slice(last, pos),\n          breakType: fixBreakType(vbi.breakType(), granularity)\n        });\n        last = pos;\n        pos = vbi.next();\n      }\n    } else {\n      const rules = RULES[granularity];\n      let pos = 0;\n      while (pos < string.length) {\n        let found = false;\n        for (let rule of Object.keys(rules)) {\n          const re = rules[rule];\n          const m = string.slice(pos).match(re);\n          if (m) {\n            pos += m[0].length;\n            breaks.push({\n              pos: pos,\n              segment: m[0],\n              breakType: granularity === 'grapheme' ? undefined : rule\n            });\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          breaks.push({\n            pos: pos + 1,\n            segment: string.slice(pos, ++pos),\n            breakType: 'none'\n          });\n        }\n      }\n    }\n    breaks.initial = 0;\n    return breaks;\n  }\n\n  class $SegmentIterator$ {\n    constructor(string, breaks) {\n      this._cur = -1;\n      this._type = undefined;\n      this._breaks = breaks;\n    }\n\n    [Symbol.iterator]() { return this; }\n\n    next() {\n      if (this._cur < this._breaks.length)\n        ++this._cur;\n\n      if (this._cur >= this._breaks.length) {\n        this._type = undefined;\n        return {done: true, value: undefined};\n      }\n\n      this._type = this._breaks[this._cur].breakType;\n      return {\n        done: false,\n        value: {\n          segment: this._breaks[this._cur].segment,\n          breakType: this._breaks[this._cur].breakType\n        }\n      };\n    }\n\n    following(index = undefined) {\n      if (!this._breaks.length)\n        return true;\n      if (index === undefined) {\n        if (this._cur < this._breaks.length)\n          ++this._cur;\n      } else {\n        // TODO: binary search\n        for (this._cur = 0;\n             this._cur < this._breaks.length\n             && this._breaks[this._cur].pos < index;\n             ++this._cur) {}\n      }\n\n      this._type = this._cur < this._breaks.length\n        ? this._breaks[this._cur].breakType : undefined;\n      return this._cur + 1 >= this._breaks.length;\n    }\n\n    preceding(index = undefined) {\n      if (!this._breaks.length)\n        return true;\n      if (index === undefined) {\n        if (this._cur >= this._breaks.length)\n          --this._cur;\n        if (this._cur >= 0)\n          --this._cur;\n      } else {\n        // TODO: binary search\n        for (this._cur = this._breaks.length - 1;\n             this._cur >= 0\n             && this._breaks[this._cur].pos >= index;\n             --this._cur) {}\n      }\n\n      this._type =\n        this._cur + 1 >= this._breaks.length ? undefined :\n        this._breaks[this._cur + 1].breakType;\n      return this._cur < 0;\n    }\n\n    get position() {\n      if (this._cur < 0 || !this._breaks.length)\n        return this._breaks.initial;\n      if (this._cur >= this._breaks.length)\n        return this._breaks[this._breaks.length - 1].pos;\n      return this._breaks[this._cur].pos;\n    }\n\n    get breakType() {\n      return this._type;\n    }\n  }\n\n  global.Intl.Segmenter = class Segmenter {\n    constructor(locale, options) {\n      this._locale = Array.isArray(locale)\n        ? locale.map(s => String(s)) : String(locale || navigator.language);\n      options = Object.assign({granularity: 'grapheme'}, options);\n      this._granularity = GRANULARITIES.includes(options.granularity)\n        ? options.granularity : 'grapheme';\n    }\n\n    segment(string) {\n      return new $SegmentIterator$(\n        string, segment(this._locale, this._granularity, string));\n    }\n  };\n}(typeof window !== 'undefined' ?\n      window :\n      (typeof global !== 'undefined' ? global : this)));\n// SOURCE FILE: libdot/third_party/wcwidth/lib_wc.js\n// Copyright (c) 2014 The Chromium OS Authors. All rights reserved.\n// Use of lib.wc source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview\n * This JavaScript library is ported from the wcwidth.js module of node.js.\n * The original implementation can be found at:\n * https://npmjs.org/package/wcwidth.js\n */\n\n/**\n * JavaScript porting of Markus Kuhn's wcwidth() implementation\n *\n * The following explanation comes from the original C implementation:\n *\n * This is an implementation of wcwidth() and wcswidth() (defined in\n * IEEE Std 1002.1-2001) for Unicode.\n *\n * https://www.opengroup.org/onlinepubs/007904975/functions/wcwidth.html\n * https://www.opengroup.org/onlinepubs/007904975/functions/wcswidth.html\n *\n * In fixed-width output devices, Latin characters all occupy a single\n * \"cell\" position of equal width, whereas ideographic CJK characters\n * occupy two such cells. Interoperability between terminal-line\n * applications and (teletype-style) character terminals using the\n * UTF-8 encoding requires agreement on which character should advance\n * the cursor by how many cell positions. No established formal\n * standards exist at present on which Unicode character shall occupy\n * how many cell positions on character terminals. These routines are\n * a first attempt of defining such behavior based on simple rules\n * applied to data provided by the Unicode Consortium.\n *\n * For some graphical characters, the Unicode standard explicitly\n * defines a character-cell width via the definition of the East Asian\n * FullWidth (F), Wide (W), Half-width (H), and Narrow (Na) classes.\n * In all these cases, there is no ambiguity about which width a\n * terminal shall use. For characters in the East Asian Ambiguous (A)\n * class, the width choice depends purely on a preference of backward\n * compatibility with either historic CJK or Western practice.\n * Choosing single-width for these characters is easy to justify as\n * the appropriate long-term solution, as the CJK practice of\n * displaying these characters as double-width comes from historic\n * implementation simplicity (8-bit encoded characters were displayed\n * single-width and 16-bit ones double-width, even for Greek,\n * Cyrillic, etc.) and not any typographic considerations.\n *\n * Much less clear is the choice of width for the Not East Asian\n * (Neutral) class. Existing practice does not dictate a width for any\n * of these characters. It would nevertheless make sense\n * typographically to allocate two character cells to characters such\n * as for instance EM SPACE or VOLUME INTEGRAL, which cannot be\n * represented adequately with a single-width glyph. The following\n * routines at present merely assign a single-cell width to all\n * neutral characters, in the interest of simplicity. This is not\n * entirely satisfactory and should be reconsidered before\n * establishing a formal standard in lib.wc area. At the moment, the\n * decision which Not East Asian (Neutral) characters should be\n * represented by double-width glyphs cannot yet be answered by\n * applying a simple rule from the Unicode database content. Setting\n * up a proper standard for the behavior of UTF-8 character terminals\n * will require a careful analysis not only of each Unicode character,\n * but also of each presentation form, something the author of these\n * routines has avoided to do so far.\n *\n * https://www.unicode.org/unicode/reports/tr11/\n *\n * Markus Kuhn -- 2007-05-26 (Unicode 5.0)\n *\n * Permission to use, copy, modify, and distribute lib.wc software\n * for any purpose and without fee is hereby granted. The author\n * disclaims all warranties with regard to lib.wc software.\n *\n * Latest version: https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c\n */\n\n/**\n * The following function defines the column width of an ISO 10646 character\n * as follows:\n *\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value of -1.\n *  - Non-spacing and enclosing combining characters (general category code Mn\n *    or Me in the Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode database)\n *    and ZERO WIDTH SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF) have a\n *    column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian Full-width (F)\n *    category as defined in Unicode Technical Report #11 have a column width of\n *    2.\n *  - East Asian Ambiguous characters are taken into account if\n *    regardCjkAmbiguous flag is enabled. They have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and WGL4\n *    characters, Unicode control characters, etc.) have a column width of 1.\n *\n * This implementation assumes that characters are encoded in ISO 10646.\n */\n\nlib.wc = {};\n\n// Width of a nul character.\nlib.wc.nulWidth = 0;\n\n// Width of a control character.\nlib.wc.controlWidth = 0;\n\n// Flag whether to consider East Asian Ambiguous characters.\nlib.wc.regardCjkAmbiguous = false;\n\n// Width of an East Asian Ambiguous character.\nlib.wc.cjkAmbiguousWidth = 2;\n\n// Sorted list of non-overlapping intervals of non-spacing characters\n// generated by the `./ranges.py` helper.\nlib.wc.combining = [\n    [0x00ad, 0x00ad], [0x0300, 0x036f], [0x0483, 0x0489],\n    [0x0591, 0x05bd], [0x05bf, 0x05bf], [0x05c1, 0x05c2],\n    [0x05c4, 0x05c5], [0x05c7, 0x05c7], [0x0610, 0x061a],\n    [0x061c, 0x061c], [0x064b, 0x065f], [0x0670, 0x0670],\n    [0x06d6, 0x06dc], [0x06df, 0x06e4], [0x06e7, 0x06e8],\n    [0x06ea, 0x06ed], [0x0711, 0x0711], [0x0730, 0x074a],\n    [0x07a6, 0x07b0], [0x07eb, 0x07f3], [0x07fd, 0x07fd],\n    [0x0816, 0x0819], [0x081b, 0x0823], [0x0825, 0x0827],\n    [0x0829, 0x082d], [0x0859, 0x085b], [0x08d3, 0x08e1],\n    [0x08e3, 0x0902], [0x093a, 0x093a], [0x093c, 0x093c],\n    [0x0941, 0x0948], [0x094d, 0x094d], [0x0951, 0x0957],\n    [0x0962, 0x0963], [0x0981, 0x0981], [0x09bc, 0x09bc],\n    [0x09c1, 0x09c4], [0x09cd, 0x09cd], [0x09e2, 0x09e3],\n    [0x09fe, 0x09fe], [0x0a01, 0x0a02], [0x0a3c, 0x0a3c],\n    [0x0a41, 0x0a42], [0x0a47, 0x0a48], [0x0a4b, 0x0a4d],\n    [0x0a51, 0x0a51], [0x0a70, 0x0a71], [0x0a75, 0x0a75],\n    [0x0a81, 0x0a82], [0x0abc, 0x0abc], [0x0ac1, 0x0ac5],\n    [0x0ac7, 0x0ac8], [0x0acd, 0x0acd], [0x0ae2, 0x0ae3],\n    [0x0afa, 0x0aff], [0x0b01, 0x0b01], [0x0b3c, 0x0b3c],\n    [0x0b3f, 0x0b3f], [0x0b41, 0x0b44], [0x0b4d, 0x0b4d],\n    [0x0b56, 0x0b56], [0x0b62, 0x0b63], [0x0b82, 0x0b82],\n    [0x0bc0, 0x0bc0], [0x0bcd, 0x0bcd], [0x0c00, 0x0c00],\n    [0x0c04, 0x0c04], [0x0c3e, 0x0c40], [0x0c46, 0x0c48],\n    [0x0c4a, 0x0c4d], [0x0c55, 0x0c56], [0x0c62, 0x0c63],\n    [0x0c81, 0x0c81], [0x0cbc, 0x0cbc], [0x0cbf, 0x0cbf],\n    [0x0cc6, 0x0cc6], [0x0ccc, 0x0ccd], [0x0ce2, 0x0ce3],\n    [0x0d00, 0x0d01], [0x0d3b, 0x0d3c], [0x0d41, 0x0d44],\n    [0x0d4d, 0x0d4d], [0x0d62, 0x0d63], [0x0dca, 0x0dca],\n    [0x0dd2, 0x0dd4], [0x0dd6, 0x0dd6], [0x0e31, 0x0e31],\n    [0x0e34, 0x0e3a], [0x0e47, 0x0e4e], [0x0eb1, 0x0eb1],\n    [0x0eb4, 0x0ebc], [0x0ec8, 0x0ecd], [0x0f18, 0x0f19],\n    [0x0f35, 0x0f35], [0x0f37, 0x0f37], [0x0f39, 0x0f39],\n    [0x0f71, 0x0f7e], [0x0f80, 0x0f84], [0x0f86, 0x0f87],\n    [0x0f8d, 0x0f97], [0x0f99, 0x0fbc], [0x0fc6, 0x0fc6],\n    [0x102d, 0x1030], [0x1032, 0x1037], [0x1039, 0x103a],\n    [0x103d, 0x103e], [0x1058, 0x1059], [0x105e, 0x1060],\n    [0x1071, 0x1074], [0x1082, 0x1082], [0x1085, 0x1086],\n    [0x108d, 0x108d], [0x109d, 0x109d], [0x1160, 0x11ff],\n    [0x135d, 0x135f], [0x1712, 0x1714], [0x1732, 0x1734],\n    [0x1752, 0x1753], [0x1772, 0x1773], [0x17b4, 0x17b5],\n    [0x17b7, 0x17bd], [0x17c6, 0x17c6], [0x17c9, 0x17d3],\n    [0x17dd, 0x17dd], [0x180b, 0x180e], [0x1885, 0x1886],\n    [0x18a9, 0x18a9], [0x1920, 0x1922], [0x1927, 0x1928],\n    [0x1932, 0x1932], [0x1939, 0x193b], [0x1a17, 0x1a18],\n    [0x1a1b, 0x1a1b], [0x1a56, 0x1a56], [0x1a58, 0x1a5e],\n    [0x1a60, 0x1a60], [0x1a62, 0x1a62], [0x1a65, 0x1a6c],\n    [0x1a73, 0x1a7c], [0x1a7f, 0x1a7f], [0x1ab0, 0x1abe],\n    [0x1b00, 0x1b03], [0x1b34, 0x1b34], [0x1b36, 0x1b3a],\n    [0x1b3c, 0x1b3c], [0x1b42, 0x1b42], [0x1b6b, 0x1b73],\n    [0x1b80, 0x1b81], [0x1ba2, 0x1ba5], [0x1ba8, 0x1ba9],\n    [0x1bab, 0x1bad], [0x1be6, 0x1be6], [0x1be8, 0x1be9],\n    [0x1bed, 0x1bed], [0x1bef, 0x1bf1], [0x1c2c, 0x1c33],\n    [0x1c36, 0x1c37], [0x1cd0, 0x1cd2], [0x1cd4, 0x1ce0],\n    [0x1ce2, 0x1ce8], [0x1ced, 0x1ced], [0x1cf4, 0x1cf4],\n    [0x1cf8, 0x1cf9], [0x1dc0, 0x1df9], [0x1dfb, 0x1dff],\n    [0x200b, 0x200f], [0x202a, 0x202e], [0x2060, 0x2064],\n    [0x2066, 0x206f], [0x20d0, 0x20f0], [0x2cef, 0x2cf1],\n    [0x2d7f, 0x2d7f], [0x2de0, 0x2dff], [0x302a, 0x302d],\n    [0x3099, 0x309a], [0xa66f, 0xa672], [0xa674, 0xa67d],\n    [0xa69e, 0xa69f], [0xa6f0, 0xa6f1], [0xa802, 0xa802],\n    [0xa806, 0xa806], [0xa80b, 0xa80b], [0xa825, 0xa826],\n    [0xa8c4, 0xa8c5], [0xa8e0, 0xa8f1], [0xa8ff, 0xa8ff],\n    [0xa926, 0xa92d], [0xa947, 0xa951], [0xa980, 0xa982],\n    [0xa9b3, 0xa9b3], [0xa9b6, 0xa9b9], [0xa9bc, 0xa9bd],\n    [0xa9e5, 0xa9e5], [0xaa29, 0xaa2e], [0xaa31, 0xaa32],\n    [0xaa35, 0xaa36], [0xaa43, 0xaa43], [0xaa4c, 0xaa4c],\n    [0xaa7c, 0xaa7c], [0xaab0, 0xaab0], [0xaab2, 0xaab4],\n    [0xaab7, 0xaab8], [0xaabe, 0xaabf], [0xaac1, 0xaac1],\n    [0xaaec, 0xaaed], [0xaaf6, 0xaaf6], [0xabe5, 0xabe5],\n    [0xabe8, 0xabe8], [0xabed, 0xabed], [0xfb1e, 0xfb1e],\n    [0xfe00, 0xfe0f], [0xfe20, 0xfe2f], [0xfeff, 0xfeff],\n    [0xfff9, 0xfffb], [0x101fd, 0x101fd], [0x102e0, 0x102e0],\n    [0x10376, 0x1037a], [0x10a01, 0x10a03], [0x10a05, 0x10a06],\n    [0x10a0c, 0x10a0f], [0x10a38, 0x10a3a], [0x10a3f, 0x10a3f],\n    [0x10ae5, 0x10ae6], [0x10d24, 0x10d27], [0x10f46, 0x10f50],\n    [0x11001, 0x11001], [0x11038, 0x11046], [0x1107f, 0x11081],\n    [0x110b3, 0x110b6], [0x110b9, 0x110ba], [0x11100, 0x11102],\n    [0x11127, 0x1112b], [0x1112d, 0x11134], [0x11173, 0x11173],\n    [0x11180, 0x11181], [0x111b6, 0x111be], [0x111c9, 0x111cc],\n    [0x1122f, 0x11231], [0x11234, 0x11234], [0x11236, 0x11237],\n    [0x1123e, 0x1123e], [0x112df, 0x112df], [0x112e3, 0x112ea],\n    [0x11300, 0x11301], [0x1133b, 0x1133c], [0x11340, 0x11340],\n    [0x11366, 0x1136c], [0x11370, 0x11374], [0x11438, 0x1143f],\n    [0x11442, 0x11444], [0x11446, 0x11446], [0x1145e, 0x1145e],\n    [0x114b3, 0x114b8], [0x114ba, 0x114ba], [0x114bf, 0x114c0],\n    [0x114c2, 0x114c3], [0x115b2, 0x115b5], [0x115bc, 0x115bd],\n    [0x115bf, 0x115c0], [0x115dc, 0x115dd], [0x11633, 0x1163a],\n    [0x1163d, 0x1163d], [0x1163f, 0x11640], [0x116ab, 0x116ab],\n    [0x116ad, 0x116ad], [0x116b0, 0x116b5], [0x116b7, 0x116b7],\n    [0x1171d, 0x1171f], [0x11722, 0x11725], [0x11727, 0x1172b],\n    [0x1182f, 0x11837], [0x11839, 0x1183a], [0x119d4, 0x119d7],\n    [0x119da, 0x119db], [0x119e0, 0x119e0], [0x11a01, 0x11a0a],\n    [0x11a33, 0x11a38], [0x11a3b, 0x11a3e], [0x11a47, 0x11a47],\n    [0x11a51, 0x11a56], [0x11a59, 0x11a5b], [0x11a8a, 0x11a96],\n    [0x11a98, 0x11a99], [0x11c30, 0x11c36], [0x11c38, 0x11c3d],\n    [0x11c3f, 0x11c3f], [0x11c92, 0x11ca7], [0x11caa, 0x11cb0],\n    [0x11cb2, 0x11cb3], [0x11cb5, 0x11cb6], [0x11d31, 0x11d36],\n    [0x11d3a, 0x11d3a], [0x11d3c, 0x11d3d], [0x11d3f, 0x11d45],\n    [0x11d47, 0x11d47], [0x11d90, 0x11d91], [0x11d95, 0x11d95],\n    [0x11d97, 0x11d97], [0x11ef3, 0x11ef4], [0x13430, 0x13438],\n    [0x16af0, 0x16af4], [0x16b30, 0x16b36], [0x16f4f, 0x16f4f],\n    [0x16f8f, 0x16f92], [0x1bc9d, 0x1bc9e], [0x1bca0, 0x1bca3],\n    [0x1d167, 0x1d169], [0x1d173, 0x1d182], [0x1d185, 0x1d18b],\n    [0x1d1aa, 0x1d1ad], [0x1d242, 0x1d244], [0x1da00, 0x1da36],\n    [0x1da3b, 0x1da6c], [0x1da75, 0x1da75], [0x1da84, 0x1da84],\n    [0x1da9b, 0x1da9f], [0x1daa1, 0x1daaf], [0x1e000, 0x1e006],\n    [0x1e008, 0x1e018], [0x1e01b, 0x1e021], [0x1e023, 0x1e024],\n    [0x1e026, 0x1e02a], [0x1e130, 0x1e136], [0x1e2ec, 0x1e2ef],\n    [0x1e8d0, 0x1e8d6], [0x1e944, 0x1e94a], [0xe0001, 0xe0001],\n    [0xe0020, 0xe007f], [0xe0100, 0xe01ef],\n];\n\n// Sorted list of non-overlapping intervals of East Asian Ambiguous characters\n// generated by the `./ranges.py` helper.\nlib.wc.ambiguous = [\n    [0x00a1, 0x00a1], [0x00a4, 0x00a4], [0x00a7, 0x00a8],\n    [0x00aa, 0x00aa], [0x00ad, 0x00ae], [0x00b0, 0x00b4],\n    [0x00b6, 0x00ba], [0x00bc, 0x00bf], [0x00c6, 0x00c6],\n    [0x00d0, 0x00d0], [0x00d7, 0x00d8], [0x00de, 0x00e1],\n    [0x00e6, 0x00e6], [0x00e8, 0x00ea], [0x00ec, 0x00ed],\n    [0x00f0, 0x00f0], [0x00f2, 0x00f3], [0x00f7, 0x00fa],\n    [0x00fc, 0x00fc], [0x00fe, 0x00fe], [0x0101, 0x0101],\n    [0x0111, 0x0111], [0x0113, 0x0113], [0x011b, 0x011b],\n    [0x0126, 0x0127], [0x012b, 0x012b], [0x0131, 0x0133],\n    [0x0138, 0x0138], [0x013f, 0x0142], [0x0144, 0x0144],\n    [0x0148, 0x014b], [0x014d, 0x014d], [0x0152, 0x0153],\n    [0x0166, 0x0167], [0x016b, 0x016b], [0x01ce, 0x01ce],\n    [0x01d0, 0x01d0], [0x01d2, 0x01d2], [0x01d4, 0x01d4],\n    [0x01d6, 0x01d6], [0x01d8, 0x01d8], [0x01da, 0x01da],\n    [0x01dc, 0x01dc], [0x0251, 0x0251], [0x0261, 0x0261],\n    [0x02c4, 0x02c4], [0x02c7, 0x02c7], [0x02c9, 0x02cb],\n    [0x02cd, 0x02cd], [0x02d0, 0x02d0], [0x02d8, 0x02db],\n    [0x02dd, 0x02dd], [0x02df, 0x02df], [0x0300, 0x036f],\n    [0x0391, 0x03a1], [0x03a3, 0x03a9], [0x03b1, 0x03c1],\n    [0x03c3, 0x03c9], [0x0401, 0x0401], [0x0410, 0x044f],\n    [0x0451, 0x0451], [0x1100, 0x115f], [0x2010, 0x2010],\n    [0x2013, 0x2016], [0x2018, 0x2019], [0x201c, 0x201d],\n    [0x2020, 0x2022], [0x2024, 0x2027], [0x2030, 0x2030],\n    [0x2032, 0x2033], [0x2035, 0x2035], [0x203b, 0x203b],\n    [0x203e, 0x203e], [0x2074, 0x2074], [0x207f, 0x207f],\n    [0x2081, 0x2084], [0x20ac, 0x20ac], [0x2103, 0x2103],\n    [0x2105, 0x2105], [0x2109, 0x2109], [0x2113, 0x2113],\n    [0x2116, 0x2116], [0x2121, 0x2122], [0x2126, 0x2126],\n    [0x212b, 0x212b], [0x2153, 0x2154], [0x215b, 0x215e],\n    [0x2160, 0x216b], [0x2170, 0x2179], [0x2189, 0x2189],\n    [0x2190, 0x2199], [0x21b8, 0x21b9], [0x21d2, 0x21d2],\n    [0x21d4, 0x21d4], [0x21e7, 0x21e7], [0x2200, 0x2200],\n    [0x2202, 0x2203], [0x2207, 0x2208], [0x220b, 0x220b],\n    [0x220f, 0x220f], [0x2211, 0x2211], [0x2215, 0x2215],\n    [0x221a, 0x221a], [0x221d, 0x2220], [0x2223, 0x2223],\n    [0x2225, 0x2225], [0x2227, 0x222c], [0x222e, 0x222e],\n    [0x2234, 0x2237], [0x223c, 0x223d], [0x2248, 0x2248],\n    [0x224c, 0x224c], [0x2252, 0x2252], [0x2260, 0x2261],\n    [0x2264, 0x2267], [0x226a, 0x226b], [0x226e, 0x226f],\n    [0x2282, 0x2283], [0x2286, 0x2287], [0x2295, 0x2295],\n    [0x2299, 0x2299], [0x22a5, 0x22a5], [0x22bf, 0x22bf],\n    [0x2312, 0x2312], [0x231a, 0x231b], [0x2329, 0x232a],\n    [0x23e9, 0x23ec], [0x23f0, 0x23f0], [0x23f3, 0x23f3],\n    [0x2460, 0x24e9], [0x24eb, 0x254b], [0x2550, 0x2573],\n    [0x2580, 0x258f], [0x2592, 0x2595], [0x25a0, 0x25a1],\n    [0x25a3, 0x25a9], [0x25b2, 0x25b3], [0x25b6, 0x25b7],\n    [0x25bc, 0x25bd], [0x25c0, 0x25c1], [0x25c6, 0x25c8],\n    [0x25cb, 0x25cb], [0x25ce, 0x25d1], [0x25e2, 0x25e5],\n    [0x25ef, 0x25ef], [0x25fd, 0x25fe], [0x2605, 0x2606],\n    [0x2609, 0x2609], [0x260e, 0x260f], [0x2614, 0x2615],\n    [0x261c, 0x261c], [0x261e, 0x261e], [0x2640, 0x2640],\n    [0x2642, 0x2642], [0x2648, 0x2653], [0x2660, 0x2661],\n    [0x2663, 0x2665], [0x2667, 0x266a], [0x266c, 0x266d],\n    [0x266f, 0x266f], [0x267f, 0x267f], [0x2693, 0x2693],\n    [0x269e, 0x269f], [0x26a1, 0x26a1], [0x26aa, 0x26ab],\n    [0x26bd, 0x26bf], [0x26c4, 0x26e1], [0x26e3, 0x26e3],\n    [0x26e8, 0x26ff], [0x2705, 0x2705], [0x270a, 0x270b],\n    [0x2728, 0x2728], [0x273d, 0x273d], [0x274c, 0x274c],\n    [0x274e, 0x274e], [0x2753, 0x2755], [0x2757, 0x2757],\n    [0x2776, 0x277f], [0x2795, 0x2797], [0x27b0, 0x27b0],\n    [0x27bf, 0x27bf], [0x2b1b, 0x2b1c], [0x2b50, 0x2b50],\n    [0x2b55, 0x2b59], [0x2e80, 0x2fdf], [0x2ff0, 0x303e],\n    [0x3040, 0x4dbf], [0x4e00, 0xa4cf], [0xa960, 0xa97f],\n    [0xac00, 0xd7a3], [0xe000, 0xfaff], [0xfe00, 0xfe19],\n    [0xfe30, 0xfe6f], [0xff01, 0xff60], [0xffe0, 0xffe6],\n    [0xfffd, 0xfffd], [0x16fe0, 0x16fe3], [0x17000, 0x18aff],\n    [0x1b000, 0x1b12f], [0x1b150, 0x1b152], [0x1b164, 0x1b167],\n    [0x1b170, 0x1b2ff], [0x1f004, 0x1f004], [0x1f0cf, 0x1f0cf],\n    [0x1f100, 0x1f10a], [0x1f110, 0x1f12d], [0x1f130, 0x1f169],\n    [0x1f170, 0x1f1ac], [0x1f200, 0x1f202], [0x1f210, 0x1f23b],\n    [0x1f240, 0x1f248], [0x1f250, 0x1f251], [0x1f260, 0x1f265],\n    [0x1f300, 0x1f320], [0x1f32d, 0x1f335], [0x1f337, 0x1f37c],\n    [0x1f37e, 0x1f393], [0x1f3a0, 0x1f3ca], [0x1f3cf, 0x1f3d3],\n    [0x1f3e0, 0x1f3f0], [0x1f3f4, 0x1f3f4], [0x1f3f8, 0x1f43e],\n    [0x1f440, 0x1f440], [0x1f442, 0x1f4fc], [0x1f4ff, 0x1f53d],\n    [0x1f54b, 0x1f54e], [0x1f550, 0x1f567], [0x1f57a, 0x1f57a],\n    [0x1f595, 0x1f596], [0x1f5a4, 0x1f5a4], [0x1f5fb, 0x1f64f],\n    [0x1f680, 0x1f6c5], [0x1f6cc, 0x1f6cc], [0x1f6d0, 0x1f6d2],\n    [0x1f6d5, 0x1f6d5], [0x1f6eb, 0x1f6ec], [0x1f6f4, 0x1f6fa],\n    [0x1f7e0, 0x1f7eb], [0x1f90d, 0x1f971], [0x1f973, 0x1f976],\n    [0x1f97a, 0x1f9a2], [0x1f9a5, 0x1f9aa], [0x1f9ae, 0x1f9ca],\n    [0x1f9cd, 0x1f9ff], [0x1fa70, 0x1fa73], [0x1fa78, 0x1fa7a],\n    [0x1fa80, 0x1fa82], [0x1fa90, 0x1fa95], [0x20000, 0x2fffd],\n    [0x30000, 0x3fffd], [0xe0100, 0xe01ef], [0xf0000, 0xffffd],\n    [0x100000, 0x10fffd],\n];\n\n// Sorted list of non-overlapping intervals of East Asian Unambiguous characters\n// generated by the `./ranges.py` helper.\nlib.wc.unambiguous = [\n    [0x1100, 0x115f], [0x231a, 0x231b], [0x2329, 0x232a],\n    [0x23e9, 0x23ec], [0x23f0, 0x23f0], [0x23f3, 0x23f3],\n    [0x25fd, 0x25fe], [0x2614, 0x2615], [0x2648, 0x2653],\n    [0x267f, 0x267f], [0x2693, 0x2693], [0x26a1, 0x26a1],\n    [0x26aa, 0x26ab], [0x26bd, 0x26be], [0x26c4, 0x26c5],\n    [0x26ce, 0x26ce], [0x26d4, 0x26d4], [0x26ea, 0x26ea],\n    [0x26f2, 0x26f3], [0x26f5, 0x26f5], [0x26fa, 0x26fa],\n    [0x26fd, 0x26fd], [0x2705, 0x2705], [0x270a, 0x270b],\n    [0x2728, 0x2728], [0x274c, 0x274c], [0x274e, 0x274e],\n    [0x2753, 0x2755], [0x2757, 0x2757], [0x2795, 0x2797],\n    [0x27b0, 0x27b0], [0x27bf, 0x27bf], [0x2b1b, 0x2b1c],\n    [0x2b50, 0x2b50], [0x2b55, 0x2b55], [0x2e80, 0x2fdf],\n    [0x2ff0, 0x303e], [0x3040, 0x3247], [0x3250, 0x4dbf],\n    [0x4e00, 0xa4cf], [0xa960, 0xa97f], [0xac00, 0xd7a3],\n    [0xf900, 0xfaff], [0xfe10, 0xfe19], [0xfe30, 0xfe6f],\n    [0xff01, 0xff60], [0xffe0, 0xffe6], [0x16fe0, 0x16fe3],\n    [0x17000, 0x18aff], [0x1b000, 0x1b12f], [0x1b150, 0x1b152],\n    [0x1b164, 0x1b167], [0x1b170, 0x1b2ff], [0x1f004, 0x1f004],\n    [0x1f0cf, 0x1f0cf], [0x1f18e, 0x1f18e], [0x1f191, 0x1f19a],\n    [0x1f200, 0x1f202], [0x1f210, 0x1f23b], [0x1f240, 0x1f248],\n    [0x1f250, 0x1f251], [0x1f260, 0x1f265], [0x1f300, 0x1f320],\n    [0x1f32d, 0x1f335], [0x1f337, 0x1f37c], [0x1f37e, 0x1f393],\n    [0x1f3a0, 0x1f3ca], [0x1f3cf, 0x1f3d3], [0x1f3e0, 0x1f3f0],\n    [0x1f3f4, 0x1f3f4], [0x1f3f8, 0x1f43e], [0x1f440, 0x1f440],\n    [0x1f442, 0x1f4fc], [0x1f4ff, 0x1f53d], [0x1f54b, 0x1f54e],\n    [0x1f550, 0x1f567], [0x1f57a, 0x1f57a], [0x1f595, 0x1f596],\n    [0x1f5a4, 0x1f5a4], [0x1f5fb, 0x1f64f], [0x1f680, 0x1f6c5],\n    [0x1f6cc, 0x1f6cc], [0x1f6d0, 0x1f6d2], [0x1f6d5, 0x1f6d5],\n    [0x1f6eb, 0x1f6ec], [0x1f6f4, 0x1f6fa], [0x1f7e0, 0x1f7eb],\n    [0x1f90d, 0x1f971], [0x1f973, 0x1f976], [0x1f97a, 0x1f9a2],\n    [0x1f9a5, 0x1f9aa], [0x1f9ae, 0x1f9ca], [0x1f9cd, 0x1f9ff],\n    [0x1fa70, 0x1fa73], [0x1fa78, 0x1fa7a], [0x1fa80, 0x1fa82],\n    [0x1fa90, 0x1fa95], [0x20000, 0x2fffd], [0x30000, 0x3fffd],\n];\n\n/**\n * Binary search to check if the given unicode character is in the table.\n *\n * @param {number} ucs A unicode character code.\n * @param {!Object} table A sorted list of internals to match against.\n * @return {boolean} True if the given character is in the table.\n */\nlib.wc.binaryTableSearch_ = function(ucs, table) {\n  var min = 0, max = table.length - 1;\n  var mid;\n\n  if (ucs < table[min][0] || ucs > table[max][1])\n    return false;\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2);\n    if (ucs > table[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < table[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Binary search to check if the given unicode character is a space character.\n *\n * @param {number} ucs A unicode character code.\n * @return {boolean} True if the given character is a space character; false\n *     otherwise.\n */\nlib.wc.isSpace = function(ucs) {\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.combining);\n};\n\n/**\n * Auxiliary function for checking if the given unicode character is a East\n * Asian Ambiguous character.\n *\n * @param {number} ucs A unicode character code.\n * @return {boolean} True if the given character is a East Asian Ambiguous\n *     character.\n */\nlib.wc.isCjkAmbiguous = function(ucs) {\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.ambiguous);\n};\n\n/**\n * Determine the column width of the given character.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidth = function(ucs) {\n  if (lib.wc.regardCjkAmbiguous) {\n    return lib.wc.charWidthRegardAmbiguous(ucs);\n  } else {\n    return lib.wc.charWidthDisregardAmbiguous(ucs);\n  }\n};\n\n/**\n * Determine the column width of the given character without considering East\n * Asian Ambiguous characters.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidthDisregardAmbiguous = function(ucs) {\n  // Optimize for ASCII characters.\n  if (ucs < 0x7f) {\n    if (ucs >= 0x20)\n      return 1;\n    else if (ucs == 0)\n      return lib.wc.nulWidth;\n    else /* if (ucs < 0x20) */\n      return lib.wc.controlWidth;\n  }\n\n  // Test for 8-bit control characters.\n  if (ucs < 0xa0)\n    return lib.wc.controlWidth;\n\n  // Binary search in table of non-spacing characters.\n  if (lib.wc.isSpace(ucs))\n    return 0;\n\n  // Binary search in table of wide characters.\n  return lib.wc.binaryTableSearch_(ucs, lib.wc.unambiguous) ? 2 : 1;\n};\n\n/**\n * Determine the column width of the given character considering East Asian\n * Ambiguous characters.\n *\n * @param {number} ucs A unicode character code.\n * @return {number} The column width of the given character.\n */\nlib.wc.charWidthRegardAmbiguous = function(ucs) {\n  if (lib.wc.isCjkAmbiguous(ucs))\n    return lib.wc.cjkAmbiguousWidth;\n\n  return lib.wc.charWidthDisregardAmbiguous(ucs);\n};\n\n/**\n * Determine the column width of the given string.\n *\n * @param {string} str A string.\n * @return {number} The column width of the given string.\n */\nlib.wc.strWidth = function(str) {\n  var width, rv = 0;\n\n  for (var i = 0; i < str.length;) {\n    var codePoint = str.codePointAt(i);\n    width = lib.wc.charWidth(codePoint);\n    if (width < 0)\n      return -1;\n    rv += width;\n    i += (codePoint <= 0xffff) ? 1 : 2;\n  }\n\n  return rv;\n};\n\n/**\n * Get the substring at the given column offset of the given column width.\n *\n * @param {string} str The string to get substring from.\n * @param {number} start The starting column offset to get substring.\n * @param {number=} opt_width The column width of the substring.\n * @return {string} The substring.\n */\nlib.wc.substr = function(str, start, opt_width) {\n  var startIndex = 0;\n  var endIndex, width;\n\n  // Fun edge case: Normally we associate zero width codepoints (like combining\n  // characters) with the previous codepoint, so we skip any leading ones while\n  // including trailing ones.  However, if there are zero width codepoints at\n  // the start of the string, and the substring starts at 0, lets include them\n  // in the result.  This also makes for a simple optimization for a common\n  // request.\n  if (start) {\n    for (width = 0; startIndex < str.length;) {\n      const codePoint = str.codePointAt(startIndex);\n      width += lib.wc.charWidth(codePoint);\n      if (width > start)\n        break;\n      startIndex += (codePoint <= 0xffff) ? 1 : 2;\n    }\n  }\n\n  if (opt_width != undefined) {\n    for (endIndex = startIndex, width = 0; endIndex < str.length;) {\n      const codePoint = str.codePointAt(endIndex);\n      width += lib.wc.charWidth(codePoint);\n      if (width > opt_width)\n        break;\n      endIndex += (codePoint <= 0xffff) ? 1 : 2;\n    }\n    return str.substring(startIndex, endIndex);\n  }\n\n  return str.substr(startIndex);\n};\n\n/**\n * Get substring at the given start and end column offset.\n *\n * @param {string} str The string to get substring from.\n * @param {number} start The starting column offset.\n * @param {number} end The ending column offset.\n * @return {string} The substring.\n */\nlib.wc.substring = function(str, start, end) {\n  return lib.wc.substr(str, start, end - start);\n};\nlib.resource.add('libdot/changelog/version', 'text/plain',\n'4.0.0'\n);\n\nlib.resource.add('libdot/changelog/date', 'text/plain',\n'2019-11-28'\n);\n\n// SOURCE FILE: hterm/js/hterm.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Declares the hterm.* namespace and some basic shared utilities\n * that are too small to deserve dedicated files.\n */\nexport const hterm = {};\n\n/**\n * The type of window hosting hterm.\n *\n * This is set as part of hterm.init().  The value is invalid until\n * initialization completes.\n */\nhterm.windowType = null;\n\n/**\n * The OS we're running under.\n *\n * Used when setting up OS-specific behaviors.\n *\n * This is set as part of hterm.init().  The value is invalid until\n * initialization completes.\n */\nhterm.os = null;\n\n/**\n * Warning message to display in the terminal when browser zoom is enabled.\n *\n * You can replace it with your own localized message.\n */\nhterm.zoomWarningMessage = 'ZOOM != 100%';\n\n/**\n * Brief overlay message displayed when text is copied to the clipboard.\n *\n * By default it is the unicode BLACK SCISSORS character, but you can\n * replace it with your own localized message.\n *\n * This is only displayed when the 'enable-clipboard-notice' preference\n * is enabled.\n */\nhterm.notifyCopyMessage = '\\u2702';\n\n\n/**\n * Text shown in a desktop notification for the terminal\n * bell.  \\u226a is a unicode EIGHTH NOTE, %(title) will\n * be replaced by the terminal title.\n */\nhterm.desktopNotificationTitle = '\\u266A %(title) \\u266A';\n\n/** @type {?lib.MessageManager} */\nhterm.messageManager = null;\n\nlib.registerInit(\n    'hterm',\n    /**\n     * The hterm init function, registered with lib.registerInit().\n     *\n     * This is called during lib.init().\n     *\n     * @param {function()} onInit The function lib.init() wants us to invoke\n     *     when initialization is complete.\n     */\n    function(onInit) {\n      function initOs(os) {\n        hterm.os = os;\n\n        onInit();\n      }\n\n      function initMessageManager() {\n        lib.i18n.getAcceptLanguages((languages) => {\n          if (!hterm.messageManager)\n            hterm.messageManager = new lib.MessageManager(languages);\n\n          // If OS detection fails, then we'll still set the value to something.\n          // The OS logic in hterm tends to be best effort anyways.\n          lib.f.getOs().then(initOs).catch(initOs);\n        });\n      }\n\n      function onWindow(window) {\n        hterm.windowType = window.type;\n        initMessageManager();\n      }\n\n      function onTab(tab) {\n        if (tab && window.chrome) {\n          chrome.windows.get(tab.windowId, null, onWindow);\n        } else {\n          // TODO(rginda): This is where we end up for a v1 app's background\n          // page. Maybe windowType = 'none' would be more appropriate, or\n          // something.\n          hterm.windowType = 'normal';\n          initMessageManager();\n        }\n      }\n\n      if (!hterm.defaultStorage) {\n        if (window.chrome && chrome.storage && chrome.storage.sync) {\n          hterm.defaultStorage = new lib.Storage.Chrome(chrome.storage.sync);\n        } else {\n          hterm.defaultStorage = new lib.Storage.Local();\n        }\n      }\n\n      // The chrome.tabs API is not supported in packaged apps, and detecting if\n      // you're a packaged app is a little awkward.\n      var isPackagedApp = false;\n      if (window.chrome && chrome.runtime && chrome.runtime.getManifest) {\n        var manifest = chrome.runtime.getManifest();\n        isPackagedApp = manifest.app && manifest.app.background;\n      }\n\n      if (isPackagedApp) {\n        // Packaged apps are never displayed in browser tabs.\n        setTimeout(onWindow.bind(null, {type: 'popup'}), 0);\n      } else {\n        if (window.chrome && chrome.tabs) {\n          // The getCurrent method gets the tab that is \"currently running\", not\n          // the topmost or focused tab.\n          chrome.tabs.getCurrent(onTab);\n        } else {\n          setTimeout(onWindow.bind(null, {type: 'normal'}), 0);\n        }\n      }\n    });\n\n/**\n * Return decimal { width, height } for a given DOM element.\n *\n * @param {!Element} element The element whose size to lookup.\n * @return {!DOMRect} The size of the element.\n */\nhterm.getClientSize = function(element) {\n  return element.getBoundingClientRect();\n};\n\n/**\n * Return decimal width for a given DOM element.\n *\n * @param {!Element} element The element whose width to lookup.\n * @return {number} The width of the element.\n */\nhterm.getClientWidth = function(element) {\n  return element.getBoundingClientRect().width;\n};\n\n/**\n * Return decimal height for a given DOM element.\n *\n * @param {!Element} element The element whose height to lookup.\n * @return {number} The height of the element.\n */\nhterm.getClientHeight = function(element) {\n  return element.getBoundingClientRect().height;\n};\n\n/**\n * Copy the specified text to the system clipboard.\n *\n * We'll create selections on demand based on the content to copy.\n *\n * @param {!Document} document The document with the selection to copy.\n * @param {string} str The string data to copy out.\n * @return {!Promise<void>}\n */\nhterm.copySelectionToClipboard = function(document, str) {\n  // Request permission if need be.\n  const requestPermission = () => {\n    // Use the Permissions API if available.\n    if (navigator.permissions && navigator.permissions.query) {\n      return navigator.permissions.query({name: 'clipboard-write'})\n        .then((status) => {\n          const checkState = (resolve, reject) => {\n            switch (status.state) {\n              case 'granted':\n                return resolve();\n              case 'denied':\n                return reject();\n              default:\n                // Wait for the user to approve/disprove.\n                return new Promise((resolve, reject) => {\n                  status.onchange = () => checkState(resolve, reject);\n                });\n            }\n          };\n\n          return new Promise(checkState);\n        })\n        // If the platform doesn't support \"clipboard-write\", or is denied,\n        // we move on to the copying step anyways.\n        .catch(() => Promise.resolve());\n    } else {\n      // No permissions API, so resolve right away.\n      return Promise.resolve();\n    }\n  };\n\n  // Write to the clipboard.\n  const writeClipboard = () => {\n    // Use the Clipboard API if available.\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      // If this fails (perhaps due to focus changing windows), fallback to the\n      // legacy copy method.\n      return navigator.clipboard.writeText(str)\n        .catch(execCommand);\n    } else {\n      // No Clipboard API, so use the old execCommand style.\n      return execCommand();\n    }\n  };\n\n  // Write to the clipboard using the legacy execCommand method.\n  // TODO: Once we can rely on the Clipboard API everywhere, we can simplify\n  // this a lot by deleting the custom selection logic.\n  const execCommand = () => {\n    const copySource = document.createElement('pre');\n    copySource.id = 'hterm:copy-to-clipboard-source';\n    copySource.textContent = str;\n    copySource.style.cssText = (\n        '-webkit-user-select: text;' +\n        '-moz-user-select: text;' +\n        'position: absolute;' +\n        'top: -99px');\n\n    document.body.appendChild(copySource);\n\n    const selection = document.getSelection();\n    const anchorNode = selection.anchorNode;\n    const anchorOffset = selection.anchorOffset;\n    const focusNode = selection.focusNode;\n    const focusOffset = selection.focusOffset;\n\n    // FF sometimes throws NS_ERROR_FAILURE exceptions when we make this call.\n    // Catch it because a failure here leaks the copySource node.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1178676\n    try {\n      selection.selectAllChildren(copySource);\n    } catch (ex) {}\n\n    try {\n      document.execCommand('copy');\n    } catch (firefoxException) {\n      // Ignore this. FF throws an exception if there was an error, even\n      // though the spec says just return false.\n    }\n\n    // IE doesn't support selection.extend.  This means that the selection won't\n    // return on IE.\n    if (selection.extend) {\n      // When running in the test harness, we won't have any related nodes.\n      if (anchorNode) {\n        selection.collapse(anchorNode, anchorOffset);\n      }\n      if (focusNode) {\n        selection.extend(focusNode, focusOffset);\n      }\n    }\n\n    copySource.parentNode.removeChild(copySource);\n\n    // Since execCommand is synchronous, resolve right away.\n    return Promise.resolve();\n  };\n\n  // Kick it all off!\n  return requestPermission().then(writeClipboard);\n};\n\n/**\n * Paste the system clipboard into the element with focus.\n *\n * Note: In Chrome/Firefox app/extension environments, you'll need the\n * \"clipboardRead\" permission.  In other environments, this might always\n * fail as the browser frequently blocks access for security reasons.\n *\n * @param {!Document} document The document to paste into.\n * @return {boolean} True if the paste succeeded.\n */\nhterm.pasteFromClipboard = function(document) {\n  try {\n    return document.execCommand('paste');\n  } catch (firefoxException) {\n    // Ignore this.  FF 40 and older would incorrectly throw an exception if\n    // there was an error instead of returning false.\n    return false;\n  }\n};\n\n/**\n * Return a formatted message in the current locale.\n *\n * @param {string} name The name of the message to return.\n * @param {!Array<string>=} args The message arguments, if required.\n * @param {string=} string The default message text.\n * @return {string} The localized message.\n */\nhterm.msg = function(name, args = [], string) {\n  return hterm.messageManager.get('HTERM_' + name, args, string);\n};\n\n/**\n * Create a new notification.\n *\n * @param {{title:(string|undefined), body:(string|undefined)}=} params Various\n *     parameters for the notification.\n *     title The title (defaults to the window's title).\n *     body The message body (main text).\n * @return {!Notification}\n */\nhterm.notify = function(params) {\n  var def = (curr, fallback) => curr !== undefined ? curr : fallback;\n  if (params === undefined || params === null)\n    params = {};\n\n  // Merge the user's choices with the default settings.  We don't take it\n  // directly in case it was stuffed with excess junk.\n  var options = {\n      'body': params.body,\n      'icon': def(params.icon, lib.resource.getDataUrl('hterm/images/icon-96')),\n  };\n\n  var title = def(params.title, window.document.title);\n  if (!title)\n    title = 'hterm';\n  title = lib.f.replaceVars(hterm.desktopNotificationTitle, {'title': title});\n\n  var n = new Notification(title, options);\n  n.onclick = function() {\n    window.focus();\n    n.close();\n  };\n  return n;\n};\n\n/**\n * Launches url in a new tab.\n *\n * @param {string} url URL to launch in a new tab.\n */\nhterm.openUrl = function(url) {\n  if (window.chrome && chrome.browser && chrome.browser.openTab) {\n    // For Chrome v2 apps, we need to use this API to properly open windows.\n    chrome.browser.openTab({'url': url});\n  } else {\n    const win = lib.f.openWindow(url, '_blank');\n    win.focus();\n  }\n};\n\n/**\n * Constructor for a hterm.Size record.\n *\n * Instances of this class have public read/write members for width and height.\n *\n * @param {number} width The width of this record.\n * @param {number} height The height of this record.\n * @constructor\n */\nhterm.Size = function(width, height) {\n  this.width = width;\n  this.height = height;\n};\n\n/**\n * Adjust the width and height of this record.\n *\n * @param {number} width The new width of this record.\n * @param {number} height The new height of this record.\n */\nhterm.Size.prototype.resize = function(width, height) {\n  this.width = width;\n  this.height = height;\n};\n\n/**\n * Return a copy of this record.\n *\n * @return {!hterm.Size} A new hterm.Size instance with the same width and\n *     height.\n */\nhterm.Size.prototype.clone = function() {\n  return new hterm.Size(this.width, this.height);\n};\n\n/**\n * Set the height and width of this instance based on another hterm.Size.\n *\n * @param {!hterm.Size} that The object to copy from.\n */\nhterm.Size.prototype.setTo = function(that) {\n  this.width = that.width;\n  this.height = that.height;\n};\n\n/**\n * Test if another hterm.Size instance is equal to this one.\n *\n * @param {!hterm.Size} that The other hterm.Size instance.\n * @return {boolean} True if both instances have the same width/height, false\n *     otherwise.\n */\nhterm.Size.prototype.equals = function(that) {\n  return this.width == that.width && this.height == that.height;\n};\n\n/**\n * Return a string representation of this instance.\n *\n * @return {string} A string that identifies the width and height of this\n *     instance.\n * @override\n */\nhterm.Size.prototype.toString = function() {\n  return '[hterm.Size: ' + this.width + ', ' + this.height + ']';\n};\n\n/**\n * Constructor for a hterm.RowCol record.\n *\n * Instances of this class have public read/write members for row and column.\n *\n * This class includes an 'overflow' bit which is use to indicate that an\n * attempt has been made to move the cursor column passed the end of the\n * screen.  When this happens we leave the cursor column set to the last column\n * of the screen but set the overflow bit.  In this state cursor movement\n * happens normally, but any attempt to print new characters causes a cr/lf\n * first.\n *\n * @param {number} row The row of this record.\n * @param {number} column The column of this record.\n * @param {boolean=} opt_overflow Optional boolean indicating that the RowCol\n *     has overflowed.\n * @constructor\n */\nhterm.RowCol = function(row, column, opt_overflow) {\n  this.row = row;\n  this.column = column;\n  this.overflow = !!opt_overflow;\n};\n\n/**\n * Adjust the row and column of this record.\n *\n * @param {number} row The new row of this record.\n * @param {number} column The new column of this record.\n * @param {boolean=} opt_overflow Optional boolean indicating that the RowCol\n *     has overflowed.\n */\nhterm.RowCol.prototype.move = function(row, column, opt_overflow) {\n  this.row = row;\n  this.column = column;\n  this.overflow = !!opt_overflow;\n};\n\n/**\n * Return a copy of this record.\n *\n * @return {!hterm.RowCol} A new hterm.RowCol instance with the same row and\n *     column.\n */\nhterm.RowCol.prototype.clone = function() {\n  return new hterm.RowCol(this.row, this.column, this.overflow);\n};\n\n/**\n * Set the row and column of this instance based on another hterm.RowCol.\n *\n * @param {!hterm.RowCol} that The object to copy from.\n */\nhterm.RowCol.prototype.setTo = function(that) {\n  this.row = that.row;\n  this.column = that.column;\n  this.overflow = that.overflow;\n};\n\n/**\n * Test if another hterm.RowCol instance is equal to this one.\n *\n * @param {!hterm.RowCol} that The other hterm.RowCol instance.\n * @return {boolean} True if both instances have the same row/column, false\n *     otherwise.\n */\nhterm.RowCol.prototype.equals = function(that) {\n  return (this.row == that.row && this.column == that.column &&\n          this.overflow == that.overflow);\n};\n\n/**\n * Return a string representation of this instance.\n *\n * @return {string} A string that identifies the row and column of this\n *     instance.\n * @override\n */\nhterm.RowCol.prototype.toString = function() {\n  return ('[hterm.RowCol: ' + this.row + ', ' + this.column + ', ' +\n          this.overflow + ']');\n};\n// SOURCE FILE: hterm/js/hterm_accessibility_reader.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * AccessibilityReader responsible for rendering command output for AT.\n *\n * Renders command output for Assistive Technology using a live region. We don't\n * use the visible rows of the terminal for rendering command output to the\n * screen reader because the rendered content may be different from what we want\n * read out by a screen reader. For example, we may not actually render every\n * row of a large piece of output to the screen as it wouldn't be performant.\n * But we want the screen reader to read it all out in order.\n *\n * @param {!Element} div The div element where the live region should be\n *     added.\n * @constructor\n */\nhterm.AccessibilityReader = function(div) {\n  this.document_ = div.ownerDocument;\n\n  // The live region element to add text to.\n  const liveRegion = this.document_.createElement('div');\n  liveRegion.id = 'hterm:accessibility-live-region';\n  liveRegion.style.cssText = `position: absolute;\n                              width: 0; height: 0;\n                              overflow: hidden;\n                              left: 0; top: 0;`;\n  div.appendChild(liveRegion);\n\n  // Whether command output should be rendered for Assistive Technology.\n  // This isn't always enabled because it has an impact on performance.\n  this.accessibilityEnabled = false;\n\n  // This live element is used for command output.\n  this.liveElement_ = this.document_.createElement('p');\n  this.liveElement_.setAttribute('aria-live', 'polite');\n  this.liveElement_.setAttribute('aria-label', '');\n  liveRegion.appendChild(this.liveElement_);\n\n  // This live element is used for speaking out the current screen when\n  // navigating through the scrollback buffer. It will interrupt existing\n  // announcements.\n  this.assertiveLiveElement_ = this.document_.createElement('p');\n  this.assertiveLiveElement_.setAttribute('aria-live', 'assertive');\n  this.assertiveLiveElement_.setAttribute('aria-label', '');\n  liveRegion.appendChild(this.assertiveLiveElement_);\n\n  // A queue of updates to announce.\n  this.queue_ = [];\n\n  // A timer which tracks when next to add items to the live region. null when\n  // not running. This is used to combine updates that occur in a small window,\n  // as well as to avoid too much output being added to the live region in one\n  // go which can cause the renderer to hang.\n  this.nextReadTimer_ = null;\n\n  // This is set to true if the cursor is about to update position on the\n  // screen. i.e. beforeCursorChange has been called but not afterCursorChange.\n  this.cursorIsChanging_ = false;\n\n  // This tracks changes that would be added to queue_ while the cursor is\n  // changing. This is done so that we can decide to discard these changes if\n  // we announce something as a result of the cursor change.\n  this.cursorChangeQueue_ = [];\n\n  // The string of text on the row that the cursor was last on. Only valid while\n  // cursorIsChanging_ is true.\n  this.lastCursorRowString_ = null;\n\n  // The row that the cursor was last on. Only valid while cursorIsChanging_ is\n  // true.\n  this.lastCursorRow_ = null;\n\n  // The column that the cursor was last on. Only valid while cursorIsChanging_\n  // is true.\n  this.lastCursorColumn_ = null;\n\n  // True if a keypress has been performed since the last cursor change.\n  this.hasUserGesture = false;\n};\n\n/**\n * Delay in ms to use for merging strings to output.\n *\n * We merge strings together to avoid hanging the terminal and to ensure that\n * aria updates make it to the screen reader. We want this to be short so\n * there's not a big delay between typing/executing commands and hearing output.\n *\n * @const\n * @type {number}\n */\nhterm.AccessibilityReader.DELAY = 50;\n\n/**\n * Enable accessibility-friendly features that have a performance impact.\n *\n * @param {boolean} enabled Whether to enable accessibility-friendly features.\n */\nhterm.AccessibilityReader.prototype.setAccessibilityEnabled =\n    function(enabled) {\n  if (!enabled) {\n    this.clear();\n  }\n\n  this.accessibilityEnabled = enabled;\n};\n\n/**\n * Decorate the document where the terminal <x-screen> resides. This is needed\n * for listening to keystrokes on the screen.\n *\n * @param {!Document} doc The document where the <x-screen> resides.\n */\nhterm.AccessibilityReader.prototype.decorate = function(doc) {\n  const handlers = ['keydown', 'keypress', 'keyup', 'textInput'];\n  handlers.forEach((handler) => {\n    doc.addEventListener(handler, () => { this.hasUserGesture = true; });\n  });\n};\n\n/**\n * This should be called before the cursor on the screen is about to get\n * updated. This allows cursor changes to be tracked and related notifications\n * to be announced.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n */\nhterm.AccessibilityReader.prototype.beforeCursorChange =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // If accessibility is enabled we don't announce selection changes as these\n  // can have a performance impact.\n  if (!this.accessibilityEnabled) {\n    return;\n  }\n\n  // If there is no user gesture that can be tied to the cursor change, we\n  // don't want to announce anything.\n  if (!this.hasUserGesture || this.cursorIsChanging_) {\n    return;\n  }\n\n  this.cursorIsChanging_ = true;\n  this.lastCursorRowString_ = cursorRowString;\n  this.lastCursorRow_ = cursorRow;\n  this.lastCursorColumn_ = cursorColumn;\n};\n\n/**\n * This should be called after the cursor on the screen has been updated. Note\n * that several updates to the cursor may have happened between\n * beforeCursorChange and afterCursorChange.\n *\n * This allows cursor changes to be tracked and related notifications to be\n * announced.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n */\nhterm.AccessibilityReader.prototype.afterCursorChange =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // This can happen if clear() is called midway through a cursor change.\n  if (!this.cursorIsChanging_) {\n    return;\n  }\n  this.cursorIsChanging_ = false;\n\n  if (!this.announceAction_(cursorRowString, cursorRow, cursorColumn)) {\n    // If we don't announce a special action, we re-queue all the output that\n    // was queued during the selection change.\n    for (let i = 0; i < this.cursorChangeQueue_.length; ++i) {\n      this.announce(this.cursorChangeQueue_[i]);\n    }\n  }\n\n  this.cursorChangeQueue_ = [];\n  this.lastCursorRowString_ = null;\n  this.lastCursorRow_ = null;\n  this.lastCursorColumn_ = null;\n  this.hasUserGesture = false;\n};\n\n/**\n * Announce the command output.\n *\n * @param {string} str The string to announce using a live region.\n */\nhterm.AccessibilityReader.prototype.announce = function(str) {\n  if (!this.accessibilityEnabled) {\n    return;\n  }\n\n  // If the cursor is in the middle of changing, we queue up the output\n  // separately as we may not want it to be announced if it's part of a cursor\n  // change announcement.\n  if (this.cursorIsChanging_) {\n    this.cursorChangeQueue_.push(str);\n    return;\n  }\n\n  // Don't append newlines to the queue if the queue is empty. It won't have any\n  // impact.\n  if (str == '\\n' && this.queue_.length > 0) {\n    this.queue_.push('');\n    // We don't need to trigger an announcement on newlines because they won't\n    // change the existing content that's output.\n    return;\n  }\n\n  if (this.queue_.length == 0) {\n    this.queue_.push(str);\n  } else {\n    // We put a space between strings that appear on the same line.\n    // TODO(raymes): We should check the location on the row and not add a space\n    // if the strings are joined together.\n    let padding = '';\n    if (this.queue_[this.queue_.length - 1].length != 0) {\n      padding = ' ';\n    }\n    this.queue_[this.queue_.length - 1] += padding + str;\n  }\n\n  // If we've already scheduled text being added to the live region, wait for it\n  // to happen.\n  if (this.nextReadTimer_) {\n    return;\n  }\n\n  // If there's only one item in the queue, we may get other text being added\n  // very soon after. In that case, wait a small delay so we can merge the\n  // related strings.\n  if (this.queue_.length == 1) {\n    this.nextReadTimer_ = setTimeout(this.addToLiveRegion_.bind(this),\n                                     hterm.AccessibilityReader.DELAY);\n  } else {\n    throw new Error(\n        'Expected only one item in queue_ or nextReadTimer_ to be running.');\n  }\n};\n\n/**\n * Voice an announcement that will interrupt other announcements.\n *\n * @param {string} str The string to announce using a live region.\n */\nhterm.AccessibilityReader.prototype.assertiveAnnounce = function(str) {\n  if (this.hasUserGesture && str == ' ') {\n    str = hterm.msg('SPACE_CHARACTER', [], 'Space');\n  }\n\n  // If the same string is announced twice, an attribute change won't be\n  // registered and the screen reader won't know that the string has changed.\n  // So we slightly change the string to ensure that the attribute change gets\n  // registered.\n  str = str.trim();\n  if (str == this.assertiveLiveElement_.getAttribute('aria-label')) {\n    str = '\\n' + str;\n  }\n\n  this.clear();\n  this.assertiveLiveElement_.setAttribute('aria-label', str);\n};\n\n/**\n * Add a newline to the text that will be announced to the live region.\n */\nhterm.AccessibilityReader.prototype.newLine = function() {\n  this.announce('\\n');\n};\n\n/**\n * Clear the live region and any in-flight announcements.\n */\nhterm.AccessibilityReader.prototype.clear = function() {\n  this.liveElement_.setAttribute('aria-label', '');\n  this.assertiveLiveElement_.setAttribute('aria-label', '');\n  clearTimeout(this.nextReadTimer_);\n  this.nextReadTimer_ = null;\n  this.queue_ = [];\n\n  this.cursorIsChanging_ = false;\n  this.cursorChangeQueue_ = [];\n  this.lastCursorRowString_ = null;\n  this.lastCursorRow_ = null;\n  this.lastCursorColumn_ = null;\n  this.hasUserGesture = false;\n};\n\n/**\n * This will announce an action that is related to a cursor change, for example\n * when the user deletes a character we want the character deleted to be\n * announced. Similarly, when the user moves the cursor along the line, we want\n * the characters selected to be announced.\n *\n * Note that this function is a heuristic. Because of the nature of terminal\n * emulators, we can't distinguish input and output, which means we don't really\n * know what output is the result of a keypress and what isn't. Also in some\n * terminal applications certain announcements may make sense whereas others may\n * not. This function should try to account for the most common cases.\n *\n * @param {string} cursorRowString The text in the row that the cursor is\n *     currently on.\n * @param {number} cursorRow The index of the row that the cursor is currently\n *     on, including rows in the scrollback buffer.\n * @param {number} cursorColumn The index of the column that the cursor is\n *     currently on.\n * @return {boolean} Whether anything was announced.\n */\nhterm.AccessibilityReader.prototype.announceAction_ =\n    function(cursorRowString, cursorRow, cursorColumn) {\n  // If the cursor changes rows, we don't announce anything at present.\n  if (this.lastCursorRow_ != cursorRow) {\n    return false;\n  }\n\n  lib.assert(this.lastCursorRowString_ !== null);\n\n  // The case when the row of text hasn't changed at all.\n  if (this.lastCursorRowString_ == cursorRowString) {\n    // Moving the cursor along the line. We check that no significant changes\n    // have been queued. If they have, it may not just be a cursor movement and\n    // it may be better to read those out.\n    if (this.lastCursorColumn_ != cursorColumn &&\n        this.cursorChangeQueue_.join('').trim() == '') {\n      // Announce the text between the old cursor position and the new one.\n      const start = Math.min(this.lastCursorColumn_, cursorColumn);\n      const len = Math.abs(cursorColumn - this.lastCursorColumn_);\n      this.assertiveAnnounce(\n          lib.wc.substr(this.lastCursorRowString_, start, len));\n      return true;\n    }\n    return false;\n  }\n\n  // The case when the row of text has changed.\n  if (this.lastCursorRowString_ != cursorRowString) {\n    // Spacebar. We manually announce this character since the screen reader may\n    // not announce the whitespace in a live region.\n    if (this.lastCursorColumn_ + 1 == cursorColumn) {\n      if (lib.wc.substr(cursorRowString, cursorColumn - 1, 1) == ' ' &&\n          this.cursorChangeQueue_.length > 0 &&\n          this.cursorChangeQueue_[0] == ' ') {\n        this.assertiveAnnounce(' ');\n        return true;\n      }\n    }\n\n    // Backspace and deletion.\n    // The position of the characters deleted is right after the current\n    // position of the cursor in the case of backspace and delete.\n    const cursorDeleted = cursorColumn;\n    // Check that the current row string is shorter than the previous. Also\n    // check that the start of the strings (up to the cursor) match.\n    if (lib.wc.strWidth(cursorRowString) <=\n        lib.wc.strWidth(this.lastCursorRowString_) &&\n        lib.wc.substr(this.lastCursorRowString_, 0, cursorDeleted) ==\n        lib.wc.substr(cursorRowString, 0, cursorDeleted)) {\n      // Find the length of the current row string ignoring space characters.\n      // These may be inserted at the end of the string when deleting characters\n      // so they should be ignored.\n      let lengthOfCurrentRow = lib.wc.strWidth(cursorRowString);\n      for (; lengthOfCurrentRow > 0; --lengthOfCurrentRow) {\n        if (lengthOfCurrentRow == cursorDeleted ||\n            lib.wc.substr(cursorRowString, lengthOfCurrentRow - 1, 1) != ' ') {\n          break;\n        }\n      }\n\n      const numCharsDeleted =\n          lib.wc.strWidth(this.lastCursorRowString_) - lengthOfCurrentRow;\n\n      // Check that the end of the strings match.\n      const lengthOfEndOfString = lengthOfCurrentRow - cursorDeleted;\n      const endOfLastRowString = lib.wc.substr(\n          this.lastCursorRowString_, cursorDeleted + numCharsDeleted,\n          lengthOfEndOfString);\n      const endOfCurrentRowString =\n          lib.wc.substr(cursorRowString, cursorDeleted, lengthOfEndOfString);\n      if (endOfLastRowString == endOfCurrentRowString) {\n        const deleted = lib.wc.substr(\n            this.lastCursorRowString_, cursorDeleted, numCharsDeleted);\n        if (deleted != '') {\n          this.assertiveAnnounce(deleted);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  return false;\n};\n\n/**\n * Add text from queue_ to the live region.\n *\n */\nhterm.AccessibilityReader.prototype.addToLiveRegion_ = function() {\n  this.nextReadTimer_ = null;\n\n  let str = this.queue_.join('\\n').trim();\n\n  // If the same string is announced twice, an attribute change won't be\n  // registered and the screen reader won't know that the string has changed.\n  // So we slightly change the string to ensure that the attribute change gets\n  // registered.\n  if (str == this.liveElement_.getAttribute('aria-label')) {\n    str = '\\n' + str;\n  }\n\n  this.liveElement_.setAttribute('aria-label', str);\n  this.queue_ = [];\n};\n// SOURCE FILE: hterm/js/hterm_contextmenu.js\n// Copyright 2018 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview Context menu handling.\n */\n\n/**\n * Manage the context menu usually shown when right clicking.\n *\n * @constructor\n */\nhterm.ContextMenu = function() {\n  // The document that contains this context menu.\n  this.document_ = null;\n  // The generated context menu (i.e. HTML elements).\n  this.element_ = null;\n  // The structured menu (i.e. JS objects).\n  /** @type {!Array<!hterm.ContextMenu.Item>} */\n  this.menu_ = [];\n};\n\n/** @typedef {{name:(string|symbol), action:function(!Event)}} */\nhterm.ContextMenu.Item;\n\n/**\n * Constant to add a separator to the context menu.\n */\nhterm.ContextMenu.SEPARATOR = Symbol('-');\n\n/**\n * Bind context menu to a specific document element.\n *\n * @param {!Document} document The document to use when creating elements.\n */\nhterm.ContextMenu.prototype.setDocument = function(document) {\n  if (this.element_) {\n    this.element_.remove();\n    this.element_ = null;\n  }\n  this.document_ = document;\n  this.regenerate_();\n  this.document_.body.appendChild(this.element_);\n};\n\n/**\n * Regenerate the HTML elements based on internal menu state.\n */\nhterm.ContextMenu.prototype.regenerate_ = function() {\n  if (!this.element_) {\n    this.element_ = this.document_.createElement('menu');\n    this.element_.id = 'hterm:context-menu';\n    this.element_.style.cssText = `\n        display: none;\n        border: solid 1px;\n        position: absolute;\n    `;\n  } else {\n    this.hide();\n  }\n\n  // Clear out existing menu entries.\n  while (this.element_.firstChild) {\n    this.element_.removeChild(this.element_.firstChild);\n  }\n\n  this.menu_.forEach(({name, action}) => {\n    const menuitem = this.document_.createElement('menuitem');\n    if (name === hterm.ContextMenu.SEPARATOR) {\n      menuitem.innerHTML = '<hr>';\n      menuitem.className = 'separator';\n    } else {\n      menuitem.innerText = name;\n      menuitem.addEventListener('mousedown', function(e) {\n        e.preventDefault();\n        action(e);\n      });\n    }\n    this.element_.appendChild(menuitem);\n  });\n};\n\n/**\n * Set all the entries in the context menu.\n *\n * This is an array of arrays.  The first element in the array is the string to\n * display while the second element is the function to call.\n *\n * The first element may also be the SEPARATOR constant to add a separator.\n *\n * This resets all existing menu entries.\n *\n * @param {!Array<!hterm.ContextMenu.Item>} items The menu entries.\n */\nhterm.ContextMenu.prototype.setItems = function(items) {\n  this.menu_ = items;\n  this.regenerate_();\n};\n\n/**\n * Show the context menu.\n *\n * The event is used to determine where to show the menu.\n *\n * If no menu entries are defined, then nothing will be shown.\n *\n * @param {!Event} e The event triggering this display.\n * @param {!hterm.Terminal=} terminal The terminal object to get style info\n *     from.\n */\nhterm.ContextMenu.prototype.show = function(e, terminal) {\n  // If there are no menu entries, then don't try to show anything.\n  if (this.menu_.length == 0) {\n    return;\n  }\n\n  // If we have the terminal, sync the style preferences over.\n  if (terminal) {\n    this.element_.style.backgroundColor = terminal.getBackgroundColor();\n    this.element_.style.color = terminal.getForegroundColor();\n    this.element_.style.fontSize = terminal.getFontSize();\n    this.element_.style.fontFamily = terminal.getFontFamily();\n  }\n\n  this.element_.style.top = `${e.clientY}px`;\n  this.element_.style.left = `${e.clientX}px`;\n  const docSize = hterm.getClientSize(lib.notNull(this.document_.body));\n\n  this.element_.style.display = 'block';\n\n  // We can't calculate sizes until after it's displayed.\n  const eleSize = hterm.getClientSize(this.element_);\n  // Make sure the menu isn't clipped outside of the current element.\n  const minY = Math.max(0, docSize.height - eleSize.height);\n  const minX = Math.max(0, docSize.width - eleSize.width);\n  if (minY < e.clientY) {\n    this.element_.style.top = `${minY}px`;\n  }\n  if (minX < e.clientX) {\n    this.element_.style.left = `${minX}px`;\n  }\n};\n\n/**\n * Hide the context menu.\n */\nhterm.ContextMenu.prototype.hide = function() {\n  if (!this.element_) {\n    return;\n  }\n\n  this.element_.style.display = 'none';\n};\n// SOURCE FILE: hterm/js/hterm_frame.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * First draft of the interface between the terminal and a third party dialog.\n *\n * This is rough.  It's just the terminal->dialog layer.  To complete things\n * we'll also need a command->terminal layer.  That will have to facilitate\n * command->terminal->dialog or direct command->dialog communication.\n *\n * I imagine this class will change significantly when that happens.\n */\n\n/**\n * Construct a new frame for the given terminal.\n *\n * @param {!hterm.Terminal} terminal The parent terminal object.\n * @param {string} url The url to load in the frame.\n * @param {!Object=} opt_options Optional options for the frame.  Not\n *     implemented.\n * @constructor\n */\nhterm.Frame = function(terminal, url, opt_options) {\n  this.terminal_ = terminal;\n  this.div_ = terminal.div_;\n  this.url = url;\n  this.options = opt_options || {};\n  this.iframe_ = null;\n  this.container_ = null;\n  this.messageChannel_ = null;\n};\n\n/**\n * Handle messages from the iframe.\n *\n * @param {!MessageEvent} e The message to process.\n */\nhterm.Frame.prototype.onMessage_ = function(e) {\n  switch (e.data.name) {\n    case 'ipc-init-ok':\n      // We get this response after we send them ipc-init and they finish.\n      this.sendTerminalInfo_();\n      return;\n    case 'terminal-info-ok':\n      // We get this response after we send them terminal-info and they finish.\n      // Show the finished frame, and then rebind our message handler to the\n      // callback below.\n      this.container_.style.display = 'flex';\n      this.postMessage('visible');\n      this.messageChannel_.port1.onmessage = this.onMessage.bind(this);\n      this.onLoad();\n      return;\n    default:\n      console.log('Unknown message from frame:', e.data);\n      return;\n  }\n};\n\n/**\n * Clients could override this, I guess.\n *\n * It doesn't support multiple listeners, but I'm not sure that would make sense\n * here.  It's probably better to speak directly to our parents.\n */\nhterm.Frame.prototype.onMessage = function() {};\n\n/**\n * Handle iframe onLoad event.\n */\nhterm.Frame.prototype.onLoad_ = function() {\n  this.messageChannel_ = new MessageChannel();\n  this.messageChannel_.port1.onmessage = this.onMessage_.bind(this);\n  this.messageChannel_.port1.start();\n  this.iframe_.contentWindow.postMessage(\n      {name: 'ipc-init', argv: [{messagePort: this.messageChannel_.port2}]},\n      this.url, [this.messageChannel_.port2]);\n};\n\n/**\n * Clients may override this.\n */\nhterm.Frame.prototype.onLoad = function() {};\n\n/**\n * Sends the terminal-info message to the iframe.\n */\nhterm.Frame.prototype.sendTerminalInfo_ = function() {\n  lib.i18n.getAcceptLanguages(function(languages) {\n      this.postMessage('terminal-info', [{\n         acceptLanguages: languages,\n         foregroundColor: this.terminal_.getForegroundColor(),\n         backgroundColor: this.terminal_.getBackgroundColor(),\n         cursorColor: this.terminal_.getCursorColor(),\n         fontSize: this.terminal_.getFontSize(),\n         fontFamily: this.terminal_.getFontFamily(),\n         baseURL: lib.f.getURL('/')\n          }]\n        );\n    }.bind(this));\n};\n\n/**\n * User clicked the close button on the frame decoration.\n */\nhterm.Frame.prototype.onCloseClicked_ = function() {\n  this.close();\n};\n\n/**\n * Close this frame.\n */\nhterm.Frame.prototype.close = function() {\n  if (!this.container_ || !this.container_.parentNode)\n      return;\n\n  this.container_.parentNode.removeChild(this.container_);\n  this.onClose();\n};\n\n\n/**\n * Clients may override this.\n */\nhterm.Frame.prototype.onClose = function() {};\n\n/**\n * Send a message to the iframe.\n *\n * @param {string} name The message name.\n * @param {!Array=} argv The message arguments.\n */\nhterm.Frame.prototype.postMessage = function(name, argv) {\n  if (!this.messageChannel_)\n    throw new Error('Message channel is not set up.');\n\n  this.messageChannel_.port1.postMessage({name: name, argv: argv});\n};\n\n/**\n * Show the UI for this frame.\n *\n * The iframe src is not loaded until this method is called.\n */\nhterm.Frame.prototype.show = function() {\n  var self = this;\n\n  function opt(name, defaultValue) {\n    if (name in self.options)\n      return self.options[name];\n\n    return defaultValue;\n  }\n\n  if (this.container_ && this.container_.parentNode) {\n    console.error('Frame already visible');\n    return;\n  }\n\n  var document = this.terminal_.document_;\n\n  var container = this.container_ = document.createElement('div');\n  container.style.cssText = (\n      'position: absolute;' +\n      'display: none;' +\n      'flex-direction: column;' +\n      'top: 10%;' +\n      'left: 4%;' +\n      'width: 90%;' +\n      'height: 80%;' +\n      'min-height: 20%;' +\n      'max-height: 80%;' +\n      'box-shadow: 0 0 2px ' + this.terminal_.getForegroundColor() + ';' +\n      'border: 2px ' + this.terminal_.getForegroundColor() + ' solid;');\n\n  var iframe = this.iframe_ = document.createElement('iframe');\n  iframe.onload = this.onLoad_.bind(this);\n  iframe.style.cssText = (\n      'display: flex;' +\n      'flex: 1;' +\n      'width: 100%');\n  iframe.setAttribute('src', this.url);\n  iframe.setAttribute('seamless', true);\n  container.appendChild(iframe);\n\n  this.div_.appendChild(container);\n};\n// SOURCE FILE: hterm/js/hterm_keyboard.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Keyboard handler.\n *\n * Consumes onKey* events and invokes onVTKeystroke on the associated\n * hterm.Terminal object.\n *\n * See also: [XTERM] as referenced in vt.js.\n *\n * @param {!hterm.Terminal} terminal The Terminal object associated with this\n *     keyboard.\n * @constructor\n */\nhterm.Keyboard = function(terminal) {\n  // The parent vt interpreter.\n  this.terminal = terminal;\n\n  // The element we're currently capturing keyboard events for.\n  this.keyboardElement_ = null;\n\n  // The event handlers we are interested in, and their bound callbacks, saved\n  // so they can be uninstalled with removeEventListener, when required.\n  this.handlers_ = [\n      ['focusout', this.onFocusOut_.bind(this)],\n      ['keydown', this.onKeyDown_.bind(this)],\n      ['keypress', this.onKeyPress_.bind(this)],\n      ['keyup', this.onKeyUp_.bind(this)],\n      ['textInput', this.onTextInput_.bind(this)]\n  ];\n\n  /**\n   * The current key map.\n   */\n  this.keyMap = new hterm.Keyboard.KeyMap(this);\n\n  this.bindings = new hterm.Keyboard.Bindings();\n\n  /**\n   * none: Disable any AltGr related munging.\n   * ctrl-alt: Assume Ctrl+Alt means AltGr.\n   * left-alt: Assume left Alt means AltGr.\n   * right-alt: Assume right Alt means AltGr.\n   */\n  this.altGrMode = 'none';\n\n  /**\n   * If true, Shift-Insert will fall through to the browser as a paste.\n   * If false, the keystroke will be sent to the host.\n   */\n  this.shiftInsertPaste = true;\n\n  /**\n   * If true, home/end will control the terminal scrollbar and shift home/end\n   * will send the VT keycodes.  If false then home/end sends VT codes and\n   * shift home/end scrolls.\n   */\n  this.homeKeysScroll = false;\n\n  /**\n   * Same as above, except for page up/page down.\n   */\n  this.pageKeysScroll = false;\n\n  /**\n   * If true, Ctrl-Plus/Minus/Zero controls zoom.\n   * If false, Ctrl-Shift-Plus/Minus/Zero controls zoom, Ctrl-Minus sends ^_,\n   * Ctrl-Plus/Zero do nothing.\n   */\n  this.ctrlPlusMinusZeroZoom = true;\n\n  /**\n   * Ctrl+C copies if true, sends ^C to host if false.\n   * Ctrl+Shift+C sends ^C to host if true, copies if false.\n   */\n  this.ctrlCCopy = false;\n\n  /**\n   * Ctrl+V pastes if true, sends ^V to host if false.\n   * Ctrl+Shift+V sends ^V to host if true, pastes if false.\n   */\n  this.ctrlVPaste = false;\n\n  /**\n   * Enable/disable application keypad.\n   *\n   * This changes the way numeric keys are sent from the keyboard.\n   */\n  this.applicationKeypad = false;\n\n  /**\n   * Enable/disable the application cursor mode.\n   *\n   * This changes the way cursor keys are sent from the keyboard.\n   */\n  this.applicationCursor = false;\n\n  /**\n   * If true, the backspace should send BS ('\\x08', aka ^H).  Otherwise\n   * the backspace key should send '\\x7f'.\n   */\n  this.backspaceSendsBackspace = false;\n\n  /**\n   * Set whether the meta key sends a leading escape or not.\n   */\n  this.metaSendsEscape = true;\n\n  /**\n   * Set whether meta-V gets passed to host.\n   */\n  this.passMetaV = true;\n\n  /**\n   * Controls how the alt key is handled.\n   *\n   *  escape....... Send an ESC prefix.\n   *  8-bit........ Add 128 to the unshifted character as in xterm.\n   *  browser-key.. Wait for the keypress event and see what the browser says.\n   *                (This won't work well on platforms where the browser\n   *                 performs a default action for some alt sequences.)\n   *\n   * This setting only matters when alt is distinct from meta (altIsMeta is\n   * false.)\n   */\n  this.altSendsWhat = 'escape';\n\n  /**\n   * Set whether the alt key acts as a meta key, instead of producing 8-bit\n   * characters.\n   *\n   * True to enable, false to disable, null to autodetect based on platform.\n   */\n  this.altIsMeta = false;\n\n  /**\n   * If true, tries to detect DEL key events that are from alt-backspace on\n   * Chrome OS vs from a true DEL key press.\n   *\n   * Background: At the time of writing, on Chrome OS, alt-backspace is mapped\n   * to DEL. Some users may be happy with this, but others may be frustrated\n   * that it's impossible to do meta-backspace. If the user enables this pref,\n   * we use a trick to tell a true DEL keypress from alt-backspace: on\n   * alt-backspace, we will see the alt key go down, then get a DEL keystroke\n   * that indicates that alt is not pressed. See https://crbug.com/174410 .\n   */\n  this.altBackspaceIsMetaBackspace = false;\n\n  /**\n   * Used to keep track of the current alt-key state, which is necessary for\n   * the altBackspaceIsMetaBackspace preference above and for the altGrMode\n   * preference.  This is a bitmap with where bit positions correspond to the\n   * \"location\" property of the key event.\n   */\n  this.altKeyPressed = 0;\n\n  /**\n   * If true, Chrome OS media keys will be mapped to their F-key equivalent.\n   * E.g. \"Back\" will be mapped to F1. If false, Chrome will handle the keys.\n   */\n  this.mediaKeysAreFKeys = false;\n\n  /**\n   * Holds the previous setting of altSendsWhat when DECSET 1039 is used. When\n   * DECRST 1039 is used, altSendsWhat is changed back to this and this is\n   * nulled out.\n   */\n  this.previousAltSendsWhat_ = null;\n};\n\n/**\n * Special handling for keyCodes in a keyboard layout.\n *\n * @enum {symbol}\n * @const\n */\nhterm.Keyboard.KeyActions = {\n  /**\n   * Call preventDefault and stopPropagation for this key event and nothing\n   * else.\n   */\n  CANCEL: Symbol('CANCEL'),\n\n  /**\n   * This performs the default terminal action for the key.  If used in the\n   * 'normal' action and the the keystroke represents a printable key, the\n   * character will be sent to the host.  If used in one of the modifier\n   * actions, the terminal will perform the normal action after (possibly)\n   * altering it.\n   *\n   *  - If the normal sequence starts with CSI, the sequence will be adjusted\n   *    to include the modifier parameter as described in [XTERM] in the final\n   *    table of the \"PC-Style Function Keys\" section.\n   *\n   *  - If the control key is down and the key represents a printable character,\n   *    and the uppercase version of the unshifted keycap is between\n   *    64 (ASCII '@') and 95 (ASCII '_'), then the uppercase version of the\n   *    unshifted keycap minus 64 is sent.  This makes '^@' send '\\x00' and\n   *    '^_' send '\\x1f'.  (Note that one higher that 0x1f is 0x20, which is\n   *    the first printable ASCII value.)\n   *\n   *  - If the alt key is down and the key represents a printable character then\n   *    the value of the character is shifted up by 128.\n   *\n   *  - If meta is down and configured to send an escape, '\\x1b' will be sent\n   *    before the normal action is performed.\n   */\n  DEFAULT: Symbol('DEFAULT'),\n\n  /**\n   * Causes the terminal to opt out of handling the key event, instead letting\n   * the browser deal with it.\n   */\n  PASS: Symbol('PASS'),\n\n  /**\n   * Insert the first or second character of the keyCap, based on e.shiftKey.\n   * The key will be handled in onKeyDown, and e.preventDefault() will be\n   * called.\n   *\n   * It is useful for a modified key action, where it essentially strips the\n   * modifier while preventing the browser from reacting to the key.\n   */\n  STRIP: Symbol('STRIP')\n};\n\n/** @typedef {string|!hterm.Keyboard.KeyActions} */\nhterm.Keyboard.KeyAction;\n\n/**\n * Capture keyboard events sent to the associated element.\n *\n * This enables the keyboard.  Captured events are consumed by this class\n * and will not perform their default action or bubble to other elements.\n *\n * Passing a null element will uninstall the keyboard handlers.\n *\n * @param {?Element} element The element whose events should be captured, or\n *     null to disable the keyboard.\n */\nhterm.Keyboard.prototype.installKeyboard = function(element) {\n  if (element == this.keyboardElement_)\n    return;\n\n  if (element && this.keyboardElement_)\n    this.installKeyboard(null);\n\n  for (var i = 0; i < this.handlers_.length; i++) {\n    var handler = this.handlers_[i];\n    if (element) {\n      element.addEventListener(handler[0], handler[1]);\n    } else {\n      this.keyboardElement_.removeEventListener(handler[0], handler[1]);\n    }\n  }\n\n  this.keyboardElement_ = element;\n};\n\n/**\n * Disable keyboard event capture.\n *\n * This will allow the browser to process key events normally.\n */\nhterm.Keyboard.prototype.uninstallKeyboard = function() {\n  this.installKeyboard(null);\n};\n\n/**\n * Handle textInput events.\n *\n * These are generated when using IMEs, Virtual Keyboards (VKs), compose keys,\n * Unicode input, etc...\n *\n * @param {!InputEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onTextInput_ = function(e) {\n  if (!e.data)\n    return;\n\n  // Just pass the generated buffer straight down.  No need for us to split it\n  // up or otherwise parse it ahead of times.\n  this.terminal.onVTKeystroke(e.data);\n};\n\n/**\n * Handle keypress events.\n *\n * TODO(vapier): Drop this event entirely and only use keydown.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyPress_ = function(e) {\n  // FF doesn't set keyCode reliably in keypress events.  Stick to the which\n  // field here until we can move to keydown entirely.\n  const key = String.fromCharCode(e.which).toLowerCase();\n  if ((e.ctrlKey || e.metaKey) && (key == 'c' || key == 'v')) {\n    // On FF the key press (not key down) event gets fired for copy/paste.\n    // Let it fall through for the default browser behavior.\n    return;\n  }\n\n  if (e.keyCode == 9 /* Tab */) {\n    // On FF, a key press event will be fired in addition of key down for the\n    // Tab key if key down isn't handled. This would only happen if a custom\n    // PASS binding has been created and therefore this should be handled by the\n    // browser.\n    return;\n  }\n\n  /** @type {string} */\n  var ch;\n  if (e.altKey && this.altSendsWhat == 'browser-key' && e.charCode == 0) {\n    // If we got here because we were expecting the browser to handle an\n    // alt sequence but it didn't do it, then we might be on an OS without\n    // an enabled IME system.  In that case we fall back to xterm-like\n    // behavior.\n    //\n    // This happens here only as a fallback.  Typically these platforms should\n    // set altSendsWhat to either 'escape' or '8-bit'.\n    ch = String.fromCharCode(e.keyCode);\n    if (!e.shiftKey)\n      ch = ch.toLowerCase();\n\n  } else if (e.charCode >= 32) {\n    ch = String.fromCharCode(e.charCode);\n  }\n\n  if (ch)\n    this.terminal.onVTKeystroke(ch);\n\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Prevent default handling for non-ctrl-shifted event.\n *\n * When combined with Chrome permission 'app.window.fullscreen.overrideEsc',\n * and called for both key down and key up events,\n * the ESC key remains usable within fullscreen Chrome app windows.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.preventChromeAppNonCtrlShiftDefault_ = function(e) {\n  if (!window.chrome || !window.chrome.app || !window.chrome.app.window)\n    return;\n  if (!e.ctrlKey || !e.shiftKey)\n    e.preventDefault();\n};\n\n/**\n * Handle focusout events.\n *\n * @param {!FocusEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onFocusOut_ = function(e) {\n  this.altKeyPressed = 0;\n};\n\n/**\n * Handle keyup events.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyUp_ = function(e) {\n  if (e.keyCode == 18)\n    this.altKeyPressed = this.altKeyPressed & ~(1 << (e.location - 1));\n\n  if (e.keyCode == 27)\n    this.preventChromeAppNonCtrlShiftDefault_(e);\n};\n\n/**\n * Handle keydown events.\n *\n * @param {!KeyboardEvent} e The event to process.\n */\nhterm.Keyboard.prototype.onKeyDown_ = function(e) {\n  if (e.keyCode == 18)\n    this.altKeyPressed = this.altKeyPressed | (1 << (e.location - 1));\n\n  if (e.keyCode == 27)\n    this.preventChromeAppNonCtrlShiftDefault_(e);\n\n  var keyDef = this.keyMap.keyDefs[e.keyCode];\n  if (!keyDef) {\n    // If this key hasn't been explicitly registered, fall back to the unknown\n    // key mapping (keyCode == 0), and then automatically register it to avoid\n    // any further warnings here.\n    console.warn(`No definition for key ${e.key} (keyCode ${e.keyCode})`);\n    keyDef = this.keyMap.keyDefs[0];\n    this.keyMap.addKeyDef(e.keyCode, keyDef);\n  }\n\n  // The type of action we're going to use.\n  var resolvedActionType = null;\n\n  var self = this;\n  /**\n   * @param {string} name\n   * @return {!hterm.Keyboard.KeyDefAction}\n   */\n  function getAction(name) {\n    // Get the key action for the given action name.  If the action is a\n    // function, dispatch it.  If the action defers to the normal action,\n    // resolve that instead.\n\n    resolvedActionType = name;\n\n    var action = keyDef[name];\n    if (typeof action == 'function')\n      action = action.call(self.keyMap, e, keyDef);\n\n    if (action === DEFAULT && name != 'normal')\n      action = getAction('normal');\n\n    return action;\n  }\n\n  // Note that we use the triple-equals ('===') operator to test equality for\n  // these constants, in order to distinguish usage of the constant from usage\n  // of a literal string that happens to contain the same bytes.\n  var CANCEL = hterm.Keyboard.KeyActions.CANCEL;\n  var DEFAULT = hterm.Keyboard.KeyActions.DEFAULT;\n  var PASS = hterm.Keyboard.KeyActions.PASS;\n  var STRIP = hterm.Keyboard.KeyActions.STRIP;\n\n  var control = e.ctrlKey;\n  var alt = this.altIsMeta ? false : e.altKey;\n  var meta = this.altIsMeta ? (e.altKey || e.metaKey) : e.metaKey;\n\n  // In the key-map, we surround the keyCap for non-printables in \"[...]\"\n  var isPrintable = !(/^\\[\\w+\\]$/.test(keyDef.keyCap));\n\n  switch (this.altGrMode) {\n    case 'ctrl-alt':\n    if (isPrintable && control && alt) {\n      // ctrl-alt-printable means altGr.  We clear out the control and\n      // alt modifiers and wait to see the charCode in the keydown event.\n      control = false;\n      alt = false;\n    }\n    break;\n\n    case 'right-alt':\n    if (isPrintable && (this.terminal.keyboard.altKeyPressed & 2)) {\n      control = false;\n      alt = false;\n    }\n    break;\n\n    case 'left-alt':\n    if (isPrintable && (this.terminal.keyboard.altKeyPressed & 1)) {\n      control = false;\n      alt = false;\n    }\n    break;\n  }\n\n  /** @type {?hterm.Keyboard.KeyDefAction} */\n  var action;\n\n  if (control) {\n    action = getAction('control');\n  } else if (alt) {\n    action = getAction('alt');\n  } else if (meta) {\n    action = getAction('meta');\n  } else {\n    action = getAction('normal');\n  }\n\n  // If e.maskShiftKey was set (during getAction) it means the shift key is\n  // already accounted for in the action, and we should not act on it any\n  // further. This is currently only used for Ctrl-Shift-Tab, which should send\n  // \"CSI Z\", not \"CSI 1 ; 2 Z\".\n  var shift = !e.maskShiftKey && e.shiftKey;\n\n  /** @type {!hterm.Keyboard.KeyDown} */\n  var keyDown = {\n    keyCode: e.keyCode,\n    shift: e.shiftKey, // not `var shift` from above.\n    ctrl: control,\n    alt: alt,\n    meta: meta\n  };\n\n  var binding = this.bindings.getBinding(keyDown);\n\n  if (binding) {\n    // Clear out the modifier bits so we don't try to munge the sequence\n    // further.\n    shift = control = alt = meta = false;\n    resolvedActionType = 'normal';\n\n    if (typeof binding.action == 'function') {\n      const bindingFn =\n          /** @type {!hterm.Keyboard.KeyBindingFunction} */ (binding.action);\n      action = bindingFn.call(this, this.terminal, keyDown);\n    } else {\n      action = /** @type {!hterm.Keyboard.KeyAction} */ (binding.action);\n    }\n  }\n\n  if (alt && this.altSendsWhat == 'browser-key' && action == DEFAULT) {\n    // When altSendsWhat is 'browser-key', we wait for the keypress event.\n    // In keypress, the browser should have set the event.charCode to the\n    // appropriate character.\n    // TODO(rginda): Character compositions will need some black magic.\n    action = PASS;\n  }\n\n  if (action === PASS || (action === DEFAULT && !(control || alt || meta))) {\n    // If this key is supposed to be handled by the browser, or it is an\n    // unmodified key with the default action, then exit this event handler.\n    // If it's an unmodified key, it'll be handled in onKeyPress where we\n    // can tell for sure which ASCII code to insert.\n    //\n    // This block needs to come before the STRIP test, otherwise we'll strip\n    // the modifier and think it's ok to let the browser handle the keypress.\n    // The browser won't know we're trying to ignore the modifiers and might\n    // perform some default action.\n    return;\n  }\n\n  if (action === STRIP) {\n    alt = control = false;\n    action = keyDef.normal;\n    if (typeof action == 'function')\n      action = action.call(this.keyMap, e, keyDef);\n\n    if (action == DEFAULT && keyDef.keyCap.length == 2)\n      action = keyDef.keyCap.substr((shift ? 1 : 0), 1);\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  if (action === CANCEL)\n    return;\n\n  if (action !== DEFAULT && typeof action != 'string') {\n    console.warn('Invalid action: ' + JSON.stringify(action));\n    return;\n  }\n\n  // Strip the modifier that is associated with the action, since we assume that\n  // modifier has already been accounted for in the action.\n  if (resolvedActionType == 'control') {\n    control = false;\n  } else if (resolvedActionType == 'alt') {\n    alt = false;\n  } else if (resolvedActionType == 'meta') {\n    meta = false;\n  }\n\n  if (typeof action == 'string' && action.substr(0, 2) == '\\x1b[' &&\n      (alt || control || shift || meta)) {\n    // The action is an escape sequence that and it was triggered in the\n    // presence of a keyboard modifier, we may need to alter the action to\n    // include the modifier before sending it.\n\n    // The math is funky but aligns w/xterm.\n    let imod = 1;\n    if (shift)\n      imod += 1;\n    if (alt)\n      imod += 2;\n    if (control)\n      imod += 4;\n    if (meta)\n      imod += 8;\n    let mod = ';' + imod;\n\n    if (action.length == 3) {\n      // Some of the CSI sequences have zero parameters unless modified.\n      action = '\\x1b[1' + mod + action.substr(2, 1);\n    } else {\n      // Others always have at least one parameter.\n      action = action.substr(0, action.length - 1) + mod +\n          action.substr(action.length - 1);\n    }\n\n  } else {\n    if (action === DEFAULT) {\n      action = keyDef.keyCap.substr((shift ? 1 : 0), 1);\n\n      if (control) {\n        var unshifted = keyDef.keyCap.substr(0, 1);\n        var code = unshifted.charCodeAt(0);\n        if (code >= 64 && code <= 95) {\n          action = String.fromCharCode(code - 64);\n        }\n      }\n    }\n\n    if (alt && this.altSendsWhat == '8-bit' && action.length == 1) {\n      var code = action.charCodeAt(0) + 128;\n      action = String.fromCharCode(code);\n    }\n\n    // We respect alt/metaSendsEscape even if the keymap action was a literal\n    // string.  Otherwise, every overridden alt/meta action would have to\n    // check alt/metaSendsEscape.\n    if ((alt && this.altSendsWhat == 'escape') ||\n        (meta && this.metaSendsEscape)) {\n      action = '\\x1b' + action;\n    }\n  }\n\n  this.terminal.onVTKeystroke(/** @type {string} */ (action));\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_bindings.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @typedef {{\n *     keyCode: number,\n *     shift: (boolean|undefined),\n *     ctrl: (boolean|undefined),\n *     alt: (boolean|undefined),\n *     meta: (boolean|undefined),\n * }}\n */\nhterm.Keyboard.KeyDown;\n\n/**\n * @typedef {function(!hterm.Terminal, !hterm.Keyboard.KeyDown):\n *               !hterm.Keyboard.KeyAction}\n */\nhterm.Keyboard.KeyBindingFunction;\n\n/** @typedef {!hterm.Keyboard.KeyAction|!hterm.Keyboard.KeyBindingFunction} */\nhterm.Keyboard.KeyBindingAction;\n\n/**\n * @typedef {{\n *     keyPattern: !hterm.Keyboard.KeyPattern,\n *     action: !hterm.Keyboard.KeyBindingAction,\n * }}\n */\nhterm.Keyboard.KeyBinding;\n\n/**\n * A mapping from hterm.Keyboard.KeyPattern to an action.\n *\n * TODO(rginda): For now this bindings code is only used for user overrides.\n * hterm.Keyboard.KeyMap still handles all of the built-in key mappings.\n * It'd be nice if we migrated that over to be hterm.Keyboard.Bindings based.\n *\n * @constructor\n */\nhterm.Keyboard.Bindings = function() {\n  this.bindings_ = {};\n};\n\n/**\n * Remove all bindings.\n */\nhterm.Keyboard.Bindings.prototype.clear = function () {\n  this.bindings_ = {};\n};\n\n/**\n * Add a new binding.\n *\n * Internal API that assumes parsed objects as inputs.\n * See the public addBinding for more details.\n *\n * @param {!hterm.Keyboard.KeyPattern} keyPattern\n * @param {!hterm.Keyboard.KeyBindingAction} action\n */\nhterm.Keyboard.Bindings.prototype.addBinding_ = function(keyPattern, action) {\n  var binding = null;\n  var list = this.bindings_[keyPattern.keyCode];\n  if (list) {\n    for (var i = 0; i < list.length; i++) {\n      if (list[i].keyPattern.matchKeyPattern(keyPattern)) {\n        binding = list[i];\n        break;\n      }\n    }\n  }\n\n  if (binding) {\n    binding.action = action;\n  } else {\n    binding = {keyPattern: keyPattern, action: action};\n\n    if (!list) {\n      this.bindings_[keyPattern.keyCode] = [binding];\n    } else {\n      this.bindings_[keyPattern.keyCode].push(binding);\n\n      list.sort(function(a, b) {\n        return hterm.Keyboard.KeyPattern.sortCompare(\n            a.keyPattern, b.keyPattern);\n      });\n    }\n  }\n};\n\n/**\n * Add a new binding.\n *\n * If a binding for the keyPattern already exists it will be overridden.\n *\n * More specific keyPatterns take precedence over those with wildcards.  Given\n * bindings for \"Ctrl-A\" and \"Ctrl-*-A\", and a \"Ctrl-A\" keydown, the \"Ctrl-A\"\n * binding will match even if \"Ctrl-*-A\" was created last.\n *\n * If action is a string, it will be passed through hterm.Parser.parseKeyAction.\n *\n * For example:\n *   // Will replace Ctrl-P keystrokes with the string \"hiya!\".\n *   addBinding('Ctrl-P', \"'hiya!'\");\n *   // Will cancel the keystroke entirely (make it do nothing).\n *   addBinding('Alt-D', hterm.Keyboard.KeyActions.CANCEL);\n *   // Will execute the code and return the action.\n *   addBinding('Ctrl-T', function() {\n *     console.log('Got a T!');\n *     return hterm.Keyboard.KeyActions.PASS;\n *   });\n *\n * @param {string|!hterm.Keyboard.KeyPattern} key\n * @param {!hterm.Keyboard.KeyBindingAction} action\n */\nhterm.Keyboard.Bindings.prototype.addBinding = function(key, action) {\n  // If we're given a hterm.Keyboard.KeyPattern object, pass it down.\n  if (typeof key != 'string') {\n    this.addBinding_(key, action);\n    return;\n  }\n\n  // Here we treat key as a string.\n  var p = new hterm.Parser();\n\n  p.reset(key);\n  var sequence;\n\n  try {\n    sequence = p.parseKeySequence();\n  } catch (ex) {\n    console.error(ex);\n    return;\n  }\n\n  if (!p.isComplete()) {\n    console.error(p.error('Expected end of sequence: ' + sequence));\n    return;\n  }\n\n  // If action is a string, parse it.  Otherwise assume it's callable.\n  if (typeof action == 'string') {\n    p.reset(action);\n    try {\n      action = p.parseKeyAction();\n    } catch (ex) {\n      console.error(ex);\n      return;\n    }\n  }\n\n  if (!p.isComplete()) {\n    console.error(p.error('Expected end of sequence: ' + sequence));\n    return;\n  }\n\n  this.addBinding_(new hterm.Keyboard.KeyPattern(sequence), action);\n};\n\n/**\n * Add multiple bindings at a time using a map of {string: string, ...}\n *\n * This uses hterm.Parser to parse the maps key into KeyPatterns, and the\n * map values into {!hterm.Keyboard.KeyBindingAction}.\n *\n * For example:\n *  {\n *    // Will replace Ctrl-P keystrokes with the string \"hiya!\".\n *    'Ctrl-P': \"'hiya!'\",\n *    // Will cancel the keystroke entirely (make it do nothing).\n *    'Alt-D': hterm.Keyboard.KeyActions.CANCEL,\n *  }\n *\n * @param {!Object<string, !hterm.Keyboard.KeyBindingAction>} map\n */\nhterm.Keyboard.Bindings.prototype.addBindings = function(map) {\n  for (var key in map) {\n    this.addBinding(key, map[key]);\n  }\n};\n\n/**\n * Return the binding that is the best match for the given keyDown record,\n * or null if there is no match.\n *\n * @param {!hterm.Keyboard.KeyDown} keyDown An object with a keyCode property\n *     and zero or more boolean properties representing key modifiers.  These\n *     property names must match those defined in\n *     hterm.Keyboard.KeyPattern.modifiers.\n * @return {?hterm.Keyboard.KeyBinding} The keyboard binding for this key.\n */\nhterm.Keyboard.Bindings.prototype.getBinding = function(keyDown) {\n  var list = this.bindings_[keyDown.keyCode];\n  if (!list)\n    return null;\n\n  for (var i = 0; i < list.length; i++) {\n    var binding = list[i];\n    if (binding.keyPattern.matchKeyDown(keyDown))\n      return binding;\n  }\n\n  return null;\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_keymap.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @typedef {{\n *     keyCap: string,\n *     normal: !hterm.Keyboard.KeyDefAction,\n *     control: !hterm.Keyboard.KeyDefAction,\n *     alt: !hterm.Keyboard.KeyDefAction,\n *     meta: !hterm.Keyboard.KeyDefAction,\n * }}\n */\nhterm.Keyboard.KeyDef;\n\n/**\n * @typedef {function(!KeyboardEvent, !hterm.Keyboard.KeyDef):\n *               !hterm.Keyboard.KeyAction}\n */\nhterm.Keyboard.KeyDefFunction;\n\n/** @typedef {!hterm.Keyboard.KeyAction|!hterm.Keyboard.KeyDefFunction} */\nhterm.Keyboard.KeyDefAction;\n\n/**\n * The default key map for hterm.\n *\n * Contains a mapping of keyCodes to keyDefs (aka key definitions).  The key\n * definition tells the hterm.Keyboard class how to handle keycodes.\n *\n * This should work for most cases, as the printable characters get handled\n * in the keypress event.  In that case, even if the keycap is wrong in the\n * key map, the correct character should be sent.\n *\n * Different layouts, such as Dvorak should work with this keymap, as those\n * layouts typically move keycodes around on the keyboard without disturbing\n * the actual keycaps.\n *\n * There may be issues with control keys on non-US keyboards or with keyboards\n * that very significantly from the expectations here, in which case we may\n * have to invent new key maps.\n *\n * The sequences defined in this key map come from [XTERM] as referenced in\n * vt.js, starting with the section titled \"Alt and Meta Keys\".\n *\n * @param {!hterm.Keyboard} keyboard\n * @constructor\n */\nhterm.Keyboard.KeyMap = function(keyboard) {\n  this.keyboard = keyboard;\n  /** @type {!Object<number, !hterm.Keyboard.KeyDef>} */\n  this.keyDefs = {};\n  this.reset();\n};\n\n/**\n * Add a single key definition.\n *\n * The definition is an object containing the following fields: 'keyCap',\n * 'normal', 'control', 'alt', and 'meta'.\n *\n *  - keyCap is a string identifying the key on the keyboard.  For printable\n *    keys, the key cap should be exactly two characters, starting with the\n *    unshifted version.  For example, 'aA', 'bB', '1!' and '=+'.  For\n *    non-printable the key cap should be surrounded in square braces, as in\n *    '[INS]', '[LEFT]'.  By convention, non-printable keycaps are in uppercase\n *    but this is not a strict requirement.\n *\n *  - Normal is the action that should be performed when the key is pressed\n *    in the absence of any modifier.  See below for the supported actions.\n *\n *  - Control is the action that should be performed when the key is pressed\n *    along with the control modifier.  See below for the supported actions.\n *\n *  - Alt is the action that should be performed when the key is pressed\n *    along with the alt modifier.  See below for the supported actions.\n *\n *  - Meta is the action that should be performed when the key is pressed\n *    along with the meta modifier.  See below for the supported actions.\n *\n * Actions can be one of the hterm.Keyboard.KeyActions as documented below,\n * a literal string, or an array.  If the action is a literal string then\n * the string is sent directly to the host.  If the action is an array it\n * is taken to be an escape sequence that may be altered by modifier keys.\n * The second-to-last element of the array will be overwritten with the\n * state of the modifier keys, as specified in the final table of \"PC-Style\n * Function Keys\" from [XTERM].\n *\n * @param {number} keyCode The KeyboardEvent.keyCode to match against.\n * @param {!hterm.Keyboard.KeyDef} def The actions this key triggers.\n */\nhterm.Keyboard.KeyMap.prototype.addKeyDef = function(keyCode, def) {\n  if (keyCode in this.keyDefs)\n    console.warn('Duplicate keyCode: ' + keyCode);\n\n  this.keyDefs[keyCode] = def;\n};\n\n/**\n * Set up the default state for this keymap.\n */\nhterm.Keyboard.KeyMap.prototype.reset = function() {\n  this.keyDefs = {};\n\n  const self = this;\n  const CANCEL = hterm.Keyboard.KeyActions.CANCEL;\n  const DEFAULT = hterm.Keyboard.KeyActions.DEFAULT;\n  const PASS = hterm.Keyboard.KeyActions.PASS;\n  const STRIP = hterm.Keyboard.KeyActions.STRIP;\n\n  /**\n   * This function is used by the \"macro\" functions below.  It makes it\n   * possible to use the call() macro as an argument to any other macro.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} action\n   * @param {!KeyboardEvent} e\n   * @param {!hterm.Keyboard.KeyDef} k\n   * @return {!hterm.Keyboard.KeyAction}\n   */\n  function resolve(action, e, k) {\n    if (typeof action == 'function') {\n      const keyDefFn = /** @type {!hterm.Keyboard.KeyDefFunction} */ (action);\n      return keyDefFn.call(self, e, k);\n    }\n    return action;\n  }\n\n  /**\n   * If not application keypad a, else b.  The keys that care about\n   * application keypad ignore it when the key is modified.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function ak(a, b) {\n    return function(e, k) {\n      var action = (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n                    !self.keyboard.applicationKeypad) ? a : b;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * If mod or not application cursor a, else b.  The keys that care about\n   * application cursor ignore it when the key is modified.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function ac(a, b) {\n    return function(e, k) {\n      var action = (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n                    !self.keyboard.applicationCursor) ? a : b;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * If not backspace-sends-backspace keypad a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function bs(a, b) {\n    return function(e, k) {\n      var action = !self.keyboard.backspaceSendsBackspace ? a : b;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * If not e.shiftKey a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function sh(a, b) {\n    return function(e, k) {\n      var action = !e.shiftKey ? a : b;\n      e.maskShiftKey = true;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * If not e.altKey a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function alt(a, b) {\n    return function(e, k) {\n      var action = !e.altKey ? a : b;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * If no modifiers a, else b.\n   *\n   * @param {!hterm.Keyboard.KeyDefAction} a\n   * @param {!hterm.Keyboard.KeyDefAction} b\n   * @return {!hterm.Keyboard.KeyDefFunction}\n   */\n  function mod(a, b) {\n    return function(e, k) {\n      var action = !(e.shiftKey || e.ctrlKey || e.altKey || e.metaKey) ? a : b;\n      return resolve(action, e, k);\n    };\n  }\n\n  /**\n   * Compute a control character for a given character.\n   *\n   * @param {string} ch\n   * @return {string}\n   */\n  function ctl(ch) { return String.fromCharCode(ch.charCodeAt(0) - 64); }\n\n  // Call a method on the keymap instance.\n  function c(m) { return function(e, k) { return this[m](e, k); }; }\n\n  // Ignore if not trapping media keys.\n  function med(fn) {\n    return function(e, k) {\n      if (!self.keyboard.mediaKeysAreFKeys) {\n        // Block Back, Forward, and Reload keys to avoid navigating away from\n        // the current page.\n        return (e.keyCode == 166 || e.keyCode == 167 || e.keyCode == 168) ?\n            CANCEL : PASS;\n      }\n      return resolve(fn, e, k);\n    };\n  }\n\n  /**\n   * @param {number} keyCode\n   * @param {string} keyCap\n   * @param {!hterm.Keyboard.KeyDefAction} normal\n   * @param {!hterm.Keyboard.KeyDefAction} control\n   * @param {!hterm.Keyboard.KeyDefAction} alt\n   * @param {!hterm.Keyboard.KeyDefAction} meta\n   */\n  const add = (keyCode, keyCap, normal, control, alt, meta) => {\n    this.addKeyDef(keyCode, {\n      keyCap: keyCap,\n      normal: normal,\n      control: control,\n      alt: alt,\n      meta: meta,\n    });\n  };\n\n  // Browser-specific differences.\n  if (window.navigator && navigator.userAgent &&\n      navigator.userAgent.includes('Firefox')) {\n    // Firefox defines some keys uniquely.  No other browser defines these in\n    // this way.  Some even conflict.  The keyCode field isn't well documented\n    // as it isn't standardized.  At some point we should switch to \"key\".\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n    // http://unixpapa.com/js/key.html\n    // var keycapMute = 181;   // Mute\n    // var keycapVolDn = 182;  // Volume Down\n    // var keycapVolUp = 183;  // Volume Up\n    var keycapSC = 59;      // ;:\n    var keycapEP = 61;      // =+\n    var keycapMU = 173;     // -_\n\n    // Firefox Italian +*.\n    add(171, '+*', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  } else {\n    // All other browsers use these mappings.\n    // var keycapMute = 173;   // Mute\n    // var keycapVolDn = 174;  // Volume Down\n    // var keycapVolUp = 175;  // Volume Up\n    var keycapSC = 186;     // ;:\n    var keycapEP = 187;     // =+\n    var keycapMU = 189;     // -_\n  }\n\n  var ESC = '\\x1b';\n  var CSI = '\\x1b[';\n  var SS3 = '\\x1bO';\n\n  // These fields are: [keycode, keycap, normal, control, alt, meta]\n\n  // The browser sends the keycode 0 for some keys.  We'll just assume it's\n  // going to do the right thing by default for those keys.\n  add(0,   '[UNKNOWN]', PASS, PASS, PASS, PASS);\n\n  // First row.\n  // These bindings match xterm for lack of a better standard.  The emitted\n  // values might look like they're skipping values, but it's what xterm does.\n  // https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-PC-Style-Function-Keys\n  add(27,  '[ESC]', ESC,                       DEFAULT, DEFAULT,     DEFAULT);\n  add(112, '[F1]',  mod(SS3 + 'P', CSI + 'P'), DEFAULT, CSI + '23~', DEFAULT);\n  add(113, '[F2]',  mod(SS3 + 'Q', CSI + 'Q'), DEFAULT, CSI + '24~', DEFAULT);\n  add(114, '[F3]',  mod(SS3 + 'R', CSI + 'R'), DEFAULT, CSI + '25~', DEFAULT);\n  add(115, '[F4]',  mod(SS3 + 'S', CSI + 'S'), DEFAULT, CSI + '26~', DEFAULT);\n  add(116, '[F5]',  CSI + '15~',               DEFAULT, CSI + '28~', DEFAULT);\n  add(117, '[F6]',  CSI + '17~',               DEFAULT, CSI + '29~', DEFAULT);\n  add(118, '[F7]',  CSI + '18~',               DEFAULT, CSI + '31~', DEFAULT);\n  add(119, '[F8]',  CSI + '19~',               DEFAULT, CSI + '32~', DEFAULT);\n  add(120, '[F9]',  CSI + '20~',               DEFAULT, CSI + '33~', DEFAULT);\n  add(121, '[F10]', CSI + '21~',               DEFAULT, CSI + '34~', DEFAULT);\n  add(122, '[F11]', c('onF11_'),               DEFAULT, CSI + '42~', DEFAULT);\n  add(123, '[F12]', CSI + '24~',               DEFAULT, CSI + '43~', DEFAULT);\n\n  // Second row.\n  add(192, '`~', DEFAULT, sh(ctl('@'), ctl('^')),     DEFAULT,           PASS);\n  add(49,  '1!', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(50,  '2@', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(51,  '3#', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(52,  '4$', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(53,  '5%', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(54,  '6^', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(55,  '7&', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(56,  '8*', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(57,  '9(', DEFAULT, c('onCtrlNum_'),    c('onAltNum_'), c('onMetaNum_'));\n  add(48,  '0)', DEFAULT, c('onZoom_'),       c('onAltNum_'), c('onZoom_'));\n  add(keycapMU, '-_', DEFAULT, c('onZoom_'),  DEFAULT,        c('onZoom_'));\n  add(keycapEP, '=+', DEFAULT, c('onZoom_'),  DEFAULT,        c('onZoom_'));\n\n  add(8,   '[BKSP]', bs('\\x7f', '\\b'), bs('\\b', '\\x7f'), DEFAULT,     DEFAULT);\n\n  // Third row.\n  add(9,   '[TAB]', sh('\\t', CSI + 'Z'), STRIP,     PASS,    DEFAULT);\n  add(81,  'qQ',    DEFAULT,             ctl('Q'),  DEFAULT, DEFAULT);\n  add(87,  'wW',    DEFAULT,             ctl('W'),  DEFAULT, DEFAULT);\n  add(69,  'eE',    DEFAULT,             ctl('E'),  DEFAULT, DEFAULT);\n  add(82,  'rR',    DEFAULT,             ctl('R'),  DEFAULT, DEFAULT);\n  add(84,  'tT',    DEFAULT,             ctl('T'),  DEFAULT, DEFAULT);\n  add(89,  'yY',    DEFAULT,             ctl('Y'),  DEFAULT, DEFAULT);\n  add(85,  'uU',    DEFAULT,             ctl('U'),  DEFAULT, DEFAULT);\n  add(73,  'iI',    DEFAULT,             ctl('I'),  DEFAULT, DEFAULT);\n  add(79,  'oO',    DEFAULT,             ctl('O'),  DEFAULT, DEFAULT);\n  add(80,  'pP',    DEFAULT,             ctl('P'),  DEFAULT, DEFAULT);\n  add(219, '[{',    DEFAULT,             ctl('['),  DEFAULT, DEFAULT);\n  add(221, ']}',    DEFAULT,             ctl(']'),  DEFAULT, DEFAULT);\n  add(220, '\\\\|',   DEFAULT,             ctl('\\\\'), DEFAULT, DEFAULT);\n\n  // Fourth row. We let Ctrl-Shift-J pass for Chrome DevTools.\n  // To be compliant with xterm's behavior for modifiers on Enter\n  // would mean maximizing the window with Alt-Enter... so we don't\n  // want to do that. Our behavior on Enter is what most other\n  // modern emulators do.\n  add(20,  '[CAPS]',  PASS,    PASS,                        PASS,    DEFAULT);\n  add(65,  'aA',      DEFAULT, ctl('A'),                    DEFAULT, DEFAULT);\n  add(83,  'sS',      DEFAULT, ctl('S'),                    DEFAULT, DEFAULT);\n  add(68,  'dD',      DEFAULT, ctl('D'),                    DEFAULT, DEFAULT);\n  add(70,  'fF',      DEFAULT, ctl('F'),                    DEFAULT, DEFAULT);\n  add(71,  'gG',      DEFAULT, ctl('G'),                    DEFAULT, DEFAULT);\n  add(72,  'hH',      DEFAULT, ctl('H'),                    DEFAULT, DEFAULT);\n  add(74,  'jJ',      DEFAULT, sh(ctl('J'), PASS),          DEFAULT, DEFAULT);\n  add(75,  'kK',      DEFAULT, sh(ctl('K'), c('onClear_')), DEFAULT, DEFAULT);\n  add(76,  'lL',      DEFAULT, sh(ctl('L'), PASS),          DEFAULT, DEFAULT);\n  add(keycapSC, ';:', DEFAULT, STRIP,                       DEFAULT, DEFAULT);\n  add(222, '\\'\"',     DEFAULT, STRIP,                       DEFAULT, DEFAULT);\n  add(13,  '[ENTER]', '\\r',    DEFAULT,                     DEFAULT, DEFAULT);\n\n  // Fifth row.  This includes the copy/paste shortcuts.  On some\n  // platforms it's Ctrl-C/V, on others it's Meta-C/V.  We assume either\n  // Ctrl-C/Meta-C should pass to the browser when there is a selection,\n  // and Ctrl-Shift-V/Meta-*-V should always pass to the browser (since\n  // these seem to be recognized as paste too).\n  add(16,  '[SHIFT]', PASS, PASS,                  PASS,    DEFAULT);\n  add(90,  'zZ',   DEFAULT, ctl('Z'),              DEFAULT, DEFAULT);\n  add(88,  'xX',   DEFAULT, ctl('X'),              DEFAULT, DEFAULT);\n  add(67,  'cC',   DEFAULT, c('onCtrlC_'),         DEFAULT, c('onMetaC_'));\n  add(86,  'vV',   DEFAULT, c('onCtrlV_'),         DEFAULT, c('onMetaV_'));\n  add(66,  'bB',   DEFAULT, sh(ctl('B'), PASS),    DEFAULT, sh(DEFAULT, PASS));\n  add(78,  'nN',   DEFAULT, c('onCtrlN_'),         DEFAULT, c('onMetaN_'));\n  add(77,  'mM',   DEFAULT, ctl('M'),              DEFAULT, DEFAULT);\n  add(188, ',<',   DEFAULT, alt(STRIP, PASS),      DEFAULT, DEFAULT);\n  add(190, '.>',   DEFAULT, alt(STRIP, PASS),      DEFAULT, DEFAULT);\n  add(191, '/?',   DEFAULT, sh(ctl('_'), ctl('?')), DEFAULT, DEFAULT);\n\n  // Sixth and final row.\n  add(17,  '[CTRL]',  PASS,    PASS,     PASS,    PASS);\n  add(18,  '[ALT]',   PASS,    PASS,     PASS,    PASS);\n  add(91,  '[LAPL]',  PASS,    PASS,     PASS,    PASS);\n  add(32,  ' ',       DEFAULT, ctl('@'), DEFAULT, DEFAULT);\n  add(92,  '[RAPL]',  PASS,    PASS,     PASS,    PASS);\n  add(93,  '[RMENU]', PASS,    PASS,     PASS,    PASS);\n\n  // These things.\n  add(42,  '[PRTSCR]', PASS, PASS, PASS, PASS);\n  add(145, '[SCRLK]',  PASS, PASS, PASS, PASS);\n  add(19,  '[BREAK]',  PASS, PASS, PASS, PASS);\n\n  // The block of six keys above the arrows.\n  add(45,  '[INSERT]', c('onKeyInsert_'),   DEFAULT, DEFAULT, DEFAULT);\n  add(36,  '[HOME]',   c('onKeyHome_'),     DEFAULT, DEFAULT, DEFAULT);\n  add(33,  '[PGUP]',   c('onKeyPageUp_'),   DEFAULT, DEFAULT, DEFAULT);\n  add(46,  '[DEL]',    c('onKeyDel_'),      DEFAULT, DEFAULT, DEFAULT);\n  add(35,  '[END]',    c('onKeyEnd_'),      DEFAULT, DEFAULT, DEFAULT);\n  add(34,  '[PGDOWN]', c('onKeyPageDown_'), DEFAULT, DEFAULT, DEFAULT);\n\n  // Arrow keys.  When unmodified they respect the application cursor state,\n  // otherwise they always send the CSI codes.\n  add(38, '[UP]',    c('onKeyArrowUp_'), DEFAULT, DEFAULT, DEFAULT);\n  add(40, '[DOWN]',  c('onKeyArrowDown_'), DEFAULT, DEFAULT, DEFAULT);\n  add(39, '[RIGHT]', ac(CSI + 'C', SS3 + 'C'), DEFAULT, DEFAULT, DEFAULT);\n  add(37, '[LEFT]',  ac(CSI + 'D', SS3 + 'D'), DEFAULT, DEFAULT, DEFAULT);\n\n  add(144, '[NUMLOCK]', PASS, PASS, PASS, PASS);\n\n  // On Apple keyboards, the NumLock key is a Clear key.  It also tends to be\n  // what KP5 sends when numlock is off.  Not clear if we could do anything\n  // useful with it, so just pass it along.\n  add(12, '[CLEAR]', PASS, PASS, PASS, PASS);\n\n  // With numlock off, the keypad generates the same key codes as the arrows\n  // and 'block of six' for some keys, and null key codes for the rest.\n\n  // Keypad with numlock on generates unique key codes...\n  add(96,  '[KP0]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(97,  '[KP1]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(98,  '[KP2]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(99,  '[KP3]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(100, '[KP4]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(101, '[KP5]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(102, '[KP6]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(103, '[KP7]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(104, '[KP8]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(105, '[KP9]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(107, '[KP+]', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  add(109, '[KP-]', DEFAULT, c('onZoom_'), DEFAULT, c('onZoom_'));\n  add(106, '[KP*]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(111, '[KP/]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n  add(110, '[KP.]', DEFAULT, DEFAULT,      DEFAULT, DEFAULT);\n\n  // OS-specific differences.\n  if (hterm.os == 'cros') {\n    // Chrome OS keyboard top row.  The media-keys-are-fkeys preference allows\n    // users to make these always behave as function keys (see those bindings\n    // above for more details).\n    /* eslint-disable max-len */\n    add(166, '[BACK]',   med(mod(SS3+'P', CSI+'P')), DEFAULT, CSI+'23~', DEFAULT);  // F1\n    add(167, '[FWD]',    med(mod(SS3+'Q', CSI+'Q')), DEFAULT, CSI+'24~', DEFAULT);  // F2\n    add(168, '[RELOAD]', med(mod(SS3+'R', CSI+'R')), DEFAULT, CSI+'25~', DEFAULT);  // F3\n    add(183, '[FSCR]',   med(mod(SS3+'S', CSI+'S')), DEFAULT, CSI+'26~', DEFAULT);  // F4\n    add(182, '[WINS]',   med(CSI + '15~'),           DEFAULT, CSI+'28~', DEFAULT);  // F5\n    add(216, '[BRIT-]',  med(CSI + '17~'),           DEFAULT, CSI+'29~', DEFAULT);  // F6\n    add(217, '[BRIT+]',  med(CSI + '18~'),           DEFAULT, CSI+'31~', DEFAULT);  // F7\n    add(173, '[MUTE]',   med(CSI + '19~'),           DEFAULT, CSI+'32~', DEFAULT);  // F8\n    add(174, '[VOL-]',   med(CSI + '20~'),           DEFAULT, CSI+'33~', DEFAULT);  // F9\n    add(175, '[VOL+]',   med(CSI + '21~'),           DEFAULT, CSI+'34~', DEFAULT);  // F10\n    /* eslint-enable max-len */\n\n    // We could make this into F11, but it'd be a bit weird.  Chrome allows us\n    // to see this and react, but it doesn't actually allow us to block or\n    // cancel it, so it makes the screen flash/lock still.\n    add(152, '[POWER]', DEFAULT, DEFAULT, DEFAULT, DEFAULT);\n\n    // The Pixelbook has a slightly different layout.  This means half the keys\n    // above are off by one.  https://crbug.com/807513\n    add(179, '[PLAY]', med(CSI + '18~'), DEFAULT, CSI + '31~', DEFAULT); // F7\n    // The settings / hamburgers / three hot dogs / menu / whatever-it's-called.\n    add(154, '[DOGS]', med(CSI + '23~'), DEFAULT, CSI + '42~', DEFAULT); // F11\n\n    // We don't use this for anything, but keep it from popping up by default.\n    add(153, '[ASSIST]', DEFAULT, DEFAULT, DEFAULT, DEFAULT);\n  }\n};\n\n/**\n * Either allow the paste or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyInsert_ = function(e) {\n  if (this.keyboard.shiftInsertPaste && e.shiftKey)\n    return hterm.Keyboard.KeyActions.PASS;\n\n  return '\\x1b[2~';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyHome_ = function(e) {\n  if (!this.keyboard.homeKeysScroll ^ e.shiftKey) {\n    if ((e.altey || e.ctrlKey || e.shiftKey) ||\n        !this.keyboard.applicationCursor) {\n      return '\\x1b[H';\n    }\n\n    return '\\x1bOH';\n  }\n\n  this.keyboard.terminal.scrollHome();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyEnd_ = function(e) {\n  if (!this.keyboard.homeKeysScroll ^ e.shiftKey) {\n    if ((e.altKey || e.ctrlKey || e.shiftKey) ||\n        !this.keyboard.applicationCursor) {\n      return '\\x1b[F';\n    }\n\n    return '\\x1bOF';\n  }\n\n  this.keyboard.terminal.scrollEnd();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyPageUp_ = function(e) {\n  if (!this.keyboard.pageKeysScroll ^ e.shiftKey)\n    return '\\x1b[5~';\n\n  this.keyboard.terminal.scrollPageUp();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either send a true DEL, or sub in meta-backspace.\n *\n * On Chrome OS, if we know the alt key is down, but we get a DEL event that\n * claims that the alt key is not pressed, we know the DEL was a synthetic\n * one from a user that hit alt-backspace. Based on a user pref, we can sub\n * in meta-backspace in this case.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyDel_ = function(e) {\n  if (this.keyboard.altBackspaceIsMetaBackspace &&\n      this.keyboard.altKeyPressed && !e.altKey)\n    return '\\x1b\\x7f';\n  return '\\x1b[3~';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyPageDown_ = function(e) {\n  if (!this.keyboard.pageKeysScroll ^ e.shiftKey)\n    return '\\x1b[6~';\n\n  this.keyboard.terminal.scrollPageDown();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyArrowUp_ = function(e) {\n  if (!this.keyboard.applicationCursor && e.shiftKey) {\n    this.keyboard.terminal.scrollLineUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n          !this.keyboard.applicationCursor) ? '\\x1b[A' : '\\x1bOA';\n};\n\n/**\n * Either scroll the scrollback buffer or send a key sequence.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onKeyArrowDown_ = function(e) {\n  if (!this.keyboard.applicationCursor && e.shiftKey) {\n    this.keyboard.terminal.scrollLineDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return (e.shiftKey || e.ctrlKey || e.altKey || e.metaKey ||\n          !this.keyboard.applicationCursor) ? '\\x1b[B' : '\\x1bOB';\n};\n\n/**\n * Clear the primary/alternate screens and the scrollback buffer.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onClear_ = function(e) {\n  this.keyboard.terminal.wipeContents();\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n\n/**\n * Handle F11 behavior (fullscreen) when not in a window.\n *\n * It would be nice to use the Fullscreen API, but the UX is slightly different\n * a bad way: the Escape key is automatically registered for exiting.  If we let\n * the browser handle F11 directly though, we still get to capture Escape.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onF11_ = function(e) {\n  if (hterm.windowType != 'popup')\n    return hterm.Keyboard.KeyActions.PASS;\n  else\n    return '\\x1b[23~';\n};\n\n/**\n * Either pass Ctrl-1..9 to the browser or send them to the host.\n *\n * Note that Ctrl-1 and Ctrl-9 don't actually have special sequences mapped\n * to them in xterm or gnome-terminal.  The range is really Ctrl-2..8, but\n * we handle 1..9 since Chrome treats the whole range special.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlNum_ = function(e, keyDef) {\n  // Compute a control character for a given character.\n  function ctl(ch) { return String.fromCharCode(ch.charCodeAt(0) - 64); }\n\n  if (this.keyboard.terminal.passCtrlNumber && !e.shiftKey)\n    return hterm.Keyboard.KeyActions.PASS;\n\n  switch (keyDef.keyCap.substr(0, 1)) {\n    case '1': return '1';\n    case '2': return ctl('@');\n    case '3': return ctl('[');\n    case '4': return ctl('\\\\');\n    case '5': return ctl(']');\n    case '6': return ctl('^');\n    case '7': return ctl('_');\n    case '8': return '\\x7f';\n    case '9': return '9';\n  }\n  return hterm.Keyboard.KeyActions.PASS;\n};\n\n/**\n * Either pass Alt-1..9 to the browser or send them to the host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onAltNum_ = function(e) {\n  if (this.keyboard.terminal.passAltNumber && !e.shiftKey)\n    return hterm.Keyboard.KeyActions.PASS;\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either pass Meta-1..9 to the browser or send them to the host.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaNum_ = function(e) {\n  if (this.keyboard.terminal.passMetaNumber && !e.shiftKey)\n    return hterm.Keyboard.KeyActions.PASS;\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either send a ^C or interpret the keystroke as a copy command.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlC_ = function(e) {\n  var selection = this.keyboard.terminal.getDocument().getSelection();\n\n  if (!selection.isCollapsed) {\n    if (this.keyboard.ctrlCCopy && !e.shiftKey) {\n      // Ctrl-C should copy if there is a selection, send ^C otherwise.\n      // Perform the copy by letting the browser handle Ctrl-C.  On most\n      // browsers, this is the *only* way to place text on the clipboard from\n      // the 'drive-by' web.\n      if (this.keyboard.terminal.clearSelectionAfterCopy) {\n        setTimeout(selection.collapseToEnd.bind(selection), 50);\n      }\n      return hterm.Keyboard.KeyActions.PASS;\n    }\n\n    if (!this.keyboard.ctrlCCopy && e.shiftKey) {\n      // Ctrl-Shift-C should copy if there is a selection, send ^C otherwise.\n      // Perform the copy manually.  This only works in situations where\n      // document.execCommand('copy') is allowed.\n      if (this.keyboard.terminal.clearSelectionAfterCopy) {\n        setTimeout(selection.collapseToEnd.bind(selection), 50);\n      }\n      this.keyboard.terminal.copySelectionToClipboard();\n      return hterm.Keyboard.KeyActions.CANCEL;\n    }\n  }\n\n  return '\\x03';\n};\n\n/**\n * Either send a ^N or open a new window to the same location.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlN_ = function(e) {\n  if (e.shiftKey) {\n    lib.f.openWindow(document.location.href, '',\n                     'chrome=no,close=yes,resize=yes,scrollbars=yes,' +\n                     'minimizable=yes,width=' + window.innerWidth +\n                     ',height=' + window.innerHeight);\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return '\\x0e';\n};\n\n/**\n * Either send a ^V or issue a paste command.\n *\n * The default behavior is to paste if the user presses Ctrl-Shift-V, and send\n * a ^V if the user presses Ctrl-V. This can be flipped with the\n * 'ctrl-v-paste' preference.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onCtrlV_ = function(e) {\n  if ((!e.shiftKey && this.keyboard.ctrlVPaste) ||\n      (e.shiftKey && !this.keyboard.ctrlVPaste)) {\n    // We try to do the pasting ourselves as not all browsers/OSs bind Ctrl-V to\n    // pasting.  Notably, on macOS, Ctrl-V/Ctrl-Shift-V do nothing.\n    // However, this might run into web restrictions, so if it fails, we still\n    // fallback to the letting the native behavior (hopefully) save us.\n    if (this.keyboard.terminal.paste())\n      return hterm.Keyboard.KeyActions.CANCEL;\n    else\n      return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  return '\\x16';\n};\n\n/**\n * Either the default action or open a new window to the same location.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaN_ = function(e) {\n  if (e.shiftKey) {\n    lib.f.openWindow(document.location.href, '',\n                     'chrome=no,close=yes,resize=yes,scrollbars=yes,' +\n                     'minimizable=yes,width=' + window.outerWidth +\n                     ',height=' + window.outerHeight);\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  return hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Either send a Meta-C or allow the browser to interpret the keystroke as a\n * copy command.\n *\n * If there is no selection, or if the user presses Meta-Shift-C, then we'll\n * transmit an '\\x1b' (if metaSendsEscape is on) followed by 'c' or 'C'.\n *\n * If there is a selection, we defer to the browser.  In this case we clear out\n * the selection so the user knows we heard them, and also to give them a\n * chance to send a Meta-C by just hitting the key again.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaC_ = function(e, keyDef) {\n  var document = this.keyboard.terminal.getDocument();\n  if (e.shiftKey || document.getSelection().isCollapsed) {\n    // If the shift key is being held, or there is no document selection, send\n    // a Meta-C.  The keyboard code will add the ESC if metaSendsEscape is true,\n    // we just have to decide between 'c' and 'C'.\n    return keyDef.keyCap.substr(e.shiftKey ? 1 : 0, 1);\n  }\n\n  // Otherwise let the browser handle it as a copy command.\n  if (this.keyboard.terminal.clearSelectionAfterCopy) {\n    setTimeout(function() { document.getSelection().collapseToEnd(); }, 50);\n  }\n  return hterm.Keyboard.KeyActions.PASS;\n};\n\n/**\n * Either PASS or DEFAULT Meta-V, depending on preference.\n *\n * Always PASS Meta-Shift-V to allow browser to interpret the keystroke as\n * a paste command.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onMetaV_ = function(e) {\n  if (e.shiftKey)\n    return hterm.Keyboard.KeyActions.PASS;\n\n  return this.keyboard.passMetaV ?\n      hterm.Keyboard.KeyActions.PASS :\n      hterm.Keyboard.KeyActions.DEFAULT;\n};\n\n/**\n * Handle font zooming.\n *\n * The browser's built-in zoom has a bit of an issue at certain zoom levels.\n * At some magnifications, the measured height of a row of text differs from\n * the height that was explicitly set.\n *\n * We override the browser zoom keys to change the ScrollPort's font size to\n * avoid the issue.\n *\n * @param {!KeyboardEvent} e The event to process.\n * @param {!hterm.Keyboard.KeyDef} keyDef Key definition.\n * @return {symbol|string} Key action or sequence.\n */\nhterm.Keyboard.KeyMap.prototype.onZoom_ = function(e, keyDef) {\n  if (!(this.keyboard.ctrlPlusMinusZeroZoom ^ e.shiftKey)) {\n    // If ctrl-PMZ controls zoom and the shift key is pressed, or\n    // ctrl-shift-PMZ controls zoom and this shift key is not pressed,\n    // then we want to send the control code instead of affecting zoom.\n    if (keyDef.keyCap == '-_')\n      return '\\x1f';  // ^_\n\n    // Only ^_ is valid, the other sequences have no meaning.\n    return hterm.Keyboard.KeyActions.CANCEL;\n  }\n\n  if (this.keyboard.terminal.getZoomFactor() != 1) {\n    // If we're not at 1:1 zoom factor, let the Ctrl +/-/0 keys control the\n    // browser zoom, so it's easier to for the user to get back to 100%.\n    return hterm.Keyboard.KeyActions.PASS;\n  }\n\n  var cap = keyDef.keyCap.substr(0, 1);\n  if (cap == '0') {\n      this.keyboard.terminal.setFontSize(0);\n  } else {\n    var size = this.keyboard.terminal.getFontSize();\n\n    if (cap == '-' || keyDef.keyCap == '[KP-]') {\n      size -= 1;\n    } else {\n      size += 1;\n    }\n\n    this.keyboard.terminal.setFontSize(size);\n  }\n\n  return hterm.Keyboard.KeyActions.CANCEL;\n};\n// SOURCE FILE: hterm/js/hterm_keyboard_keypattern.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * A record of modifier bits and keycode used to define a key binding.\n *\n * The modifier names are enumerated in the static KeyPattern.modifiers\n * property below.  Each modifier can be true, false, or \"*\".  True means\n * the modifier key must be present, false means it must not, and \"*\" means\n * it doesn't matter.\n *\n * @param {!hterm.Keyboard.KeyDown} spec\n * @constructor\n */\nhterm.Keyboard.KeyPattern = function(spec) {\n  this.wildcardCount = 0;\n  this.keyCode = spec.keyCode;\n\n  hterm.Keyboard.KeyPattern.modifiers.forEach(function(mod) {\n    this[mod] = spec[mod] || false;\n    if (this[mod] == '*')\n      this.wildcardCount++;\n  }.bind(this));\n};\n\n/**\n * Valid modifier names.\n */\nhterm.Keyboard.KeyPattern.modifiers = [\n  'shift', 'ctrl', 'alt', 'meta'\n];\n\n/**\n * A compare callback for Array.prototype.sort().\n *\n * The bindings code wants to be sure to search through the strictest key\n * patterns first, so that loosely defined patterns have a lower priority than\n * exact patterns.\n *\n * @param {!hterm.Keyboard.KeyPattern} a\n * @param {!hterm.Keyboard.KeyPattern} b\n * @return {number}\n */\nhterm.Keyboard.KeyPattern.sortCompare = function(a, b) {\n  if (a.wildcardCount < b.wildcardCount)\n    return -1;\n\n  if (a.wildcardCount > b.wildcardCount)\n    return 1;\n\n  return 0;\n};\n\n/**\n * Private method used to match this key pattern against other key patterns\n * or key down events.\n *\n * @param {!hterm.Keyboard.KeyDown} obj The object to match.\n * @param {boolean} exactMatch True if we should ignore wildcards.  Useful when\n *     you want\n *   to perform and exact match against another key pattern.\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.match_ = function(obj, exactMatch) {\n  if (this.keyCode != obj.keyCode)\n    return false;\n\n  var rv = true;\n\n  hterm.Keyboard.KeyPattern.modifiers.forEach(function(mod) {\n    var modValue = (mod in obj) ? obj[mod] : false;\n    if (!rv || (!exactMatch && this[mod] == '*') || this[mod] == modValue)\n      return;\n\n    rv = false;\n  }.bind(this));\n\n  return rv;\n};\n\n/**\n * Return true if the given keyDown object is a match for this key pattern.\n *\n * @param {!hterm.Keyboard.KeyDown} keyDown An object with a keyCode property\n *     and zero or more boolean properties representing key modifiers.  These\n *     property names must match those defined in\n *     hterm.Keyboard.KeyPattern.modifiers.\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.matchKeyDown = function(keyDown) {\n  return this.match_(keyDown, false);\n};\n\n/**\n * Return true if the given hterm.Keyboard.KeyPattern is exactly the same as\n * this one.\n *\n * @param {!hterm.Keyboard.KeyPattern} keyPattern\n * @return {boolean}\n */\nhterm.Keyboard.KeyPattern.prototype.matchKeyPattern = function(keyPattern) {\n  return this.match_(keyPattern, true);\n};\n// SOURCE FILE: hterm/js/hterm_options.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview This file implements the hterm.Options class,\n * which stores current operating conditions for the terminal.  This object is\n * used instead of a series of parameters to allow saving/restoring of cursor\n * conditions easily, and to provide an easy place for common configuration\n * options.\n *\n * Original code by Cory Maccarrone.\n */\n\n/**\n * Constructor for the hterm.Options class, optionally acting as a copy\n * constructor.\n *\n * The defaults are as defined in http://www.vt100.net/docs/vt510-rm/DECSTR\n * except that we enable autowrap (wraparound) by default since that seems to\n * be what xterm does.\n *\n * @param {!hterm.Options=} opt_copy Optional instance to copy.\n * @constructor\n */\nhterm.Options = function(opt_copy) {\n  // All attributes in this class are public to allow easy access by the\n  // terminal.\n\n  this.wraparound = opt_copy ? opt_copy.wraparound : true;\n  this.reverseWraparound = opt_copy ? opt_copy.reverseWraparound : false;\n  this.originMode = opt_copy ? opt_copy.originMode : false;\n  this.autoCarriageReturn = opt_copy ? opt_copy.autoCarriageReturn : false;\n  this.cursorVisible = opt_copy ? opt_copy.cursorVisible : false;\n  this.cursorBlink = opt_copy ? opt_copy.cursorBlink : false;\n  this.insertMode = opt_copy ? opt_copy.insertMode : false;\n  this.reverseVideo = opt_copy ? opt_copy.reverseVideo : false;\n  this.bracketedPaste = opt_copy ? opt_copy.bracketedPaste : false;\n};\n// SOURCE FILE: hterm/js/hterm_parser.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Parses the key definition syntax used for user keyboard customizations.\n *\n * @constructor\n */\nhterm.Parser = function() {\n  /**\n   * @type {string} The source string.\n   */\n  this.source = '';\n\n  /**\n   * @type {number} The current position.\n   */\n  this.pos = 0;\n\n  /**\n   * @type {?string} The character at the current position.\n   */\n  this.ch = null;\n};\n\n/**\n * @param {string} message\n * @return {!Error}\n */\nhterm.Parser.prototype.error = function(message) {\n  return new Error('Parse error at ' + this.pos + ': ' + message);\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.isComplete = function() {\n  return this.pos == this.source.length;\n};\n\n/**\n * @param {string} source\n * @param {number=} opt_pos\n */\nhterm.Parser.prototype.reset = function(source, opt_pos) {\n  this.source = source;\n  this.pos = opt_pos || 0;\n  this.ch = source.substr(0, 1);\n};\n\n/**\n * Parse a key sequence.\n *\n * A key sequence is zero or more of the key modifiers defined in\n * hterm.Parser.identifiers.modifierKeys followed by a key code.  Key\n * codes can be an integer or an identifier from\n * hterm.Parser.identifiers.keyCodes.  Modifiers and keyCodes should be joined\n * by the dash character.\n *\n * An asterisk \"*\" can be used to indicate that the unspecified modifiers\n * are optional.\n *\n * For example:\n *   A: Matches only an unmodified \"A\" character.\n *   65: Same as above.\n *   0x41: Same as above.\n *   Ctrl-A: Matches only Ctrl-A.\n *   Ctrl-65: Same as above.\n *   Ctrl-0x41: Same as above.\n *   Ctrl-Shift-A: Matches only Ctrl-Shift-A.\n *   Ctrl-*-A: Matches Ctrl-A, as well as any other key sequence that includes\n *     at least the Ctrl and A keys.\n *\n * @return {!hterm.Keyboard.KeyDown} An object with shift, ctrl, alt, meta,\n *     keyCode properties.\n */\nhterm.Parser.prototype.parseKeySequence = function() {\n  var rv = {\n    keyCode: null\n  };\n\n  for (var k in hterm.Parser.identifiers.modifierKeys) {\n    rv[hterm.Parser.identifiers.modifierKeys[k]] = false;\n  }\n\n  while (this.pos < this.source.length) {\n    this.skipSpace();\n\n    var token = this.parseToken();\n    if (token.type == 'integer') {\n      rv.keyCode = token.value;\n\n    } else if (token.type == 'identifier') {\n      var ucValue = token.value.toUpperCase();\n      if (ucValue in hterm.Parser.identifiers.modifierKeys &&\n          hterm.Parser.identifiers.modifierKeys.hasOwnProperty(ucValue)) {\n        var mod = hterm.Parser.identifiers.modifierKeys[ucValue];\n        if (rv[mod] && rv[mod] != '*')\n          throw this.error('Duplicate modifier: ' + token.value);\n        rv[mod] = true;\n\n      } else if (ucValue in hterm.Parser.identifiers.keyCodes &&\n                 hterm.Parser.identifiers.keyCodes.hasOwnProperty(ucValue)) {\n        rv.keyCode = hterm.Parser.identifiers.keyCodes[ucValue];\n\n      } else {\n        throw this.error('Unknown key: ' + token.value);\n      }\n\n    } else if (token.type == 'symbol') {\n      if (token.value == '*') {\n        for (var id in hterm.Parser.identifiers.modifierKeys) {\n          var p = hterm.Parser.identifiers.modifierKeys[id];\n          if (!rv[p])\n            rv[p] =  '*';\n        }\n      } else {\n        throw this.error('Unexpected symbol: ' + token.value);\n      }\n    } else {\n      throw this.error('Expected integer or identifier');\n    }\n\n    this.skipSpace();\n\n    if (this.ch != '-')\n      break;\n\n    if (rv.keyCode != null)\n      throw this.error('Extra definition after target key');\n\n    this.advance(1);\n  }\n\n  if (rv.keyCode == null)\n    throw this.error('Missing target key');\n\n  return rv;\n};\n\n/** @return {string} */\nhterm.Parser.prototype.parseKeyAction = function() {\n  this.skipSpace();\n\n  var token = this.parseToken();\n\n  if (token.type == 'string')\n    return token.value;\n\n  if (token.type == 'identifier') {\n    if (token.value in hterm.Parser.identifiers.actions &&\n        hterm.Parser.identifiers.actions.hasOwnProperty(token.value))\n      return hterm.Parser.identifiers.actions[token.value];\n\n    throw this.error('Unknown key action: ' + token.value);\n  }\n\n  throw this.error('Expected string or identifier');\n\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekString = function() {\n  return this.ch == '\\'' || this.ch == '\"';\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekIdentifier = function() {\n  return !!this.ch.match(/[a-z_]/i);\n};\n\n/** @return {boolean} */\nhterm.Parser.prototype.peekInteger = function() {\n  return !!this.ch.match(/[0-9]/);\n};\n\n/** @return {!Object} */\nhterm.Parser.prototype.parseToken = function() {\n  if (this.ch == '*') {\n    var rv = {type: 'symbol', value: this.ch};\n    this.advance(1);\n    return rv;\n  }\n\n  if (this.peekIdentifier())\n    return {type: 'identifier', value: this.parseIdentifier()};\n\n  if (this.peekString())\n    return {type: 'string', value: this.parseString()};\n\n  if (this.peekInteger())\n    return {type: 'integer', value: this.parseInteger()};\n\n\n  throw this.error('Unexpected token');\n};\n\n/** @return {string} */\nhterm.Parser.prototype.parseIdentifier = function() {\n  if (!this.peekIdentifier())\n    throw this.error('Expected identifier');\n\n  return this.parsePattern(/[a-z0-9_]+/ig);\n};\n\n/** @return {number} */\nhterm.Parser.prototype.parseInteger = function() {\n  if (this.ch == '0' && this.pos < this.source.length - 1 &&\n      this.source.substr(this.pos + 1, 1) == 'x') {\n    return parseInt(this.parsePattern(/0x[0-9a-f]+/gi), undefined);\n  }\n\n  return parseInt(this.parsePattern(/\\d+/g), 10);\n};\n\n/**\n * Parse a single or double quoted string.\n *\n * The current position should point at the initial quote character.  Single\n * quoted strings will be treated literally, double quoted will process escapes.\n *\n * TODO(rginda): Variable interpolation.\n *\n * @return {string}\n */\nhterm.Parser.prototype.parseString = function() {\n  var result = '';\n\n  var quote = this.ch;\n  if (quote != '\"' && quote != '\\'')\n    throw this.error('String expected');\n\n  this.advance(1);\n\n  var re = new RegExp('[\\\\\\\\' + quote + ']', 'g');\n\n  while (this.pos < this.source.length) {\n    re.lastIndex = this.pos;\n    if (!re.exec(this.source))\n      throw this.error('Unterminated string literal');\n\n    result += this.source.substring(this.pos, re.lastIndex - 1);\n\n    this.advance(re.lastIndex - this.pos - 1);\n\n    if (quote == '\"' && this.ch == '\\\\') {\n      this.advance(1);\n      result += this.parseEscape();\n      continue;\n    }\n\n    if (quote == '\\'' && this.ch == '\\\\') {\n      result += this.ch;\n      this.advance(1);\n      continue;\n    }\n\n    if (this.ch == quote) {\n      this.advance(1);\n      return result;\n    }\n  }\n\n  throw this.error('Unterminated string literal');\n};\n\n\n/**\n * Parse an escape code from the current position (which should point to\n * the first character AFTER the leading backslash.)\n *\n * @return {string}\n */\nhterm.Parser.prototype.parseEscape = function() {\n  var map = {\n    '\"': '\"',\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    'a': '\\x07',\n    'b': '\\x08',\n    'e': '\\x1b',\n    'f': '\\x0c',\n    'n': '\\x0a',\n    'r': '\\x0d',\n    't': '\\x09',\n    'v': '\\x0b',\n    'x': function() {\n      var value = this.parsePattern(/[a-z0-9]{2}/ig);\n      return String.fromCharCode(parseInt(value, 16));\n    },\n    'u': function() {\n      var value = this.parsePattern(/[a-z0-9]{4}/ig);\n      return String.fromCharCode(parseInt(value, 16));\n    }\n  };\n\n  if (!(this.ch in map && map.hasOwnProperty(this.ch)))\n    throw this.error('Unknown escape: ' + this.ch);\n\n  var value = map[this.ch];\n  this.advance(1);\n\n  if (typeof value == 'function')\n    value = value.call(this);\n\n  return value;\n};\n\n/**\n * Parse the given pattern starting from the current position.\n *\n * @param {!RegExp} pattern A pattern representing the characters to span.  MUST\n *   include the \"global\" RegExp flag.\n * @return {string}\n */\nhterm.Parser.prototype.parsePattern = function(pattern) {\n  if (!pattern.global)\n    throw this.error('Internal error: Span patterns must be global');\n\n  pattern.lastIndex = this.pos;\n  var ary = pattern.exec(this.source);\n\n  if (!ary || pattern.lastIndex - ary[0].length != this.pos)\n    throw this.error('Expected match for: ' + pattern);\n\n  this.pos = pattern.lastIndex - 1;\n  this.advance(1);\n\n  return ary[0];\n};\n\n\n/**\n * Advance the current position.\n *\n * @param {number} count\n */\nhterm.Parser.prototype.advance = function(count) {\n  this.pos += count;\n  this.ch = this.source.substr(this.pos, 1);\n};\n\n/**\n * @param {string=} opt_expect A list of valid non-whitespace characters to\n *   terminate on.\n * @return {void}\n */\nhterm.Parser.prototype.skipSpace = function(opt_expect) {\n  if (!/\\s/.test(this.ch))\n    return;\n\n  var re = /\\s+/gm;\n  re.lastIndex = this.pos;\n\n  var source = this.source;\n  if (re.exec(source))\n    this.pos = re.lastIndex;\n\n  this.ch = this.source.substr(this.pos, 1);\n\n  if (opt_expect) {\n    if (this.ch.indexOf(opt_expect) == -1) {\n      throw this.error('Expected one of ' + opt_expect + ', found: ' +\n          this.ch);\n    }\n  }\n};\n// SOURCE FILE: hterm/js/hterm_parser_identifiers.js\n// Copyright (c) 2015 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Collections of identifier for hterm.Parser.\n */\nhterm.Parser.identifiers = {};\n\n/**\n * Modifier key names used when defining key sequences.\n *\n * These are upper case so we can normalize the user input and be forgiving.\n * \"CTRL-A\" and \"Ctrl-A\" and \"ctrl-a\" are all accepted.\n *\n * Note: Names here cannot overlap with hterm.Parser.identifiers.keyCodes.\n */\nhterm.Parser.identifiers.modifierKeys = {\n  SHIFT: 'shift',\n  CTRL: 'ctrl',\n  // Common alias.\n  CONTROL: 'ctrl',\n  ALT: 'alt',\n  META: 'meta'\n};\n\n/**\n * Key codes useful when defining key sequences.\n *\n * Punctuation is mostly left out of this list because they can move around\n * based on keyboard locale and browser.\n *\n * In a key sequence like \"Ctrl-ESC\", the ESC comes from this list of\n * identifiers.  It is equivalent to \"Ctrl-27\" and \"Ctrl-0x1b\".\n *\n * These are upper case so we can normalize the user input and be forgiving.\n * \"Ctrl-ESC\" and \"Ctrl-Esc\" an \"Ctrl-esc\" are all accepted.\n *\n * We also include common aliases for the same key.  \"Esc\" and \"Escape\" are the\n * same key.\n *\n * Note: Names here cannot overlap with hterm.Parser.identifiers.modifierKeys.\n */\nhterm.Parser.identifiers.keyCodes = {\n  // Top row.\n  ESCAPE: 27,\n  ESC: 27,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n\n  // Row two.\n  ONE: 49,\n  TWO: 50,\n  THREE: 51,\n  FOUR: 52,\n  FIVE: 53,\n  SIX: 54,\n  SEVEN: 55,\n  EIGHT: 56,\n  NINE: 57,\n  ZERO: 48,\n  BACKSPACE: 8,\n  BKSP: 8,\n  BS: 8,\n\n  // Row three.\n  TAB: 9,\n  Q: 81,\n  W: 87,\n  E: 69,\n  R: 82,\n  T: 84,\n  Y: 89,\n  U: 85,\n  I: 73,\n  O: 79,\n  P: 80,\n\n  // Row four.\n  CAPS_LOCK: 20,\n  CAPSLOCK: 20,\n  CAPS: 20,\n  A: 65,\n  S: 83,\n  D: 68,\n  F: 70,\n  G: 71,\n  H: 72,\n  J: 74,\n  K: 75,\n  L: 76,\n  // We map enter and return together even though enter should really be 10\n  // because most people don't know or care about the history here.  Plus,\n  // most keyboards/programs map them together already.  If they really want\n  // to bind them differently, they can also use the numeric value.\n  ENTER: 13,\n  ENT: 13,\n  RETURN: 13,\n  RET: 13,\n\n  // Row five.\n  Z: 90,\n  X: 88,\n  C: 67,\n  V: 86,\n  B: 66,\n  N: 78,\n  M: 77,\n\n  // Etc.\n  SPACE: 32,\n  SP: 32,\n  PRINT_SCREEN: 42,\n  PRTSC: 42,\n  SCROLL_LOCK: 145,\n  SCRLK: 145,\n  BREAK: 19,\n  BRK: 19,\n  INSERT: 45,\n  INS: 45,\n  HOME: 36,\n  PAGE_UP: 33,\n  PGUP: 33,\n  DELETE: 46,\n  DEL: 46,\n  END: 35,\n  PAGE_DOWN: 34,\n  PGDOWN: 34,\n  PGDN: 34,\n  UP: 38,\n  DOWN: 40,\n  RIGHT: 39,\n  LEFT: 37,\n  NUMLOCK: 144,\n\n  // Keypad\n  KP0: 96,\n  KP1: 97,\n  KP2: 98,\n  KP3: 99,\n  KP4: 100,\n  KP5: 101,\n  KP6: 102,\n  KP7: 103,\n  KP8: 104,\n  KP9: 105,\n  KP_PLUS: 107,\n  KP_ADD: 107,\n  KP_MINUS: 109,\n  KP_SUBTRACT: 109,\n  KP_STAR: 106,\n  KP_MULTIPLY: 106,\n  KP_DIVIDE: 111,\n  KP_DECIMAL: 110,\n  KP_PERIOD: 110,\n\n  // Chrome OS media keys\n  NAVIGATE_BACK: 166,\n  NAVIGATE_FORWARD: 167,\n  RELOAD: 168,\n  FULL_SCREEN: 183,\n  WINDOW_OVERVIEW: 182,\n  BRIGHTNESS_UP: 216,\n  BRIGHTNESS_DOWN: 217\n};\n\n/**\n * Identifiers for use in key actions.\n */\nhterm.Parser.identifiers.actions = {\n  /**\n   * Prevent the browser and operating system from handling the event.\n   */\n  CANCEL: hterm.Keyboard.KeyActions.CANCEL,\n\n  /**\n   * Wait for a \"keypress\" event, send the keypress charCode to the host.\n   */\n  DEFAULT: hterm.Keyboard.KeyActions.DEFAULT,\n\n  /**\n   * Let the browser or operating system handle the key.\n   */\n  PASS: hterm.Keyboard.KeyActions.PASS,\n\n  /**\n   * Scroll the terminal one line up.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollLineUp: function(terminal) {\n    terminal.scrollLineUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one line down.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollLineDown: function(terminal) {\n    terminal.scrollLineDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one page up.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollPageUp: function(terminal) {\n    terminal.scrollPageUp();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal one page down.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollPageDown: function(terminal) {\n    terminal.scrollPageDown();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal to the top.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollToTop: function(terminal) {\n    terminal.scrollHome();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Scroll the terminal to the bottom.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  scrollToBottom: function(terminal) {\n    terminal.scrollEnd();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the active screen and move the cursor to (0,0).\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearScreen: function(terminal) {\n    terminal.clearHome();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the scrollback buffer.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearScrollback: function(terminal) {\n    terminal.clearScrollback();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Clear the terminal and scrollback buffer and move the cursor to (0,0).\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  clearTerminal: function(terminal) {\n    terminal.wipeContents();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Perform a full terminal reset.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  fullReset: function(terminal) {\n    terminal.reset();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n\n  /**\n   * Perform a soft terminal reset.\n   *\n   * @param {!hterm.Terminal} terminal\n   * @return {!hterm.Keyboard.KeyActions}\n   */\n  softReset: function(terminal) {\n    terminal.softReset();\n    return hterm.Keyboard.KeyActions.CANCEL;\n  },\n};\n// SOURCE FILE: hterm/js/hterm_preference_manager.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * PreferenceManager subclass managing global NaSSH preferences.\n *\n * This is currently just an ordered list of known connection profiles.\n *\n * @param {string} profileId\n * @extends {lib.PreferenceManager}\n * @constructor\n */\nhterm.PreferenceManager = function(profileId) {\n  lib.PreferenceManager.call(this, hterm.defaultStorage,\n                             hterm.PreferenceManager.prefix_ + profileId);\n  Object.entries(hterm.PreferenceManager.defaultPreferences).forEach(\n      ([key, entry]) => {\n        this.definePreference(key, entry['default']);\n      });\n};\n\n/**\n * The storage key prefix to namespace the preferences.\n */\nhterm.PreferenceManager.prefix_ = '/hterm/profiles/';\n\n/**\n * List all the defined profiles.\n *\n * @param {function(!Array<string>)} callback Called with the list of profiles.\n */\nhterm.PreferenceManager.listProfiles = function(callback) {\n  hterm.defaultStorage.getItems(null, (items) => {\n    const profiles = {};\n    for (let key of Object.keys(items)) {\n      if (key.startsWith(hterm.PreferenceManager.prefix_)) {\n        // Turn \"/hterm/profiles/foo/bar/cow\" to \"foo/bar/cow\".\n        const subKey = key.slice(hterm.PreferenceManager.prefix_.length);\n        // Turn \"foo/bar/cow\" into \"foo\".\n        profiles[subKey.split('/', 1)[0]] = true;\n      }\n    }\n    callback(Object.keys(profiles));\n  });\n};\n\n/** @enum {string} */\nhterm.PreferenceManager.Categories = {\n  Keyboard: 'Keyboard',\n  Appearance: 'Appearance',\n  CopyPaste: 'CopyPaste',\n  Sounds: 'Sounds',\n  Scrolling: 'Scrolling',\n  Encoding: 'Encoding',\n  Extensions: 'Extensions',\n  Miscellaneous: 'Miscellaneous',\n};\n\n/**\n * List of categories, ordered by display order (top to bottom)\n */\nhterm.PreferenceManager.categoryDefinitions = [\n  { id: hterm.PreferenceManager.Categories.Appearance,\n    text: 'Appearance (fonts, colors, images)'},\n  { id: hterm.PreferenceManager.Categories.CopyPaste,\n    text: 'Copy & Paste'},\n  { id: hterm.PreferenceManager.Categories.Encoding,\n    text: 'Encoding'},\n  { id: hterm.PreferenceManager.Categories.Keyboard,\n    text: 'Keyboard'},\n  { id: hterm.PreferenceManager.Categories.Scrolling,\n    text: 'Scrolling'},\n  { id: hterm.PreferenceManager.Categories.Sounds,\n    text: 'Sounds'},\n  { id: hterm.PreferenceManager.Categories.Extensions,\n    text: 'Extensions'},\n  { id: hterm.PreferenceManager.Categories.Miscellaneous,\n    text: 'Miscellaneous'}\n];\n\n/**\n * Internal helper to create a default preference object.\n *\n * @param {string} name The user readable name/title.\n * @param {!hterm.PreferenceManager.Categories} category The pref category.\n * @param {boolean|number|string|?Object} defaultValue The default pref value.\n * @param {string|!Array<string|null>} type The type for this pref (or an array\n *     for enums).\n * @param {string} help The user readable help text.\n * @return {!Object} The default pref object.\n */\nhterm.PreferenceManager.definePref_ = function(\n    name, category, defaultValue, type, help) {\n  return {\n    'name': name,\n    'category': category,\n    'default': defaultValue,\n    'type': type,\n    'help': help,\n  };\n};\n\nhterm.PreferenceManager.defaultPreferences = {\n  'alt-gr-mode': hterm.PreferenceManager.definePref_(\n      'AltGr key mode',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, [null, 'none', 'ctrl-alt', 'left-alt', 'right-alt'],\n      `Select an AltGr detection heuristic.\\n` +\n      `\\n` +\n      `'null': Autodetect based on navigator.language:\\n` +\n      `      'en-us' => 'none', else => 'right-alt'\\n` +\n      `'none': Disable any AltGr related munging.\\n` +\n      `'ctrl-alt': Assume Ctrl+Alt means AltGr.\\n` +\n      `'left-alt': Assume left Alt means AltGr.\\n` +\n      `'right-alt': Assume right Alt means AltGr.`\n  ),\n\n  'alt-backspace-is-meta-backspace': hterm.PreferenceManager.definePref_(\n      'Alt-Backspace is Meta-Backspace',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If set, undoes the Chrome OS Alt-Backspace->DEL remap, so that ` +\n      `Alt-Backspace indeed is Alt-Backspace.`\n  ),\n\n  'alt-is-meta': hterm.PreferenceManager.definePref_(\n      'Treat Alt key as Meta key',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether the Alt key acts as a Meta key or as a distinct Alt key.`\n  ),\n\n  'alt-sends-what': hterm.PreferenceManager.definePref_(\n      'Alt key modifier handling',\n      hterm.PreferenceManager.Categories.Keyboard,\n      'escape', ['escape', '8-bit', 'browser-key'],\n      `Controls how the Alt key is handled.\\n` +\n      `\\n` +\n      `  escape: Send an ESC prefix.\\n` +\n      `  8-bit: Add 128 to the typed character as in xterm.\\n` +\n      `  browser-key: Wait for the keypress event and see what the browser\\n` +\n      `    says. (This won't work well on platforms where the browser\\n` +\n      `    performs a default action for some Alt sequences.)`\n  ),\n\n  'audible-bell-sound': hterm.PreferenceManager.definePref_(\n      'Alert bell sound (URI)',\n      hterm.PreferenceManager.Categories.Sounds,\n      'lib-resource:hterm/audio/bell', 'url',\n      `URL of the terminal bell sound. Empty string for no audible bell.`\n  ),\n\n  'desktop-notification-bell': hterm.PreferenceManager.definePref_(\n      'Create desktop notifications for alert bells',\n      hterm.PreferenceManager.Categories.Sounds,\n      false, 'bool',\n      `If true, terminal bells in the background will create a Web ` +\n      `Notification. https://www.w3.org/TR/notifications/\\n` +\n      `\\n` +\n      `Displaying notifications requires permission from the user. When this ` +\n      `option is set to true, hterm will attempt to ask the user for ` +\n      `permission if necessary. Browsers may not show this permission ` +\n      `request if it was not triggered by a user action.\\n` +\n      `\\n` +\n      `Chrome extensions with the \"notifications\" permission have permission ` +\n      `to display notifications.`\n  ),\n\n  'background-color': hterm.PreferenceManager.definePref_(\n      'Background color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgb(16, 16, 16)', 'color',\n      `The background color for text with no other color attributes.`\n  ),\n\n  'background-image': hterm.PreferenceManager.definePref_(\n      'Background image',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image. Empty string for no image.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `  url(https://goo.gl/anedTK)\\n` +\n      `  linear-gradient(top bottom, blue, red)`\n  ),\n\n  'background-size': hterm.PreferenceManager.definePref_(\n      'Background image size',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image size.`\n  ),\n\n  'background-position': hterm.PreferenceManager.definePref_(\n      'Background image position',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'string',\n      `CSS value of the background image position.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `  10% 10%\\n` +\n      `  center`\n  ),\n\n  'backspace-sends-backspace': hterm.PreferenceManager.definePref_(\n      'Backspace key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, the backspace should send BS ('\\\\x08', aka ^H). Otherwise ` +\n      `the backspace key should send '\\\\x7f'.`\n  ),\n\n  'character-map-overrides': hterm.PreferenceManager.definePref_(\n      'Character map overrides',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'value',\n      `This is specified as an object. It is a sparse array, where each ` +\n      `property is the character set code and the value is an object that is ` +\n      `a sparse array itself. In that sparse array, each property is the ` +\n      `received character and the value is the displayed character.\\n` +\n      `\\n` +\n      `For example:\\n` +\n      `  {\"0\":{\"+\":\"\\\\u2192\",\",\":\"\\\\u2190\",\"-\":\"\\\\u2191\",\".\":\"\\\\u2193\", ` +\n      `\"0\":\"\\\\u2588\"}}`\n  ),\n\n  'close-on-exit': hterm.PreferenceManager.definePref_(\n      'Close window on exit',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      true, 'bool',\n      `Whether to close the window when the command finishes executing.`\n  ),\n\n  'cursor-blink': hterm.PreferenceManager.definePref_(\n      'Cursor blink',\n      hterm.PreferenceManager.Categories.Appearance,\n      false, 'bool',\n      `Whether the text cursor blinks by default. This can be toggled at ` +\n      `runtime via terminal escape sequences.`\n  ),\n\n  'cursor-blink-cycle': hterm.PreferenceManager.definePref_(\n      'Cursor blink rate',\n      hterm.PreferenceManager.Categories.Appearance,\n      [1000, 500], 'value',\n      `The text cursor blink rate in milliseconds.\\n` +\n      `\\n` +\n      `A two element array, the first of which is how long the text cursor ` +\n      `should be on, second is how long it should be off.`\n  ),\n\n  'cursor-shape': hterm.PreferenceManager.definePref_(\n      'Text cursor shape',\n      hterm.PreferenceManager.Categories.Appearance,\n      'BLOCK', ['BLOCK', 'BEAM', 'UNDERLINE'],\n      `The shape of the visible text cursor. This can be toggled at ` +\n      `runtime via terminal escape sequences.`\n  ),\n\n  'cursor-color': hterm.PreferenceManager.definePref_(\n      'Text cursor color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgba(255, 0, 0, 0.5)', 'color',\n      `The color of the visible text cursor.`\n  ),\n\n  'color-palette-overrides': hterm.PreferenceManager.definePref_(\n      'Initial color palette',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'value',\n      `Override colors in the default palette.\\n` +\n      `\\n` +\n      `This can be specified as an array or an object. If specified as an ` +\n      `object it is assumed to be a sparse array, where each property ` +\n      `is a numeric index into the color palette.\\n` +\n      `\\n` +\n      `Values can be specified as almost any CSS color value. This ` +\n      `includes #RGB, #RRGGBB, rgb(...), rgba(...), and any color names ` +\n      `that are also part of the standard X11 rgb.txt file.\\n` +\n      `\\n` +\n      `You can use 'null' to specify that the default value should be not ` +\n      `be changed. This is useful for skipping a small number of indices ` +\n      `when the value is specified as an array.\\n` +\n      `\\n` +\n      `For example, these both set color index 1 to blue:\\n` +\n      `  {1: \"#0000ff\"}\\n` +\n      `  [null, \"#0000ff\"]`\n  ),\n\n  'copy-on-select': hterm.PreferenceManager.definePref_(\n      'Automatically copy selected content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Automatically copy mouse selection to the clipboard.`\n  ),\n\n  'use-default-window-copy': hterm.PreferenceManager.definePref_(\n      'Let the browser handle text copying',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      false, 'bool',\n      `Whether to use the default browser/OS's copy behavior.\\n` +\n      `\\n` +\n      `Allow the browser/OS to handle the copy event directly which might ` +\n      `improve compatibility with some systems (where copying doesn't work ` +\n      `at all), but makes the text selection less robust.\\n` +\n      `\\n` +\n      `For example, long lines that were automatically line wrapped will ` +\n      `be copied with the newlines still in them.`\n  ),\n\n  'clear-selection-after-copy': hterm.PreferenceManager.definePref_(\n      'Automatically clear text selection',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Whether to clear the selection after copying.`\n  ),\n\n  'ctrl-plus-minus-zero-zoom': hterm.PreferenceManager.definePref_(\n      'Ctrl-+/-/0 zoom behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `If true, Ctrl-Plus/Minus/Zero controls zoom.\\n` +\n      `If false, Ctrl-Shift-Plus/Minus/Zero controls zoom, Ctrl-Minus sends ` +\n      `^_, Ctrl-Plus/Zero do nothing.`\n  ),\n\n  'ctrl-c-copy': hterm.PreferenceManager.definePref_(\n      'Ctrl-C copy behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Ctrl-C copies if true, send ^C to host if false.\\n` +\n      `Ctrl-Shift-C sends ^C to host if true, copies if false.`\n  ),\n\n  'ctrl-v-paste': hterm.PreferenceManager.definePref_(\n      'Ctrl-V paste behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Ctrl-V pastes if true, send ^V to host if false.\\n` +\n      `Ctrl-Shift-V sends ^V to host if true, pastes if false.`\n  ),\n\n  'east-asian-ambiguous-as-two-column': hterm.PreferenceManager.definePref_(\n      'East Asian Ambiguous use two columns',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `Whether East Asian Ambiguous characters have two column width.`\n  ),\n\n  'enable-8-bit-control': hterm.PreferenceManager.definePref_(\n      'Support non-UTF-8 C1 control characters',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `True to enable 8-bit control characters, false to ignore them.\\n` +\n      `\\n` +\n      `We'll respect the two-byte versions of these control characters ` +\n      `regardless of this setting.`\n  ),\n\n  'enable-bold': hterm.PreferenceManager.definePref_(\n      'Bold text behavior',\n      hterm.PreferenceManager.Categories.Appearance,\n      null, 'tristate',\n      `If true, use bold weight font for text with the bold/bright ` +\n      `attribute. False to use the normal weight font. Null to autodetect.`\n  ),\n\n  'enable-bold-as-bright': hterm.PreferenceManager.definePref_(\n      'Use bright colors with bold text',\n      hterm.PreferenceManager.Categories.Appearance,\n      true, 'bool',\n      `If true, use bright colors (8-15 on a 16 color palette) for any text ` +\n      `with the bold attribute. False otherwise.`\n  ),\n\n  'enable-blink': hterm.PreferenceManager.definePref_(\n      'Enable blinking text',\n      hterm.PreferenceManager.Categories.Appearance,\n      true, 'bool',\n      `If true, respect the blink attribute. False to ignore it.`\n  ),\n\n  'enable-clipboard-notice': hterm.PreferenceManager.definePref_(\n      'Show notification when copying content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Whether to show a message in the terminal when the host writes to the ` +\n      `clipboard.`\n  ),\n\n  'enable-clipboard-write': hterm.PreferenceManager.definePref_(\n      'Allow remote clipboard writes',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Allow the remote host to write directly to the local system ` +\n      `clipboard.\\n` +\n      `Read access is never granted regardless of this setting.\\n` +\n      `\\n` +\n      `This is used to control access to features like OSC-52.`\n  ),\n\n  'enable-dec12': hterm.PreferenceManager.definePref_(\n      'Allow changing of text cursor blinking',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      false, 'bool',\n      `Respect the host's attempt to change the text cursor blink status ` +\n      `using DEC Private Mode 12.`\n  ),\n\n  'enable-csi-j-3': hterm.PreferenceManager.definePref_(\n      'Allow clearing of scrollback buffer (CSI-J-3)',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      true, 'bool',\n      `Whether CSI-J (Erase Display) mode 3 may clear the terminal ` +\n      `scrollback buffer.\\n` +\n      `\\n` +\n      `Enabling this by default is safe.`\n  ),\n\n  'environment': hterm.PreferenceManager.definePref_(\n      'Environment variables',\n      hterm.PreferenceManager.Categories.Miscellaneous,\n      {\n        // Signal ncurses based apps to use UTF-8 output instead of legacy\n        // drawing modes (which only work in ISO-2022 mode).  Since hterm is\n        // always UTF-8, this shouldn't cause problems.\n        'NCURSES_NO_UTF8_ACS': '1',\n        'TERM': 'xterm-256color',\n        // Set this env var that a bunch of mainstream terminal emulators set\n        // to indicate we support true colors.\n        // https://gist.github.com/XVilka/8346728\n        'COLORTERM': 'truecolor',\n      },\n      'value',\n      `The initial set of environment variables, as an object.`\n  ),\n\n  'font-family': hterm.PreferenceManager.definePref_(\n      'Text font family',\n      hterm.PreferenceManager.Categories.Appearance,\n      '\"DejaVu Sans Mono\", \"Noto Sans Mono\", \"Everson Mono\", FreeMono, ' +\n      'Menlo, Terminal, monospace',\n      'string',\n      `Default font family for the terminal text.`\n  ),\n\n  'font-size': hterm.PreferenceManager.definePref_(\n      'Text font size',\n      hterm.PreferenceManager.Categories.Appearance,\n      15, 'int',\n      `The default font size in pixels.`\n  ),\n\n  'font-smoothing': hterm.PreferenceManager.definePref_(\n      'Text font smoothing',\n      hterm.PreferenceManager.Categories.Appearance,\n      'antialiased', 'string',\n      `CSS font-smoothing property.`\n  ),\n\n  'foreground-color': hterm.PreferenceManager.definePref_(\n      'Text color',\n      hterm.PreferenceManager.Categories.Appearance,\n      'rgb(240, 240, 240)', 'color',\n      `The foreground color for text with no other color attributes.`\n  ),\n\n  'enable-resize-status': hterm.PreferenceManager.definePref_(\n      'Show terminal dimensions when resized',\n      hterm.PreferenceManager.Categories.Appearance,\n      false, 'bool',\n      `Whether to show terminal dimensions when the terminal changes size.`\n  ),\n\n  'hide-mouse-while-typing': hterm.PreferenceManager.definePref_(\n      'Hide mouse cursor while typing',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether to automatically hide the mouse cursor when typing. ` +\n      `By default, autodetect whether the platform/OS handles this.\\n` +\n      `\\n` +\n      `Note: Some operating systems may override this setting and thus you ` +\n      `might not be able to always disable it.`\n  ),\n\n  'home-keys-scroll': hterm.PreferenceManager.definePref_(\n      'Home/End key scroll behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, Home/End controls the terminal scrollbar and Shift-Home/` +\n      `Shift-End are sent to the remote host. If false, then Home/End are ` +\n      `sent to the remote host and Shift-Home/Shift-End scrolls.`\n  ),\n\n  'keybindings': hterm.PreferenceManager.definePref_(\n      'Keyboard bindings/shortcuts',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'value',\n      `A map of key sequence to key actions. Key sequences include zero or ` +\n      `more modifier keys followed by a key code. Key codes can be decimal ` +\n      `or hexadecimal numbers, or a key identifier. Key actions can be ` +\n      `specified as a string to send to the host, or an action identifier. ` +\n      `For a full explanation of the format, see https://goo.gl/LWRndr.\\n` +\n      `\\n` +\n      `Sample keybindings:\\n` +\n      `{\\n` +\n      `  \"Ctrl-Alt-K\": \"clearTerminal\",\\n` +\n      `  \"Ctrl-Shift-L\": \"PASS\",\\n` +\n      `  \"Ctrl-H\": \"'Hello World'\"\\n` +\n      `}`\n  ),\n\n  'media-keys-are-fkeys': hterm.PreferenceManager.definePref_(\n      'Media keys are Fkeys',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, convert media keys to their Fkey equivalent. If false, let ` +\n      `the browser handle the keys.`\n  ),\n\n  'meta-sends-escape': hterm.PreferenceManager.definePref_(\n      'Meta key modifier handling',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Send an ESC prefix when pressing a key while holding the Meta key.\\n` +\n      `\\n` +\n      `For example, when enabled, pressing Meta-K will send ^[k as if you ` +\n      `typed Escape then k. When disabled, only k will be sent.`\n  ),\n\n  'mouse-right-click-paste': hterm.PreferenceManager.definePref_(\n      'Mouse right clicks paste content',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `Paste on right mouse button clicks.\\n` +\n      `\\n` +\n      `This option is independent of the \"mouse-paste-button\" setting.\\n` +\n      `\\n` +\n      `Note: This will handle left & right handed mice correctly.`\n  ),\n\n  'mouse-paste-button': hterm.PreferenceManager.definePref_(\n      'Mouse button paste',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      null, [null, 0, 1, 2, 3, 4, 5, 6],\n      `Mouse paste button, or null to autodetect.\\n` +\n      `\\n` +\n      `For autodetect, we'll use the middle mouse button for non-X11 ` +\n      `platforms (including Chrome OS). On X11, we'll use the right mouse ` +\n      `button (since the native window manager should paste via the middle ` +\n      `mouse button).\\n` +\n      `\\n` +\n      `0 == left (primary) button.\\n` +\n      `1 == middle (auxiliary) button.\\n` +\n      `2 == right (secondary) button.\\n` +\n      `\\n` +\n      `This option is independent of the setting for right-click paste.\\n` +\n      `\\n` +\n      `Note: This will handle left & right handed mice correctly.`\n  ),\n\n  'word-break-match-left': hterm.PreferenceManager.definePref_(\n      'Automatic selection halting (to the left)',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      '[^\\\\s\\\\[\\\\](){}<>\"\\'\\\\^!@#$%&*,;:`]', 'string',\n      `Regular expression to halt matching to the left (start) of a ` +\n      `selection.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.\\n` +\n      `We allow \"~\" and \".\" by default as paths frequently start with those.`\n  ),\n\n  'word-break-match-right': hterm.PreferenceManager.definePref_(\n      'Automatic selection halting (to the right)',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      '[^\\\\s\\\\[\\\\](){}<>\"\\'\\\\^!@#$%&*,;:~.`]', 'string',\n      `Regular expression to halt matching to the right (end) of a ` +\n      `selection.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.`\n  ),\n\n  'word-break-match-middle': hterm.PreferenceManager.definePref_(\n      'Word break characters',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      '[^\\\\s\\\\[\\\\](){}<>\"\\'\\\\^]*', 'string',\n      `Regular expression to match all the characters in the middle.\\n` +\n      `\\n` +\n      `Normally this is a character class to reject specific characters.\\n` +\n      `\\n` +\n      `Used to expand the selection surrounding the starting point.`\n  ),\n\n  'page-keys-scroll': hterm.PreferenceManager.definePref_(\n      'Page Up/Down key scroll behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      false, 'bool',\n      `If true, Page Up/Page Down controls the terminal scrollbar and ` +\n      `Shift-Page Up/Shift-Page Down are sent to the remote host. If false, ` +\n      `then Page Up/Page Down are sent to the remote host and Shift-Page Up/` +\n      `Shift-Page Down scrolls.`\n  ),\n\n  'pass-alt-number': hterm.PreferenceManager.definePref_(\n      'Pass Alt-1..9 key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Alt-1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab\" keyboard accelerators. When not running ` +\n      `in a tab it's better to send these keys to the host so they can be ` +\n      `used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Alt-1..9 will be handled by the browser. If false, Alt-1..9 ` +\n      `will be sent to the host. If null, autodetect based on browser ` +\n      `platform and window type.`\n  ),\n\n  'pass-ctrl-number': hterm.PreferenceManager.definePref_(\n      'Pass Ctrl-1..9 key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Ctrl-1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab\" keyboard accelerators. When not running ` +\n      `in a tab it's better to send these keys to the host so they can be ` +\n      `used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Ctrl-1..9 will be handled by the browser. If false, ` +\n      `Ctrl-1..9 will be sent to the host. If null, autodetect based on ` +\n      `browser platform and window type.`\n  ),\n\n  'pass-meta-number': hterm.PreferenceManager.definePref_(\n      'Pass Meta-1..9 key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      null, 'tristate',\n      `Whether Meta-1..9 is passed to the browser.\\n` +\n      `\\n` +\n      `This is handy when running hterm in a browser tab, so that you don't ` +\n      `lose Chrome's \"switch to tab\" keyboard accelerators. When not running ` +\n      `in a tab it's better to send these keys to the host so they can be ` +\n      `used in vim or emacs.\\n` +\n      `\\n` +\n      `If true, Meta-1..9 will be handled by the browser. If false, ` +\n      `Meta-1..9 will be sent to the host. If null, autodetect based on ` +\n      `browser platform and window type.`\n  ),\n\n  'pass-meta-v': hterm.PreferenceManager.definePref_(\n      'Pass Meta-V key behavior',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Whether Meta-V gets passed to host.`\n  ),\n\n  'paste-on-drop': hterm.PreferenceManager.definePref_(\n      'Allow drag & drop to paste',\n      hterm.PreferenceManager.Categories.CopyPaste,\n      true, 'bool',\n      `If true, Drag and dropped text will paste into terminal.\\n` +\n      `If false, dropped text will be ignored.`\n  ),\n\n  'receive-encoding': hterm.PreferenceManager.definePref_(\n      'Receive encoding',\n      hterm.PreferenceManager.Categories.Encoding,\n      'utf-8', ['utf-8', 'raw'],\n      `Set the expected encoding for data received from the host.\\n` +\n      `If the encodings do not match, visual bugs are likely to be ` +\n      `observed.\\n` +\n      `\\n` +\n      `Valid values are 'utf-8' and 'raw'.`\n  ),\n\n  'scroll-on-keystroke': hterm.PreferenceManager.definePref_(\n      'Scroll to bottom after keystroke',\n      hterm.PreferenceManager.Categories.Scrolling,\n      true, 'bool',\n      `Whether to scroll to the bottom on any keystroke.`\n  ),\n\n  'scroll-on-output': hterm.PreferenceManager.definePref_(\n      'Scroll to bottom after new output',\n      hterm.PreferenceManager.Categories.Scrolling,\n      false, 'bool',\n      `Whether to scroll to the bottom on terminal output.`\n  ),\n\n  'scrollbar-visible': hterm.PreferenceManager.definePref_(\n      'Scrollbar visibility',\n      hterm.PreferenceManager.Categories.Scrolling,\n      true, 'bool',\n      `The vertical scrollbar mode.`\n  ),\n\n  'scroll-wheel-may-send-arrow-keys': hterm.PreferenceManager.definePref_(\n      'Emulate arrow keys with scroll wheel',\n      hterm.PreferenceManager.Categories.Scrolling,\n      false, 'bool',\n      `When using the alternative screen buffer, and DECCKM (Application ` +\n      `Cursor Keys) is active, mouse wheel scroll events will emulate arrow ` +\n      `keys.\\n` +\n      `\\n` +\n      `It can be temporarily disabled by holding the Shift key.\\n` +\n      `\\n` +\n      `This frequently comes up when using pagers (less) or reading man ` +\n      `pages or text editors (vi/nano) or using screen/tmux.`\n  ),\n\n  'scroll-wheel-move-multiplier': hterm.PreferenceManager.definePref_(\n      'Mouse scroll wheel multiplier',\n      hterm.PreferenceManager.Categories.Scrolling,\n      1, 'int',\n      `The multiplier for scroll wheel events when measured in pixels.\\n` +\n      `\\n` +\n      `Alters how fast the page scrolls.`\n  ),\n\n  'terminal-encoding': hterm.PreferenceManager.definePref_(\n      'Terminal encoding',\n      hterm.PreferenceManager.Categories.Encoding,\n      'utf-8', ['iso-2022', 'utf-8', 'utf-8-locked'],\n      `The default terminal encoding (DOCS).\\n` +\n      `\\n` +\n      `ISO-2022 enables character map translations (like graphics maps).\\n` +\n      `UTF-8 disables support for those.\\n` +\n      `\\n` +\n      `The locked variant means the encoding cannot be changed at runtime ` +\n      `via terminal escape sequences.\\n` +\n      `\\n` +\n      `You should stick with UTF-8 unless you notice broken rendering with ` +\n      `legacy applications.`\n  ),\n\n  'shift-insert-paste': hterm.PreferenceManager.definePref_(\n      'Shift-Insert paste',\n      hterm.PreferenceManager.Categories.Keyboard,\n      true, 'bool',\n      `Whether Shift-Insert is used for pasting or is sent to the remote host.`\n  ),\n\n  'user-css': hterm.PreferenceManager.definePref_(\n      'Custom CSS (URI)',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'url',\n      `URL of user stylesheet to include in the terminal document.`\n  ),\n\n  'user-css-text': hterm.PreferenceManager.definePref_(\n      'Custom CSS (inline text)',\n      hterm.PreferenceManager.Categories.Appearance,\n      '', 'multiline-string',\n      `Custom CSS text for styling the terminal.`\n  ),\n\n  'allow-images-inline': hterm.PreferenceManager.definePref_(\n      'Allow inline image display',\n      hterm.PreferenceManager.Categories.Extensions,\n      null, 'tristate',\n      `Whether to allow the remote host to display images in the terminal.\\n` +\n      `\\n` +\n      `By default, we prompt until a choice is made.`\n  ),\n};\n\nhterm.PreferenceManager.prototype =\n    Object.create(lib.PreferenceManager.prototype);\n/** @override */\nhterm.PreferenceManager.constructor = hterm.PreferenceManager;\n// SOURCE FILE: hterm/js/hterm_pubsub.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Utility class used to add publish/subscribe/unsubscribe functionality to\n * an existing object.\n *\n * @constructor\n */\nhterm.PubSub = function() {\n  this.observers_ = {};\n};\n\n/**\n * Add publish, subscribe, and unsubscribe methods to an existing object.\n *\n * No other properties of the object are touched, so there is no need to\n * worry about clashing private properties.\n *\n * @param {!Object} obj The object to add this behavior to.\n */\nhterm.PubSub.addBehavior = function(obj) {\n  var pubsub = new hterm.PubSub();\n  for (var m in hterm.PubSub.prototype) {\n    obj[m] = hterm.PubSub.prototype[m].bind(pubsub);\n  }\n};\n\n/**\n * Subscribe to be notified of messages about a subject.\n *\n * @param {string} subject The subject to subscribe to.\n * @param {function(...)} callback The function to invoke for notifications.\n */\nhterm.PubSub.prototype.subscribe = function(subject, callback) {\n  if (!(subject in this.observers_))\n    this.observers_[subject] = [];\n\n  this.observers_[subject].push(callback);\n};\n\n/**\n * Unsubscribe from a subject.\n *\n * @param {string} subject The subject to unsubscribe from.\n * @param {function(...)} callback A callback previously registered via\n *     subscribe().\n */\nhterm.PubSub.prototype.unsubscribe = function(subject, callback) {\n  var list = this.observers_[subject];\n  if (!list)\n    throw 'Invalid subject: ' + subject;\n\n  var i = list.indexOf(callback);\n  if (i < 0)\n    throw 'Not subscribed: ' + subject;\n\n  list.splice(i, 1);\n};\n\n/**\n * Publish a message about a subject.\n *\n * Subscribers (and the optional final callback) are invoked asynchronously.\n * This method will return before anyone is actually notified.\n *\n * @param {string} subject The subject to publish about.\n * @param {?Object=} e An arbitrary object associated with this notification.\n * @param {function(!Object)=} opt_lastCallback An optional function to call\n *     after all subscribers have been notified.\n */\nhterm.PubSub.prototype.publish = function(subject, e, opt_lastCallback) {\n  function notifyList(i) {\n    // Set this timeout before invoking the callback, so we don't have to\n    // concern ourselves with exceptions.\n    if (i < list.length - 1)\n      setTimeout(notifyList, 0, i + 1);\n\n    list[i](e);\n  }\n\n  var list = this.observers_[subject];\n  if (list) {\n    // Copy the list, in case it changes while we're notifying.\n    list = [].concat(list);\n  }\n\n  if (opt_lastCallback) {\n    if (list) {\n      list.push(opt_lastCallback);\n    } else {\n      list = [opt_lastCallback];\n    }\n  }\n\n  if (list)\n    setTimeout(notifyList, 0, 0);\n};\n// SOURCE FILE: hterm/js/hterm_screen.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @fileoverview This class represents a single terminal screen full of text.\n *\n * It maintains the current cursor position and has basic methods for text\n * insert and overwrite, and adding or removing rows from the screen.\n *\n * This class has no knowledge of the scrollback buffer.\n *\n * The number of rows on the screen is determined only by the number of rows\n * that the caller inserts into the screen.  If a caller wants to ensure a\n * constant number of rows on the screen, it's their responsibility to remove a\n * row for each row inserted.\n *\n * The screen width, in contrast, is enforced locally.\n *\n *\n * In practice...\n * - The hterm.Terminal class holds two hterm.Screen instances.  One for the\n * primary screen and one for the alternate screen.\n *\n * - The html.Screen class only cares that rows are HTML Elements.  In the\n * larger context of hterm, however, the rows happen to be displayed by an\n * hterm.ScrollPort and have to follow a few rules as a result.  Each\n * row must be rooted by the custom HTML tag 'x-row', and each must have a\n * rowIndex property that corresponds to the index of the row in the context\n * of the scrollback buffer.  These invariants are enforced by hterm.Terminal\n * because that is the class using the hterm.Screen in the context of an\n * hterm.ScrollPort.\n */\n\n/**\n * Create a new screen instance.\n *\n * The screen initially has no rows and a maximum column count of 0.\n *\n * @param {number=} columnCount The maximum number of columns for this\n *    screen.  See insertString() and overwriteString() for information about\n *    what happens when too many characters are added too a row.  Defaults to\n *    0 if not provided.\n * @constructor\n */\nhterm.Screen = function(columnCount=0) {\n  /**\n   * Public, read-only access to the rows in this screen.\n   *\n   * @type {!Array<!Element>}\n   */\n  this.rowsArray = [];\n\n  // The max column width for this screen.\n  this.columnCount_ = columnCount;\n\n  // The current color, bold, underline and blink attributes.\n  this.textAttributes = new hterm.TextAttributes(window.document);\n\n  // Current zero-based cursor coordinates.\n  this.cursorPosition = new hterm.RowCol(0, 0);\n\n  // Saved state used by DECSC and related settings.  This is only for saving\n  // and restoring specific state, not for the current/active state.\n  this.cursorState_ = new hterm.Screen.CursorState(this);\n\n  // The node containing the row that the cursor is positioned on.\n  this.cursorRowNode_ = null;\n\n  // The node containing the span of text that the cursor is positioned on.\n  this.cursorNode_ = null;\n\n  // The offset in column width into cursorNode_ where the cursor is positioned.\n  this.cursorOffset_ = 0;\n\n  // Regexes for expanding word selections.\n  /** @type {?string} */\n  this.wordBreakMatchLeft = null;\n  /** @type {?string} */\n  this.wordBreakMatchRight = null;\n  /** @type {?string} */\n  this.wordBreakMatchMiddle = null;\n};\n\n/**\n * Return the screen size as an hterm.Size object.\n *\n * @return {!hterm.Size} hterm.Size object representing the current number\n *     of rows and columns in this screen.\n */\nhterm.Screen.prototype.getSize = function() {\n  return new hterm.Size(this.columnCount_, this.rowsArray.length);\n};\n\n/**\n * Return the current number of rows in this screen.\n *\n * @return {number} The number of rows in this screen.\n */\nhterm.Screen.prototype.getHeight = function() {\n  return this.rowsArray.length;\n};\n\n/**\n * Return the current number of columns in this screen.\n *\n * @return {number} The number of columns in this screen.\n */\nhterm.Screen.prototype.getWidth = function() {\n  return this.columnCount_;\n};\n\n/**\n * Set the maximum number of columns per row.\n *\n * @param {number} count The maximum number of columns per row.\n */\nhterm.Screen.prototype.setColumnCount = function(count) {\n  this.columnCount_ = count;\n\n  if (this.cursorPosition.column >= count)\n    this.setCursorPosition(this.cursorPosition.row, count - 1);\n};\n\n/**\n * Remove the first row from the screen and return it.\n *\n * @return {!Element} The first row in this screen.\n */\nhterm.Screen.prototype.shiftRow = function() {\n  return this.shiftRows(1)[0];\n};\n\n/**\n * Remove rows from the top of the screen and return them as an array.\n *\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.shiftRows = function(count) {\n  return this.rowsArray.splice(0, count);\n};\n\n/**\n * Insert a row at the top of the screen.\n *\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.unshiftRow = function(row) {\n  this.rowsArray.splice(0, 0, row);\n};\n\n/**\n * Insert rows at the top of the screen.\n *\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.unshiftRows = function(rows) {\n  this.rowsArray.unshift.apply(this.rowsArray, rows);\n};\n\n/**\n * Remove the last row from the screen and return it.\n *\n * @return {!Element} The last row in this screen.\n */\nhterm.Screen.prototype.popRow = function() {\n  return this.popRows(1)[0];\n};\n\n/**\n * Remove rows from the bottom of the screen and return them as an array.\n *\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.popRows = function(count) {\n  return this.rowsArray.splice(this.rowsArray.length - count, count);\n};\n\n/**\n * Insert a row at the bottom of the screen.\n *\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.pushRow = function(row) {\n  this.rowsArray.push(row);\n};\n\n/**\n * Insert rows at the bottom of the screen.\n *\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.pushRows = function(rows) {\n  rows.push.apply(this.rowsArray, rows);\n};\n\n/**\n * Insert a row at the specified row of the screen.\n *\n * @param {number} index The index to insert the row.\n * @param {!Element} row The row to insert.\n */\nhterm.Screen.prototype.insertRow = function(index, row) {\n  this.rowsArray.splice(index, 0, row);\n};\n\n/**\n * Insert rows at the specified row of the screen.\n *\n * @param {number} index The index to insert the rows.\n * @param {!Array<!Element>} rows The rows to insert.\n */\nhterm.Screen.prototype.insertRows = function(index, rows) {\n  for (var i = 0; i < rows.length; i++) {\n    this.rowsArray.splice(index + i, 0, rows[i]);\n  }\n};\n\n/**\n * Remove a row from the screen and return it.\n *\n * @param {number} index The index of the row to remove.\n * @return {!Element} The selected row.\n */\nhterm.Screen.prototype.removeRow = function(index) {\n  return this.rowsArray.splice(index, 1)[0];\n};\n\n/**\n * Remove rows from the bottom of the screen and return them as an array.\n *\n * @param {number} index The index to start removing rows.\n * @param {number} count The number of rows to remove.\n * @return {!Array<!Element>} The selected rows.\n */\nhterm.Screen.prototype.removeRows = function(index, count) {\n  return this.rowsArray.splice(index, count);\n};\n\n/**\n * Invalidate the current cursor position.\n *\n * This sets this.cursorPosition to (0, 0) and clears out some internal\n * data.\n *\n * Attempting to insert or overwrite text while the cursor position is invalid\n * will raise an obscure exception.\n */\nhterm.Screen.prototype.invalidateCursorPosition = function() {\n  this.cursorPosition.move(0, 0);\n  this.cursorRowNode_ = null;\n  this.cursorNode_ = null;\n  this.cursorOffset_ = 0;\n};\n\n/**\n * Clear the contents of the cursor row.\n */\nhterm.Screen.prototype.clearCursorRow = function() {\n  this.cursorRowNode_.innerHTML = '';\n  this.cursorRowNode_.removeAttribute('line-overflow');\n  this.cursorOffset_ = 0;\n  this.cursorPosition.column = 0;\n  this.cursorPosition.overflow = false;\n\n  var text;\n  if (this.textAttributes.isDefault()) {\n    text = '';\n  } else {\n    text = ' '.repeat(this.columnCount_);\n  }\n\n  // We shouldn't honor inverse colors when clearing an area, to match\n  // xterm's back color erase behavior.\n  var inverse = this.textAttributes.inverse;\n  this.textAttributes.inverse = false;\n  this.textAttributes.syncColors();\n\n  var node = this.textAttributes.createContainer(text);\n  this.cursorRowNode_.appendChild(node);\n  this.cursorNode_ = node;\n\n  this.textAttributes.inverse = inverse;\n  this.textAttributes.syncColors();\n};\n\n/**\n * Mark the current row as having overflowed to the next line.\n *\n * The line overflow state is used when converting a range of rows into text.\n * It makes it possible to recombine two or more overflow terminal rows into\n * a single line.\n *\n * This is distinct from the cursor being in the overflow state.  Cursor\n * overflow indicates that printing at the cursor position will commit a\n * line overflow, unless it is preceded by a repositioning of the cursor\n * to a non-overflow state.\n */\nhterm.Screen.prototype.commitLineOverflow = function() {\n  this.cursorRowNode_.setAttribute('line-overflow', true);\n};\n\n/**\n * Relocate the cursor to a give row and column.\n *\n * @param {number} row The zero based row.\n * @param {number} column The zero based column.\n */\nhterm.Screen.prototype.setCursorPosition = function(row, column) {\n  if (!this.rowsArray.length) {\n    console.warn('Attempt to set cursor position on empty screen.');\n    return;\n  }\n\n  if (row >= this.rowsArray.length) {\n    console.error('Row out of bounds: ' + row);\n    row = this.rowsArray.length - 1;\n  } else if (row < 0) {\n    console.error('Row out of bounds: ' + row);\n    row = 0;\n  }\n\n  if (column >= this.columnCount_) {\n    console.error('Column out of bounds: ' + column);\n    column = this.columnCount_ - 1;\n  } else if (column < 0) {\n    console.error('Column out of bounds: ' + column);\n    column = 0;\n  }\n\n  this.cursorPosition.overflow = false;\n\n  var rowNode = this.rowsArray[row];\n  var node = rowNode.firstChild;\n\n  if (!node) {\n    node = rowNode.ownerDocument.createTextNode('');\n    rowNode.appendChild(node);\n  }\n\n  var currentColumn = 0;\n\n  if (rowNode == this.cursorRowNode_) {\n    if (column >= this.cursorPosition.column - this.cursorOffset_) {\n      node = this.cursorNode_;\n      currentColumn = this.cursorPosition.column - this.cursorOffset_;\n    }\n  } else {\n    this.cursorRowNode_ = rowNode;\n  }\n\n  this.cursorPosition.move(row, column);\n\n  while (node) {\n    var offset = column - currentColumn;\n    var width = hterm.TextAttributes.nodeWidth(node);\n    if (!node.nextSibling || width > offset) {\n      this.cursorNode_ = node;\n      this.cursorOffset_ = offset;\n      return;\n    }\n\n    currentColumn += width;\n    node = node.nextSibling;\n  }\n};\n\n/**\n * Set the provided selection object to be a caret selection at the current\n * cursor position.\n *\n * @param {!Selection} selection\n */\nhterm.Screen.prototype.syncSelectionCaret = function(selection) {\n  try {\n    selection.collapse(this.cursorNode_, this.cursorOffset_);\n  } catch (firefoxIgnoredException) {\n    // FF can throw an exception if the range is off, rather than just not\n    // performing the collapse.\n  }\n};\n\n/**\n * Split a single node into two nodes at the given offset.\n *\n * For example:\n * Given the DOM fragment '<div><span>Hello World</span></div>', call splitNode_\n * passing the span and an offset of 6.  This would modify the fragment to\n * become: '<div><span>Hello </span><span>World</span></div>'.  If the span\n * had any attributes they would have been copied to the new span as well.\n *\n * The to-be-split node must have a container, so that the new node can be\n * placed next to it.\n *\n * @param {!Node} node The node to split.\n * @param {number} offset The offset into the node where the split should\n *     occur.\n */\nhterm.Screen.prototype.splitNode_ = function(node, offset) {\n  var afterNode = node.cloneNode(false);\n\n  var textContent = node.textContent;\n  node.textContent = hterm.TextAttributes.nodeSubstr(node, 0, offset);\n  afterNode.textContent = lib.wc.substr(textContent, offset);\n\n  if (afterNode.textContent)\n    node.parentNode.insertBefore(afterNode, node.nextSibling);\n  if (!node.textContent)\n    node.parentNode.removeChild(node);\n};\n\n/**\n * Ensure that text is clipped and the cursor is clamped to the column count.\n */\nhterm.Screen.prototype.maybeClipCurrentRow = function() {\n  var width = hterm.TextAttributes.nodeWidth(lib.notNull(this.cursorRowNode_));\n\n  if (width <= this.columnCount_) {\n    // Current row does not need clipping, but may need clamping.\n    if (this.cursorPosition.column >= this.columnCount_) {\n      this.setCursorPosition(this.cursorPosition.row, this.columnCount_ - 1);\n      this.cursorPosition.overflow = true;\n    }\n\n    return;\n  }\n\n  // Save off the current column so we can maybe restore it later.\n  var currentColumn = this.cursorPosition.column;\n\n  // Move the cursor to the final column.\n  this.setCursorPosition(this.cursorPosition.row, this.columnCount_ - 1);\n\n  // Remove any text that partially overflows.\n  width = hterm.TextAttributes.nodeWidth(lib.notNull(this.cursorNode_));\n\n  if (this.cursorOffset_ < width - 1) {\n    this.cursorNode_.textContent = hterm.TextAttributes.nodeSubstr(\n        this.cursorNode_, 0, this.cursorOffset_ + 1);\n  }\n\n  // Remove all nodes after the cursor.\n  var rowNode = this.cursorRowNode_;\n  var node = this.cursorNode_.nextSibling;\n\n  while (node) {\n    rowNode.removeChild(node);\n    node = this.cursorNode_.nextSibling;\n  }\n\n  if (currentColumn < this.columnCount_) {\n    // If the cursor was within the screen before we started then restore its\n    // position.\n    this.setCursorPosition(this.cursorPosition.row, currentColumn);\n  } else {\n    // Otherwise leave it at the the last column in the overflow state.\n    this.cursorPosition.overflow = true;\n  }\n};\n\n/**\n * Insert a string at the current character position using the current\n * text attributes.\n *\n * You must call maybeClipCurrentRow() after in order to clip overflowed\n * text and clamp the cursor.\n *\n * It is also up to the caller to properly maintain the line overflow state\n * using hterm.Screen..commitLineOverflow().\n *\n * @param {string} str The string to insert.\n * @param {number=} wcwidth The cached lib.wc.strWidth value for |str|.  Will be\n *     calculated on demand if need be.  Passing in a cached value helps speed\n *     up processing as this is a hot codepath.\n */\nhterm.Screen.prototype.insertString = function(str, wcwidth=undefined) {\n  var cursorNode = this.cursorNode_;\n  var cursorNodeText = cursorNode.textContent;\n\n  this.cursorRowNode_.removeAttribute('line-overflow');\n\n  // We may alter the width of the string by prepending some missing\n  // whitespaces, so we need to record the string width ahead of time.\n  if (wcwidth === undefined)\n    wcwidth = lib.wc.strWidth(str);\n\n  // No matter what, before this function exits the cursor column will have\n  // moved this much.\n  this.cursorPosition.column += wcwidth;\n\n  // Local cache of the cursor offset.\n  var offset = this.cursorOffset_;\n\n  // Reverse offset is the offset measured from the end of the string.\n  // Zero implies that the cursor is at the end of the cursor node.\n  var reverseOffset = hterm.TextAttributes.nodeWidth(cursorNode) - offset;\n\n  if (reverseOffset < 0) {\n    // A negative reverse offset means the cursor is positioned past the end\n    // of the characters on this line.  We'll need to insert the missing\n    // whitespace.\n    const ws = ' '.repeat(-reverseOffset);\n\n    // This whitespace should be completely unstyled.  Underline, background\n    // color, and strikethrough would be visible on whitespace, so we can't use\n    // one of those spans to hold the text.\n    if (!(this.textAttributes.underline ||\n          this.textAttributes.strikethrough ||\n          this.textAttributes.background ||\n          this.textAttributes.wcNode ||\n          !this.textAttributes.asciiNode ||\n          this.textAttributes.tileData != null)) {\n      // Best case scenario, we can just pretend the spaces were part of the\n      // original string.\n      str = ws + str;\n    } else if (cursorNode.nodeType == Node.TEXT_NODE ||\n               !(cursorNode.wcNode ||\n                 !cursorNode.asciiNode ||\n                 cursorNode.tileNode ||\n                 cursorNode.style.textDecoration ||\n                 cursorNode.style.textDecorationStyle ||\n                 cursorNode.style.textDecorationLine ||\n                 cursorNode.style.backgroundColor)) {\n      // Second best case, the current node is able to hold the whitespace.\n      cursorNode.textContent = (cursorNodeText += ws);\n    } else {\n      // Worst case, we have to create a new node to hold the whitespace.\n      var wsNode = cursorNode.ownerDocument.createTextNode(ws);\n      this.cursorRowNode_.insertBefore(wsNode, cursorNode.nextSibling);\n      this.cursorNode_ = cursorNode = wsNode;\n      this.cursorOffset_ = offset = -reverseOffset;\n      cursorNodeText = ws;\n    }\n\n    // We now know for sure that we're at the last character of the cursor node.\n    reverseOffset = 0;\n  }\n\n  if (this.textAttributes.matchesContainer(cursorNode)) {\n    // The new text can be placed directly in the cursor node.\n    if (reverseOffset == 0) {\n      cursorNode.textContent = cursorNodeText + str;\n    } else if (offset == 0) {\n      cursorNode.textContent = str + cursorNodeText;\n    } else {\n      cursorNode.textContent =\n          hterm.TextAttributes.nodeSubstr(cursorNode, 0, offset) +\n          str + hterm.TextAttributes.nodeSubstr(cursorNode, offset);\n    }\n\n    this.cursorOffset_ += wcwidth;\n    return;\n  }\n\n  // The cursor node is the wrong style for the new text.  If we're at the\n  // beginning or end of the cursor node, then the adjacent node is also a\n  // potential candidate.\n\n  if (offset == 0) {\n    // At the beginning of the cursor node, the check the previous sibling.\n    var previousSibling = cursorNode.previousSibling;\n    if (previousSibling &&\n        this.textAttributes.matchesContainer(previousSibling)) {\n      previousSibling.textContent += str;\n      this.cursorNode_ = previousSibling;\n      this.cursorOffset_ = lib.wc.strWidth(previousSibling.textContent);\n      return;\n    }\n\n    var newNode = this.textAttributes.createContainer(str);\n    this.cursorRowNode_.insertBefore(newNode, cursorNode);\n    this.cursorNode_ = newNode;\n    this.cursorOffset_ = wcwidth;\n    return;\n  }\n\n  if (reverseOffset == 0) {\n    // At the end of the cursor node, the check the next sibling.\n    var nextSibling = cursorNode.nextSibling;\n    if (nextSibling &&\n        this.textAttributes.matchesContainer(nextSibling)) {\n      nextSibling.textContent = str + nextSibling.textContent;\n      this.cursorNode_ = nextSibling;\n      this.cursorOffset_ = lib.wc.strWidth(str);\n      return;\n    }\n\n    var newNode = this.textAttributes.createContainer(str);\n    this.cursorRowNode_.insertBefore(newNode, nextSibling);\n    this.cursorNode_ = newNode;\n    // We specifically need to include any missing whitespace here, since it's\n    // going in a new node.\n    this.cursorOffset_ = hterm.TextAttributes.nodeWidth(newNode);\n    return;\n  }\n\n  // Worst case, we're somewhere in the middle of the cursor node.  We'll\n  // have to split it into two nodes and insert our new container in between.\n  this.splitNode_(cursorNode, offset);\n  var newNode = this.textAttributes.createContainer(str);\n  this.cursorRowNode_.insertBefore(newNode, cursorNode.nextSibling);\n  this.cursorNode_ = newNode;\n  this.cursorOffset_ = wcwidth;\n};\n\n/**\n * Overwrite the text at the current cursor position.\n *\n * You must call maybeClipCurrentRow() after in order to clip overflowed\n * text and clamp the cursor.\n *\n * It is also up to the caller to properly maintain the line overflow state\n * using hterm.Screen..commitLineOverflow().\n *\n * @param {string} str The source string for overwriting existing content.\n * @param {number=} wcwidth The cached lib.wc.strWidth value for |str|.  Will be\n *     calculated on demand if need be.  Passing in a cached value helps speed\n *     up processing as this is a hot codepath.\n */\nhterm.Screen.prototype.overwriteString = function(str, wcwidth=undefined) {\n  var maxLength = this.columnCount_ - this.cursorPosition.column;\n  if (!maxLength)\n    return;\n\n  if (wcwidth === undefined)\n    wcwidth = lib.wc.strWidth(str);\n\n  if (this.textAttributes.matchesContainer(lib.notNull(this.cursorNode_)) &&\n      this.cursorNode_.textContent.substr(this.cursorOffset_) ==\n          str) {\n    // This overwrite would be a no-op, just move the cursor and return.\n    this.cursorOffset_ += wcwidth;\n    this.cursorPosition.column += wcwidth;\n    return;\n  }\n\n  this.deleteChars(Math.min(wcwidth, maxLength));\n  this.insertString(str, wcwidth);\n};\n\n/**\n * Forward-delete one or more characters at the current cursor position.\n *\n * Text to the right of the deleted characters is shifted left.  Only affects\n * characters on the same row as the cursor.\n *\n * @param {number} count The column width of characters to delete.  This is\n *     clamped to the column width minus the cursor column.\n * @return {number} The column width of the characters actually deleted.\n */\nhterm.Screen.prototype.deleteChars = function(count) {\n  var node = this.cursorNode_;\n  var offset = this.cursorOffset_;\n\n  var currentCursorColumn = this.cursorPosition.column;\n  count = Math.min(count, this.columnCount_ - currentCursorColumn);\n  if (!count)\n    return 0;\n\n  var rv = count;\n  var startLength, endLength;\n\n  while (node && count) {\n    // Sanity check so we don't loop forever, but we don't also go quietly.\n    if (count < 0) {\n      console.error(`Deleting ${rv} chars went negative: ${count}`);\n      break;\n    }\n\n    startLength = hterm.TextAttributes.nodeWidth(node);\n    node.textContent = hterm.TextAttributes.nodeSubstr(node, 0, offset) +\n        hterm.TextAttributes.nodeSubstr(node, offset + count);\n    endLength = hterm.TextAttributes.nodeWidth(node);\n\n    // Deal with splitting wide characters.  There are two ways: we could delete\n    // the first column or the second column.  In both cases, we delete the wide\n    // character and replace one of the columns with a space (since the other\n    // was deleted).  If there are more chars to delete, the next loop will pick\n    // up the slack.\n    if (node.wcNode && offset < startLength &&\n        ((endLength && startLength == endLength) ||\n         (!endLength && offset == 1))) {\n      // No characters were deleted when there should be.  We're probably trying\n      // to delete one column width from a wide character node.  We remove the\n      // wide character node here and replace it with a single space.\n      var spaceNode = this.textAttributes.createContainer(' ');\n      node.parentNode.insertBefore(spaceNode, offset ? node : node.nextSibling);\n      node.textContent = '';\n      endLength = 0;\n      count -= 1;\n    } else\n      count -= startLength - endLength;\n\n    var nextNode = node.nextSibling;\n    if (endLength == 0 && node != this.cursorNode_) {\n      node.parentNode.removeChild(node);\n    }\n    node = nextNode;\n    offset = 0;\n  }\n\n  // Remove this.cursorNode_ if it is an empty non-text node.\n  if (this.cursorNode_.nodeType != Node.TEXT_NODE &&\n      !this.cursorNode_.textContent) {\n    var cursorNode = this.cursorNode_;\n    if (cursorNode.previousSibling) {\n      this.cursorNode_ = cursorNode.previousSibling;\n      this.cursorOffset_ = hterm.TextAttributes.nodeWidth(\n          cursorNode.previousSibling);\n    } else if (cursorNode.nextSibling) {\n      this.cursorNode_ = cursorNode.nextSibling;\n      this.cursorOffset_ = 0;\n    } else {\n      var emptyNode = this.cursorRowNode_.ownerDocument.createTextNode('');\n      this.cursorRowNode_.appendChild(emptyNode);\n      this.cursorNode_ = emptyNode;\n      this.cursorOffset_ = 0;\n    }\n    this.cursorRowNode_.removeChild(cursorNode);\n  }\n\n  return rv;\n};\n\n/**\n * Finds first X-ROW of a line containing specified X-ROW.\n * Used to support line overflow.\n *\n * @param {!Node} row X-ROW to begin search for first row of line.\n * @return {!Node} The X-ROW that is at the beginning of the line.\n **/\nhterm.Screen.prototype.getLineStartRow_ = function(row) {\n  while (row.previousSibling &&\n         row.previousSibling.hasAttribute('line-overflow')) {\n    row = row.previousSibling;\n  }\n  return row;\n};\n\n/**\n * Gets text of a line beginning with row.\n * Supports line overflow.\n *\n * @param {!Node} row First X-ROW of line.\n * @return {string} Text content of line.\n **/\nhterm.Screen.prototype.getLineText_ = function(row) {\n  let rowText = '';\n  let rowOrNull = row;\n  while (rowOrNull) {\n    rowText += rowOrNull.textContent;\n    if (rowOrNull.hasAttribute('line-overflow')) {\n      rowOrNull = rowOrNull.nextSibling;\n    } else {\n      break;\n    }\n  }\n  return rowText;\n};\n\n/**\n * Returns X-ROW that is ancestor of the node.\n *\n * @param {!Node} node Node to get X-ROW ancestor for.\n * @return {?Node} X-ROW ancestor of node, or null if not found.\n **/\nhterm.Screen.prototype.getXRowAncestor_ = function(node) {\n  let nodeOrNull = node;\n  while (nodeOrNull) {\n    if (nodeOrNull.nodeName === 'X-ROW')\n      break;\n    nodeOrNull = nodeOrNull.parentNode;\n  }\n  return nodeOrNull;\n};\n\n/**\n * Returns position within line of character at offset within node.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {!Node} node Node to get position of.\n * @param {number} offset Offset into node.\n * @return {number} Position within line of character at offset within node.\n **/\nhterm.Screen.prototype.getPositionWithOverflow_ = function(row, node, offset) {\n  if (!node)\n    return -1;\n  var ancestorRow = this.getXRowAncestor_(node);\n  if (!ancestorRow)\n    return -1;\n  var position = 0;\n  while (ancestorRow != row) {\n    position += hterm.TextAttributes.nodeWidth(row);\n    if (row.hasAttribute('line-overflow') && row.nextSibling) {\n      row = row.nextSibling;\n    } else {\n      return -1;\n    }\n  }\n  return position + this.getPositionWithinRow_(row, node, offset);\n};\n\n/**\n * Returns position within row of character at offset within node.\n * Does not support line overflow.\n *\n * @param {!Node} row X-ROW to get position within.\n * @param {!Node} node Node to get position for.\n * @param {number} offset Offset within node to get position for.\n * @return {number} Position within row of character at offset within node.\n **/\nhterm.Screen.prototype.getPositionWithinRow_ = function(row, node, offset) {\n  if (node.parentNode != row) {\n    // If we traversed to the top node, then there's nothing to find here.\n    if (node.parentNode == null)\n      return -1;\n\n    return this.getPositionWithinRow_(node.parentNode, node, offset) +\n           this.getPositionWithinRow_(row, node.parentNode, 0);\n  }\n  var position = 0;\n  for (var i = 0; i < row.childNodes.length; i++) {\n    var currentNode = row.childNodes[i];\n    if (currentNode == node)\n      return position + offset;\n    position += hterm.TextAttributes.nodeWidth(currentNode);\n  }\n  return -1;\n};\n\n/**\n * Returns the node and offset corresponding to position within line.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {number} position Position within line to retrieve node and offset.\n * @return {?Array} Two element array containing node and offset respectively.\n **/\nhterm.Screen.prototype.getNodeAndOffsetWithOverflow_ = function(row, position) {\n  while (row && position > hterm.TextAttributes.nodeWidth(row)) {\n    if (row.hasAttribute('line-overflow') && row.nextSibling) {\n      position -= hterm.TextAttributes.nodeWidth(row);\n      row = row.nextSibling;\n    } else {\n      return [null, -1];\n    }\n  }\n  return this.getNodeAndOffsetWithinRow_(row, position);\n};\n\n/**\n * Returns the node and offset corresponding to position within row.\n * Does not support line overflow.\n *\n * @param {!Node} row X-ROW to get position within.\n * @param {number} position Position within row to retrieve node and offset.\n * @return {?Array} Two element array containing node and offset respectively.\n **/\nhterm.Screen.prototype.getNodeAndOffsetWithinRow_ = function(row, position) {\n  for (var i = 0; i < row.childNodes.length; i++) {\n    var node = row.childNodes[i];\n    var nodeTextWidth = hterm.TextAttributes.nodeWidth(node);\n    if (position <= nodeTextWidth) {\n      if (node.nodeName === 'SPAN') {\n        /** Drill down to node contained by SPAN. **/\n        return this.getNodeAndOffsetWithinRow_(node, position);\n      } else {\n        return [node, position];\n      }\n    }\n    position -= nodeTextWidth;\n  }\n  return null;\n};\n\n/**\n * Returns the node and offset corresponding to position within line.\n * Supports line overflow.\n *\n * @param {!Node} row X-ROW at beginning of line.\n * @param {number} start Start position of range within line.\n * @param {number} end End position of range within line.\n * @param {!Range} range Range to modify.\n **/\nhterm.Screen.prototype.setRange_ = function(row, start, end, range) {\n  var startNodeAndOffset = this.getNodeAndOffsetWithOverflow_(row, start);\n  if (startNodeAndOffset == null)\n    return;\n  var endNodeAndOffset = this.getNodeAndOffsetWithOverflow_(row, end);\n  if (endNodeAndOffset == null)\n    return;\n  range.setStart(startNodeAndOffset[0], startNodeAndOffset[1]);\n  range.setEnd(endNodeAndOffset[0], endNodeAndOffset[1]);\n};\n\n/**\n * Expands selection to surrounding string with word break matches.\n *\n * @param {?Selection} selection Selection to expand.\n * @param {string} leftMatch left word break match.\n * @param {string} rightMatch right word break match.\n * @param {string} insideMatch inside word break match.\n */\nhterm.Screen.prototype.expandSelectionWithWordBreakMatches_ =\n    function(selection, leftMatch, rightMatch, insideMatch) {\n  if (!selection)\n    return;\n\n  var range = selection.getRangeAt(0);\n  if (!range || range.toString().match(/\\s/))\n    return;\n\n  const rowElement = this.getXRowAncestor_(lib.notNull(range.startContainer));\n  if (!rowElement)\n    return;\n  const row = this.getLineStartRow_(rowElement);\n  if (!row)\n    return;\n\n  var startPosition = this.getPositionWithOverflow_(\n      row, lib.notNull(range.startContainer), range.startOffset);\n  if (startPosition == -1)\n    return;\n  var endPosition = this.getPositionWithOverflow_(\n      row, lib.notNull(range.endContainer), range.endOffset);\n  if (endPosition == -1)\n    return;\n\n  //Move start to the left.\n  var rowText = this.getLineText_(row);\n  var lineUpToRange = lib.wc.substring(rowText, 0, endPosition);\n  var leftRegularExpression = new RegExp(leftMatch + insideMatch + \"$\");\n  var expandedStart = lineUpToRange.search(leftRegularExpression);\n  if (expandedStart == -1 || expandedStart > startPosition)\n    return;\n\n  //Move end to the right.\n  var lineFromRange = lib.wc.substring(rowText, startPosition,\n                                       lib.wc.strWidth(rowText));\n  var rightRegularExpression = new RegExp(\"^\" + insideMatch + rightMatch);\n  var found = lineFromRange.match(rightRegularExpression);\n  if (!found)\n    return;\n  var expandedEnd = startPosition + lib.wc.strWidth(found[0]);\n  if (expandedEnd == -1 || expandedEnd < endPosition)\n    return;\n\n  this.setRange_(row, expandedStart, expandedEnd, range);\n  selection.addRange(range);\n};\n\n/**\n * Expands selection to surrounding string using the user's settings.\n *\n * @param {?Selection} selection Selection to expand.\n */\nhterm.Screen.prototype.expandSelection = function(selection) {\n  this.expandSelectionWithWordBreakMatches_(\n      selection,\n      lib.notNull(this.wordBreakMatchLeft),\n      lib.notNull(this.wordBreakMatchRight),\n      lib.notNull(this.wordBreakMatchMiddle));\n};\n\n/**\n * Expands selection to surrounding URL using a set of fixed match settings.\n *\n * @param {?Selection} selection Selection to expand.\n */\nhterm.Screen.prototype.expandSelectionForUrl = function(selection) {\n  this.expandSelectionWithWordBreakMatches_(\n      selection,\n      \"[^\\\\s\\\\[\\\\](){}<>\\\"'\\\\^!@#$%&*,;:`]\",\n      \"[^\\\\s\\\\[\\\\](){}<>\\\"'\\\\^!@#$%&*,;:~.`]\",\n      \"[^\\\\s\\\\[\\\\](){}<>\\\"'\\\\^]*\");\n};\n\n/**\n * Save the current cursor state to the corresponding screens.\n *\n * @param {!hterm.VT} vt The VT object to read graphic codeset details from.\n */\nhterm.Screen.prototype.saveCursorAndState = function(vt) {\n  this.cursorState_.save(vt);\n};\n\n/**\n * Restore the saved cursor state in the corresponding screens.\n *\n * @param {!hterm.VT} vt The VT object to write graphic codeset details to.\n */\nhterm.Screen.prototype.restoreCursorAndState = function(vt) {\n  this.cursorState_.restore(vt);\n};\n\n/**\n * Track all the things related to the current \"cursor\".\n *\n * The set of things saved & restored here is defined by DEC:\n * https://vt100.net/docs/vt510-rm/DECSC.html\n * - Cursor position\n * - Character attributes set by the SGR command\n * - Character sets (G0, G1, G2, or G3) currently in GL and GR\n * - Wrap flag (autowrap or no autowrap)\n * - State of origin mode (DECOM)\n * - Selective erase attribute\n * - Any single shift 2 (SS2) or single shift 3 (SS3) functions sent\n *\n * These are done on a per-screen basis.\n *\n * @param {!hterm.Screen} screen The screen this cursor is tied to.\n * @constructor\n */\nhterm.Screen.CursorState = function(screen) {\n  this.screen_ = screen;\n  this.cursor = null;\n  this.textAttributes = null;\n  this.GL = this.GR = this.G0 = this.G1 = this.G2 = this.G3 = null;\n};\n\n/**\n * Save all the cursor state.\n *\n * @param {!hterm.VT} vt The VT object to read graphic codeset details from.\n */\nhterm.Screen.CursorState.prototype.save = function(vt) {\n  this.cursor = vt.terminal.saveCursor();\n\n  this.textAttributes = this.screen_.textAttributes.clone();\n\n  this.GL = vt.GL;\n  this.GR = vt.GR;\n\n  this.G0 = vt.G0;\n  this.G1 = vt.G1;\n  this.G2 = vt.G2;\n  this.G3 = vt.G3;\n};\n\n/**\n * Restore the previously saved cursor state.\n *\n * @param {!hterm.VT} vt The VT object to write graphic codeset details to.\n */\nhterm.Screen.CursorState.prototype.restore = function(vt) {\n  vt.terminal.restoreCursor(this.cursor);\n\n  // Cursor restore includes char attributes (bold/etc...), but does not change\n  // the color palette (which are a terminal setting).\n  const tattrs = this.textAttributes.clone();\n  tattrs.colorPalette = this.screen_.textAttributes.colorPalette;\n  tattrs.syncColors();\n\n  this.screen_.textAttributes = tattrs;\n\n  vt.GL = this.GL;\n  vt.GR = this.GR;\n\n  vt.G0 = this.G0;\n  vt.G1 = this.G1;\n  vt.G2 = this.G2;\n  vt.G3 = this.G3;\n};\n// SOURCE FILE: hterm/js/hterm_scrollport.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * The RowProvider should return rows rooted by the custom tag name 'x-row'.\n * This ensures that we can quickly assign the correct display height\n * to the rows with css.\n *\n * @interface\n */\nhterm.RowProvider = function() {};\n\n/**\n * @abstract\n * @return {number} The current number of rows.\n */\nhterm.RowProvider.prototype.getRowCount = function() {};\n\n/**\n * Get specified row.\n *\n * @abstract\n * @param {number} index The index of the row.\n * @return {!Element}\n */\nhterm.RowProvider.prototype.getRowNode = function(index) {};\n\n/**\n * A 'viewport' view of fixed-height rows with support for selection and\n * copy-to-clipboard.\n *\n * 'Viewport' in this case means that only the visible rows are in the DOM.\n * If the rowProvider has 100,000 rows, but the ScrollPort is only 25 rows\n * tall, then only 25 dom nodes are created.  The ScrollPort will ask the\n * RowProvider to create new visible rows on demand as they are scrolled in\n * to the visible area.\n *\n * This viewport is designed so that select and copy-to-clipboard still works,\n * even when all or part of the selection is scrolled off screen.\n *\n * Note that the X11 mouse clipboard does not work properly when all or part\n * of the selection is off screen.  It would be difficult to fix this without\n * adding significant overhead to pathologically large selection cases.\n *\n * @param {!hterm.RowProvider} rowProvider An object capable of providing rows\n *     as raw text or row nodes.\n * @constructor\n * @extends {hterm.PubSub}\n */\nhterm.ScrollPort = function(rowProvider) {\n  hterm.PubSub.addBehavior(this);\n\n  this.rowProvider_ = rowProvider;\n\n  // SWAG the character size until we can measure it.\n  this.characterSize = new hterm.Size(10, 10);\n\n  // DOM node used for character measurement.\n  this.ruler_ = null;\n\n  this.selection = new hterm.ScrollPort.Selection(this);\n\n  // A map of rowIndex => rowNode for each row that is drawn as part of a\n  // pending redraw_() call.  Null if there is no pending redraw_ call.\n  this.currentRowNodeCache_ = null;\n\n  // A map of rowIndex => rowNode for each row that was drawn as part of the\n  // previous redraw_() call.\n  this.previousRowNodeCache_ = {};\n\n  // Used during scroll events to detect when the underlying cause is a resize.\n  this.lastScreenWidth_ = null;\n  this.lastScreenHeight_ = null;\n\n  // True if the user should be allowed to select text in the terminal.\n  // This is disabled when the host requests mouse drag events so that we don't\n  // end up with two notions of selection.\n  this.selectionEnabled_ = true;\n\n  // The last row count returned by the row provider, re-populated during\n  // syncScrollHeight().\n  this.lastRowCount_ = 0;\n\n  // The scroll wheel pixel delta multiplier to increase/decrease\n  // the scroll speed of mouse wheel events. See: https://goo.gl/sXelnq\n  this.scrollWheelMultiplier_ = 1;\n\n  // The last touch events we saw to support touch based scrolling.  Indexed\n  // by touch identifier since we can have more than one touch active.\n  this.lastTouch_ = {};\n\n  /**\n   * True if the last scroll caused the scrollport to show the final row.\n   */\n  this.isScrolledEnd = true;\n\n  /**\n   * A guess at the current scrollbar width, fixed in resize().\n   */\n  this.currentScrollbarWidthPx = 16;\n\n  /**\n   * Whether the ctrl-v key on the screen should paste.\n   */\n  this.ctrlVPaste = false;\n\n  /**\n   * Whether to paste on dropped text.\n   */\n  this.pasteOnDrop = true;\n\n  this.div_ = null;\n  this.document_ = null;\n  /** @type {?Element} */\n  this.screen_ = null;\n\n  // Collection of active timeout handles.\n  this.timeouts_ = {};\n\n  this.observers_ = {};\n\n  // Offscreen selection rows that are set with 'aria-hidden'.\n  // They must be unset when selection changes or the rows are visible.\n  this.ariaHiddenSelectionRows_ = [];\n\n  this.DEBUG_ = false;\n};\n\n/**\n * Proxy for the native selection object which understands how to walk up the\n * DOM to find the containing row node and sort out which comes first.\n *\n * @param {!hterm.ScrollPort} scrollPort The parent hterm.ScrollPort instance.\n * @constructor\n */\nhterm.ScrollPort.Selection = function(scrollPort) {\n  this.scrollPort_ = scrollPort;\n\n  /**\n   * The row containing the start of the selection.\n   *\n   * This may be partially or fully selected.  It may be the selection anchor\n   * or the focus, but its rowIndex is guaranteed to be less-than-or-equal-to\n   * that of the endRow.\n   *\n   * If only one row is selected then startRow == endRow.  If there is no\n   * selection or the selection is collapsed then startRow == null.\n   */\n  this.startRow = null;\n\n  /**\n   * The row containing the end of the selection.\n   *\n   * This may be partially or fully selected.  It may be the selection anchor\n   * or the focus, but its rowIndex is guaranteed to be greater-than-or-equal-to\n   * that of the startRow.\n   *\n   * If only one row is selected then startRow == endRow.  If there is no\n   * selection or the selection is collapsed then startRow == null.\n   */\n  this.endRow = null;\n\n  /**\n   * True if startRow != endRow.\n   */\n  this.isMultiline = null;\n\n  /**\n   * True if the selection is just a point rather than a range.\n   */\n  this.isCollapsed = null;\n};\n\n/**\n * Given a list of DOM nodes and a container, return the DOM node that\n * is first according to a depth-first search.\n *\n * @param {!Node} parent\n * @param {!Array<!Node>} childAry\n * @return {?Node} Returns null if none of the children are found.\n */\nhterm.ScrollPort.Selection.prototype.findFirstChild = function(\n    parent, childAry) {\n  var node = parent.firstChild;\n\n  while (node) {\n    if (childAry.indexOf(node) != -1)\n      return node;\n\n    if (node.childNodes.length) {\n      var rv = this.findFirstChild(node, childAry);\n      if (rv)\n        return rv;\n    }\n\n    node = node.nextSibling;\n  }\n\n  return null;\n};\n\n/**\n * Synchronize this object with the current DOM selection.\n *\n * This is a one-way synchronization, the DOM selection is copied to this\n * object, not the other way around.\n */\nhterm.ScrollPort.Selection.prototype.sync = function() {\n  var self = this;\n\n  // The dom selection object has no way to tell which nodes come first in\n  // the document, so we have to figure that out.\n  //\n  // This function is used when we detect that the \"anchor\" node is first.\n  function anchorFirst() {\n    self.startRow = anchorRow;\n    self.startNode = selection.anchorNode;\n    self.startOffset = selection.anchorOffset;\n    self.endRow = focusRow;\n    self.endNode = selection.focusNode;\n    self.endOffset = selection.focusOffset;\n  }\n\n  // This function is used when we detect that the \"focus\" node is first.\n  function focusFirst() {\n    self.startRow = focusRow;\n    self.startNode = selection.focusNode;\n    self.startOffset = selection.focusOffset;\n    self.endRow = anchorRow;\n    self.endNode = selection.anchorNode;\n    self.endOffset = selection.anchorOffset;\n  }\n\n  var selection = this.scrollPort_.getDocument().getSelection();\n\n  this.startRow = null;\n  this.endRow = null;\n  this.isMultiline = null;\n  this.isCollapsed = !selection || selection.isCollapsed;\n\n  if (!selection) {\n    return;\n  }\n\n  // Usually collapsed selections wouldn't be interesting, however screen\n  // readers will set a collapsed selection as they navigate through the DOM.\n  // It is important to preserve these nodes in the DOM as scrolling happens\n  // so that screen reader navigation isn't cleared.\n  const accessibilityEnabled = this.scrollPort_.accessibilityReader_ &&\n      this.scrollPort_.accessibilityReader_.accessibilityEnabled;\n  if (this.isCollapsed && !accessibilityEnabled) {\n    return;\n  }\n\n  var anchorRow = selection.anchorNode;\n  while (anchorRow && anchorRow.nodeName != 'X-ROW') {\n    anchorRow = anchorRow.parentNode;\n  }\n\n  if (!anchorRow) {\n    // Don't set a selection if it's not a row node that's selected.\n    return;\n  }\n\n  var focusRow = selection.focusNode;\n  while (focusRow && focusRow.nodeName != 'X-ROW') {\n    focusRow = focusRow.parentNode;\n  }\n\n  if (!focusRow) {\n    // Don't set a selection if it's not a row node that's selected.\n    return;\n  }\n\n  if (anchorRow.rowIndex < focusRow.rowIndex) {\n    anchorFirst();\n\n  } else if (anchorRow.rowIndex > focusRow.rowIndex) {\n    focusFirst();\n\n  } else if (selection.focusNode == selection.anchorNode) {\n    if (selection.anchorOffset < selection.focusOffset) {\n      anchorFirst();\n    } else {\n      focusFirst();\n    }\n\n  } else {\n    // The selection starts and ends in the same row, but isn't contained all\n    // in a single node.\n    var firstNode = this.findFirstChild(\n        anchorRow, [selection.anchorNode, selection.focusNode]);\n\n    if (!firstNode)\n      throw new Error('Unexpected error syncing selection.');\n\n    if (firstNode == selection.anchorNode) {\n      anchorFirst();\n    } else {\n      focusFirst();\n    }\n  }\n\n  this.isMultiline = anchorRow.rowIndex != focusRow.rowIndex;\n};\n\n/**\n * Turn a div into this hterm.ScrollPort.\n *\n * @param {!Element} div\n * @param {function()=} callback\n */\nhterm.ScrollPort.prototype.decorate = function(div, callback) {\n  this.div_ = div;\n\n  this.iframe_ = div.ownerDocument.createElement('iframe');\n  this.iframe_.style.cssText = (\n      'border: 0;' +\n      'height: 100%;' +\n      'position: absolute;' +\n      'width: 100%');\n\n  div.appendChild(this.iframe_);\n\n  const onLoad = () => {\n    this.paintIframeContents_();\n    if (callback) {\n      callback();\n    }\n  };\n\n  // Insert Iframe content asynchronously in FF.  Otherwise when the frame's\n  // load event fires in FF it clears out the content of the iframe.\n  if ('mozInnerScreenX' in window) { // detect a FF only property\n    this.iframe_.addEventListener('load', () => onLoad());\n  } else {\n    onLoad();\n  }\n};\n\n\n/**\n * Initialises the content of this.iframe_. This needs to be done asynchronously\n * in FF after the Iframe's load event has fired.\n *\n * @private\n */\nhterm.ScrollPort.prototype.paintIframeContents_ = function() {\n  this.iframe_.contentWindow.addEventListener('resize',\n                                              this.onResize_.bind(this));\n\n  var doc = this.document_ = this.iframe_.contentDocument;\n  doc.body.style.cssText = (\n      'margin: 0px;' +\n      'padding: 0px;' +\n      'height: 100%;' +\n      'width: 100%;' +\n      'overflow: hidden;' +\n      'cursor: var(--hterm-mouse-cursor-style);' +\n      '-webkit-user-select: none;' +\n      '-moz-user-select: none;');\n\n  const metaCharset = doc.createElement('meta');\n  metaCharset.setAttribute('charset', 'utf-8');\n  doc.head.appendChild(metaCharset);\n\n  if (this.DEBUG_) {\n    // When we're debugging we add padding to the body so that the offscreen\n    // elements are visible.\n    this.document_.body.style.paddingTop =\n        this.document_.body.style.paddingBottom =\n        'calc(var(--hterm-charsize-height) * 3)';\n  }\n\n  var style = doc.createElement('style');\n  style.textContent = (\n      'x-row {' +\n      '  display: block;' +\n      '  height: var(--hterm-charsize-height);' +\n      '  line-height: var(--hterm-charsize-height);' +\n      '}');\n  doc.head.appendChild(style);\n\n  this.userCssLink_ = doc.createElement('link');\n  this.userCssLink_.setAttribute('rel', 'stylesheet');\n\n  this.userCssText_ = doc.createElement('style');\n  doc.head.appendChild(this.userCssText_);\n\n  // TODO(rginda): Sorry, this 'screen_' isn't the same thing as hterm.Screen\n  // from screen.js.  I need to pick a better name for one of them to avoid\n  // the collision.\n  // We make this field editable even though we don't actually allow anything\n  // to be edited here so that Chrome will do the right thing with virtual\n  // keyboards and IMEs.  But make sure we turn off all the input helper logic\n  // that doesn't make sense here, and might inadvertently mung or save input.\n  // Some of these attributes are standard while others are browser specific,\n  // but should be safely ignored by other browsers.\n  this.screen_ = doc.createElement('x-screen');\n  this.screen_.setAttribute('contenteditable', 'true');\n  this.screen_.setAttribute('spellcheck', 'false');\n  this.screen_.setAttribute('autocomplete', 'off');\n  this.screen_.setAttribute('autocorrect', 'off');\n  this.screen_.setAttribute('autocapitalize', 'none');\n\n  // In some ways the terminal behaves like a text box but not in all ways. It\n  // is not editable in the same ways a text box is editable and the content we\n  // want to be read out by a screen reader does not always align with the edits\n  // (selection changes) that happen in the terminal window. Use the log role so\n  // that the screen reader doesn't treat it like a text box and announce all\n  // selection changes. The announcements that we want spoken are generated\n  // by a separate live region, which gives more control over what will be\n  // spoken.\n  this.screen_.setAttribute('role', 'log');\n  this.screen_.setAttribute('aria-live', 'off');\n  this.screen_.setAttribute('aria-roledescription', 'Terminal');\n\n  // Set aria-readonly to indicate to the screen reader that the text on the\n  // screen is not modifiable by the html cursor. It may be modifiable by\n  // sending input to the application running in the terminal, but this is\n  // orthogonal to the DOM's notion of modifiable.\n  this.screen_.setAttribute('aria-readonly', 'true');\n  this.screen_.setAttribute('tabindex', '-1');\n  this.screen_.style.cssText = (\n      'caret-color: transparent;' +\n      'display: block;' +\n      'font-family: monospace;' +\n      'font-size: 15px;' +\n      'font-variant-ligatures: none;' +\n      'height: 100%;' +\n      'overflow-y: scroll; overflow-x: hidden;' +\n      'white-space: pre;' +\n      'width: 100%;' +\n      'outline: none !important');\n\n  doc.body.appendChild(this.screen_);\n\n  /**\n   * @param {function(...)} f\n   * @return {!EventListener}\n   */\n  const el = (f) => /** @type {!EventListener} */ (f);\n  this.screen_.addEventListener('scroll', el(this.onScroll_.bind(this)));\n  this.screen_.addEventListener('wheel', el(this.onScrollWheel_.bind(this)));\n  this.screen_.addEventListener('touchstart', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchmove', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchend', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('touchcancel', el(this.onTouch_.bind(this)));\n  this.screen_.addEventListener('copy', el(this.onCopy_.bind(this)));\n  this.screen_.addEventListener('paste', el(this.onPaste_.bind(this)));\n  this.screen_.addEventListener('drop', el(this.onDragAndDrop_.bind(this)));\n\n  doc.body.addEventListener('keydown', this.onBodyKeyDown_.bind(this));\n\n  // Add buttons to make accessible scrolling through terminal history work\n  // well. These are positioned off-screen until they are selected, at which\n  // point they are moved on-screen.\n  const scrollButtonHeight = 30;\n  const scrollButtonBorder = 1;\n  const scrollButtonTotalHeight = scrollButtonHeight + 2 * scrollButtonBorder;\n  const scrollButtonStyle = `right: 0px;\n                             position:fixed;\n                             z-index: 1;\n                             text-align: center;\n                             cursor: pointer;\n                             height: ${scrollButtonHeight}px;\n                             width: 110px;\n                             line-height: ${scrollButtonHeight}px;\n                             border-width: ${scrollButtonBorder}px;\n                             border-style: solid;\n                             font-weight: bold;`;\n  // Note: we use a <div> rather than a <button> because we don't want it to be\n  // focusable. If it's focusable this interferes with the contenteditable\n  // focus.\n  this.scrollUpButton_ = this.document_.createElement('div');\n  this.scrollUpButton_.id = 'hterm:a11y:page-up';\n  this.scrollUpButton_.innerText = hterm.msg('BUTTON_PAGE_UP', [], 'Page up');\n  this.scrollUpButton_.setAttribute('role', 'button');\n  this.scrollUpButton_.style.cssText = scrollButtonStyle;\n  this.scrollUpButton_.style.top = -scrollButtonTotalHeight + 'px';\n  this.scrollUpButton_.addEventListener('click', this.scrollPageUp.bind(this));\n\n  this.scrollDownButton_ = this.document_.createElement('div');\n  this.scrollDownButton_.id = 'hterm:a11y:page-down';\n  this.scrollDownButton_.innerText =\n      hterm.msg('BUTTON_PAGE_DOWN', [], 'Page down');\n  this.scrollDownButton_.setAttribute('role', 'button');\n  this.scrollDownButton_.style.cssText = scrollButtonStyle;\n  this.scrollDownButton_.style.bottom = -scrollButtonTotalHeight + 'px';\n  this.scrollDownButton_.addEventListener(\n      'click', this.scrollPageDown.bind(this));\n\n  // We only allow the scroll buttons to display after a delay, otherwise the\n  // page up button can flash onto the screen during the intial change in focus.\n  // This seems to be because it is the first element inside the <x-screen>\n  // element, which will get focussed on page load.\n  this.allowScrollButtonsToDisplay_ = false;\n  setTimeout(() => { this.allowScrollButtonsToDisplay_ = true; }, 500);\n  this.document_.addEventListener('selectionchange', () => {\n    this.selection.sync();\n\n    if (!this.allowScrollButtonsToDisplay_)\n      return;\n\n    const accessibilityEnabled = this.accessibilityReader_ &&\n        this.accessibilityReader_.accessibilityEnabled;\n\n    const selectedElement = this.document_.getSelection().anchorNode;\n    if (accessibilityEnabled && selectedElement == this.scrollUpButton_) {\n      this.scrollUpButton_.style.top = '0px';\n    } else {\n      this.scrollUpButton_.style.top = -scrollButtonTotalHeight + 'px';\n    }\n    if (accessibilityEnabled && selectedElement == this.scrollDownButton_) {\n      this.scrollDownButton_.style.bottom = '0px';\n    } else {\n      this.scrollDownButton_.style.bottom = -scrollButtonTotalHeight + 'px';\n    }\n  });\n\n  this.screen_.appendChild(this.scrollUpButton_);\n\n  // This is the main container for the fixed rows.\n  this.rowNodes_ = doc.createElement('div');\n  this.rowNodes_.id = 'hterm:row-nodes';\n  this.rowNodes_.style.cssText = (\n      'display: block;' +\n      'position: fixed;' +\n      'overflow: hidden;' +\n      '-webkit-user-select: text;' +\n      '-moz-user-select: text;');\n  this.screen_.appendChild(this.rowNodes_);\n\n  this.screen_.appendChild(this.scrollDownButton_);\n\n  // Two nodes to hold offscreen text during the copy event.\n  this.topSelectBag_ = doc.createElement('x-select-bag');\n  this.topSelectBag_.style.cssText = (\n      'display: block;' +\n      'overflow: hidden;' +\n      'height: var(--hterm-charsize-height);' +\n      'white-space: pre;');\n\n  this.bottomSelectBag_ = this.topSelectBag_.cloneNode();\n\n  // Nodes above the top fold and below the bottom fold are hidden.  They are\n  // only used to hold rows that are part of the selection but are currently\n  // scrolled off the top or bottom of the visible range.\n  this.topFold_ = doc.createElement('x-fold');\n  this.topFold_.id = 'hterm:top-fold-for-row-selection';\n  this.topFold_.style.cssText = 'display: block;';\n  this.rowNodes_.appendChild(this.topFold_);\n\n  this.bottomFold_ = this.topFold_.cloneNode();\n  this.bottomFold_.id = 'hterm:bottom-fold-for-row-selection';\n  this.rowNodes_.appendChild(this.bottomFold_);\n\n  // This hidden div accounts for the vertical space that would be consumed by\n  // all the rows in the buffer if they were visible.  It's what causes the\n  // scrollbar to appear on the 'x-screen', and it moves within the screen when\n  // the scrollbar is moved.\n  //\n  // It is set 'visibility: hidden' to keep the browser from trying to include\n  // it in the selection when a user 'drag selects' upwards (drag the mouse to\n  // select and scroll at the same time).  Without this, the selection gets\n  // out of whack.\n  this.scrollArea_ = doc.createElement('div');\n  this.scrollArea_.id = 'hterm:scrollarea';\n  this.scrollArea_.style.cssText = 'visibility: hidden';\n  this.screen_.appendChild(this.scrollArea_);\n\n  // This svg element is used to detect when the browser is zoomed.  It must be\n  // placed in the outermost document for currentScale to be correct.\n  // TODO(rginda): This means that hterm nested in an iframe will not correctly\n  // detect browser zoom level.  We should come up with a better solution.\n  // Note: This must be http:// else Chrome cannot create the element correctly.\n  var xmlns = 'http://www.w3.org/2000/svg';\n  this.svg_ =\n      /** @type {?SVGSVGElement} */\n      (this.div_.ownerDocument.createElementNS(xmlns, 'svg'));\n  this.svg_.id = 'hterm:zoom-detector';\n  this.svg_.setAttribute('xmlns', xmlns);\n  this.svg_.setAttribute('version', '1.1');\n  this.svg_.style.cssText = (\n      'position: absolute;' +\n      'top: 0;' +\n      'left: 0;' +\n      'visibility: hidden');\n\n\n  // We send focus to this element just before a paste happens, so we can\n  // capture the pasted text and forward it on to someone who cares.\n  this.pasteTarget_ = doc.createElement('textarea');\n  this.pasteTarget_.id = 'hterm:ctrl-v-paste-target';\n  this.pasteTarget_.setAttribute('tabindex', '-1');\n  this.pasteTarget_.setAttribute('aria-hidden', 'true');\n  this.pasteTarget_.style.cssText = (\n    'position: absolute;' +\n    'height: 1px;' +\n    'width: 1px;' +\n    'left: 0px; ' +\n    'bottom: 0px;' +\n    'opacity: 0');\n  this.pasteTarget_.contentEditable = true;\n\n  this.screen_.appendChild(this.pasteTarget_);\n  this.pasteTarget_.addEventListener(\n      'textInput', this.handlePasteTargetTextInput_.bind(this));\n\n  this.resize();\n};\n\n/**\n * Set the AccessibilityReader object to use to announce page scroll updates.\n *\n * @param {!hterm.AccessibilityReader} accessibilityReader for announcing page\n *     scroll updates.\n */\nhterm.ScrollPort.prototype.setAccessibilityReader =\n    function(accessibilityReader) {\n  this.accessibilityReader_ = accessibilityReader;\n};\n\n/**\n * Scroll the terminal one page up (minus one line) relative to the current\n * position.\n */\nhterm.ScrollPort.prototype.scrollPageUp = function() {\n  if (this.getTopRowIndex() == 0) {\n    return;\n  }\n\n  const i = this.getTopRowIndex();\n  this.scrollRowToTop(i - this.visibleRowCount + 1);\n\n  this.assertiveAnnounce_();\n};\n\n/**\n * Scroll the terminal one page down (minus one line) relative to the current\n * position.\n */\nhterm.ScrollPort.prototype.scrollPageDown = function() {\n  if (this.isScrolledEnd) {\n    return;\n  }\n\n  const i = this.getTopRowIndex();\n  this.scrollRowToTop(i + this.visibleRowCount - 1);\n\n  this.assertiveAnnounce_();\n};\n\n/**\n * Select the font-family and font-smoothing for this scrollport.\n *\n * @param {string} fontFamily Value of the CSS 'font-family' to use for this\n *     scrollport.  Should be a monospace font.\n * @param {string=} opt_smoothing Optional value for '-webkit-font-smoothing'.\n *     Defaults to an empty string if not specified.\n */\nhterm.ScrollPort.prototype.setFontFamily = function(fontFamily, opt_smoothing) {\n  this.screen_.style.fontFamily = fontFamily;\n  if (opt_smoothing) {\n    this.screen_.style.webkitFontSmoothing = opt_smoothing;\n  } else {\n    this.screen_.style.webkitFontSmoothing = '';\n  }\n\n  this.syncCharacterSize();\n};\n\n/** @return {string} */\nhterm.ScrollPort.prototype.getFontFamily = function() {\n  return this.screen_.style.fontFamily;\n};\n\n/**\n * Set a custom stylesheet to include in the scrollport.\n *\n * Defaults to null, meaning no custom css is loaded.  Set it back to null or\n * the empty string to remove a previously applied custom css.\n *\n * @param {?string} url\n */\nhterm.ScrollPort.prototype.setUserCssUrl = function(url) {\n  if (url) {\n    this.userCssLink_.setAttribute('href', url);\n\n    if (!this.userCssLink_.parentNode)\n      this.document_.head.appendChild(this.userCssLink_);\n  } else if (this.userCssLink_.parentNode) {\n    this.document_.head.removeChild(this.userCssLink_);\n  }\n};\n\n/** @param {string} text */\nhterm.ScrollPort.prototype.setUserCssText = function(text) {\n  this.userCssText_.textContent = text;\n};\n\n/** Focus. */\nhterm.ScrollPort.prototype.focus = function() {\n  this.iframe_.focus();\n  this.screen_.focus();\n  this.publish('focus');\n};\n\n/**\n * Unfocus the scrollport.\n */\nhterm.ScrollPort.prototype.blur = function() {\n  this.screen_.blur();\n};\n\n/** @return {string} */\nhterm.ScrollPort.prototype.getForegroundColor = function() {\n  return this.screen_.style.color;\n};\n\n/** @param {string} color */\nhterm.ScrollPort.prototype.setForegroundColor = function(color) {\n  this.screen_.style.color = color;\n  this.scrollUpButton_.style.backgroundColor = color;\n  this.scrollDownButton_.style.backgroundColor = color;\n};\n\n/** @return {string} */\nhterm.ScrollPort.prototype.getBackgroundColor = function() {\n  return this.screen_.style.backgroundColor;\n};\n\n/** @param {string} color */\nhterm.ScrollPort.prototype.setBackgroundColor = function(color) {\n  this.screen_.style.backgroundColor = color;\n  this.scrollUpButton_.style.color = color;\n  this.scrollDownButton_.style.color = color;\n};\n\n/** @param {string} image */\nhterm.ScrollPort.prototype.setBackgroundImage = function(image) {\n  this.screen_.style.backgroundImage = image;\n};\n\n/** @param {string} size */\nhterm.ScrollPort.prototype.setBackgroundSize = function(size) {\n  this.screen_.style.backgroundSize = size;\n};\n\n/** @param {string} position */\nhterm.ScrollPort.prototype.setBackgroundPosition = function(position) {\n  this.screen_.style.backgroundPosition = position;\n};\n\n/** @param {boolean} ctrlVPaste */\nhterm.ScrollPort.prototype.setCtrlVPaste = function(ctrlVPaste) {\n  this.ctrlVPaste = ctrlVPaste;\n};\n\n/** @param {boolean} pasteOnDrop */\nhterm.ScrollPort.prototype.setPasteOnDrop = function(pasteOnDrop) {\n  this.pasteOnDrop = pasteOnDrop;\n};\n\n/**\n * Get the usable size of the scrollport screen.\n *\n * The width will not include the scrollbar width.\n *\n * @return {{height: number, width: number}}\n */\nhterm.ScrollPort.prototype.getScreenSize = function() {\n  var size = hterm.getClientSize(lib.notNull(this.screen_));\n  return {\n    height: size.height,\n    width: size.width - this.currentScrollbarWidthPx\n  };\n};\n\n/**\n * Get the usable width of the scrollport screen.\n *\n * This the widget width minus scrollbar width.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScreenWidth = function() {\n  return this.getScreenSize().width ;\n};\n\n/**\n * Get the usable height of the scrollport screen.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScreenHeight = function() {\n  return this.getScreenSize().height;\n};\n\n/**\n * Return the document that holds the visible rows of this hterm.ScrollPort.\n *\n * @return {!Document}\n */\nhterm.ScrollPort.prototype.getDocument = function() {\n  return this.document_;\n};\n\n/**\n * Returns the x-screen element that holds the rows of this hterm.ScrollPort.\n *\n * @return {?Element}\n */\nhterm.ScrollPort.prototype.getScreenNode = function() {\n  return this.screen_;\n};\n\n/**\n * Clear out any cached rowNodes.\n */\nhterm.ScrollPort.prototype.resetCache = function() {\n  this.currentRowNodeCache_ = null;\n  this.previousRowNodeCache_ = {};\n};\n\n/**\n * Change the current rowProvider.\n *\n * This will clear the row cache and cause a redraw.\n *\n * @param {!hterm.RowProvider} rowProvider An object capable of providing the\n *     rows in this hterm.ScrollPort.\n */\nhterm.ScrollPort.prototype.setRowProvider = function(rowProvider) {\n  this.resetCache();\n  this.rowProvider_ = rowProvider;\n  this.scheduleRedraw();\n};\n\n/**\n * Inform the ScrollPort that the root DOM nodes for some or all of the visible\n * rows are no longer valid.\n *\n * Specifically, this should be called if this.rowProvider_.getRowNode() now\n * returns an entirely different node than it did before.  It does not\n * need to be called if the content of a row node is the only thing that\n * changed.\n *\n * This skips some of the overhead of a full redraw, but should not be used\n * in cases where the scrollport has been scrolled, or when the row count has\n * changed.\n */\nhterm.ScrollPort.prototype.invalidate = function() {\n  var node = this.topFold_.nextSibling;\n  while (node != this.bottomFold_) {\n    var nextSibling = node.nextSibling;\n    node.parentElement.removeChild(node);\n    node = nextSibling;\n  }\n\n  this.previousRowNodeCache_ = null;\n  var topRowIndex = this.getTopRowIndex();\n  var bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  this.drawVisibleRows_(topRowIndex, bottomRowIndex);\n};\n\n/**\n * Schedule invalidate.\n */\nhterm.ScrollPort.prototype.scheduleInvalidate = function() {\n  if (this.timeouts_.invalidate)\n    return;\n\n  var self = this;\n  this.timeouts_.invalidate = setTimeout(function () {\n      delete self.timeouts_.invalidate;\n      self.invalidate();\n    }, 0);\n};\n\n/**\n * Set the font size of the ScrollPort.\n *\n * @param {number} px\n */\nhterm.ScrollPort.prototype.setFontSize = function(px) {\n  this.screen_.style.fontSize = px + 'px';\n  this.syncCharacterSize();\n};\n\n/**\n * Return the current font size of the ScrollPort.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getFontSize = function() {\n  return parseInt(this.screen_.style.fontSize, 10);\n};\n\n/**\n * Measure the size of a single character in pixels.\n *\n * @param {string=} opt_weight The font weight to measure, or 'normal' if\n *     omitted.\n * @return {!hterm.Size} A new hterm.Size object.\n */\nhterm.ScrollPort.prototype.measureCharacterSize = function(opt_weight) {\n  // Number of lines used to average the height of a single character.\n  var numberOfLines = 100;\n  // Number of chars per line used to average the width of a single character.\n  var lineLength = 100;\n\n  if (!this.ruler_) {\n    this.ruler_ = this.document_.createElement('div');\n    this.ruler_.id = 'hterm:ruler-character-size';\n    this.ruler_.style.cssText = (\n        'position: absolute;' +\n        'top: 0;' +\n        'left: 0;' +\n        'visibility: hidden;' +\n        'height: auto !important;' +\n        'width: auto !important;');\n\n    // We need to put the text in a span to make the size calculation\n    // work properly in Firefox\n    this.rulerSpan_ = this.document_.createElement('span');\n    this.rulerSpan_.id = 'hterm:ruler-span-workaround';\n    this.rulerSpan_.innerHTML =\n        ('X'.repeat(lineLength) + '\\r').repeat(numberOfLines);\n    this.ruler_.appendChild(this.rulerSpan_);\n\n    this.rulerBaseline_ = this.document_.createElement('span');\n    this.rulerSpan_.id = 'hterm:ruler-baseline';\n    // We want to collapse it on the baseline\n    this.rulerBaseline_.style.fontSize = '0px';\n    this.rulerBaseline_.textContent = 'X';\n  }\n\n  this.rulerSpan_.style.fontWeight = opt_weight || '';\n\n  this.rowNodes_.appendChild(this.ruler_);\n  var rulerSize = hterm.getClientSize(this.rulerSpan_);\n\n  var size = new hterm.Size(rulerSize.width / lineLength,\n                            rulerSize.height / numberOfLines);\n\n  this.ruler_.appendChild(this.rulerBaseline_);\n  this.ruler_.removeChild(this.rulerBaseline_);\n\n  this.rowNodes_.removeChild(this.ruler_);\n\n  this.div_.ownerDocument.body.appendChild(this.svg_);\n  size.zoomFactor = this.svg_.currentScale;\n  this.div_.ownerDocument.body.removeChild(this.svg_);\n\n  return size;\n};\n\n/**\n * Synchronize the character size.\n *\n * This will re-measure the current character size and adjust the height\n * of an x-row to match.\n */\nhterm.ScrollPort.prototype.syncCharacterSize = function() {\n  this.characterSize = this.measureCharacterSize();\n\n  this.resize();\n};\n\n/**\n * Reset dimensions and visible row count to account for a change in the\n * dimensions of the 'x-screen'.\n */\nhterm.ScrollPort.prototype.resize = function() {\n  this.currentScrollbarWidthPx =\n    hterm.getClientWidth(lib.notNull(this.screen_)) - this.screen_.clientWidth;\n\n  this.syncScrollHeight();\n  this.syncRowNodesDimensions_();\n\n  var self = this;\n  this.publish(\n      'resize', { scrollPort: this },\n      function() {\n        self.scheduleRedraw();\n      });\n};\n\n/**\n * Announce text content on the current screen for the screen reader.\n */\nhterm.ScrollPort.prototype.assertiveAnnounce_ = function() {\n  if (!this.accessibilityReader_) {\n    return;\n  }\n\n  const topRow = this.getTopRowIndex();\n  const bottomRow = this.getBottomRowIndex(topRow);\n\n  let percentScrolled = 100 * topRow /\n      Math.max(1, this.rowProvider_.getRowCount() - this.visibleRowCount);\n  percentScrolled = Math.min(100, Math.round(percentScrolled));\n  let currentScreenContent = hterm.msg('ANNOUNCE_CURRENT_SCREEN_HEADER',\n                                       [percentScrolled],\n                                       '$1% scrolled,');\n  currentScreenContent += '\\n';\n\n  for (let i = topRow; i <= bottomRow; ++i) {\n    const node = this.fetchRowNode_(i);\n    currentScreenContent += node.textContent + '\\n';\n  }\n\n  this.accessibilityReader_.assertiveAnnounce(currentScreenContent);\n};\n\n/**\n * Set the position and size of the row nodes element.\n */\nhterm.ScrollPort.prototype.syncRowNodesDimensions_ = function() {\n  var screenSize = this.getScreenSize();\n\n  this.lastScreenWidth_ = screenSize.width;\n  this.lastScreenHeight_ = screenSize.height;\n\n  // We don't want to show a partial row because it would be distracting\n  // in a terminal, so we floor any fractional row count.\n  this.visibleRowCount = lib.f.smartFloorDivide(\n      screenSize.height, this.characterSize.height);\n\n  // Then compute the height of our integral number of rows.\n  var visibleRowsHeight = this.visibleRowCount * this.characterSize.height;\n\n  // Then the difference between the screen height and total row height needs to\n  // be made up for as top margin.  We need to record this value so it\n  // can be used later to determine the topRowIndex.\n  this.visibleRowTopMargin = 0;\n  this.visibleRowBottomMargin = screenSize.height - visibleRowsHeight;\n\n  this.topFold_.style.marginBottom = this.visibleRowTopMargin + 'px';\n\n\n  var topFoldOffset = 0;\n  var node = this.topFold_.previousSibling;\n  while (node) {\n    topFoldOffset += hterm.getClientHeight(node);\n    node = node.previousSibling;\n  }\n\n  // Set the dimensions of the visible rows container.\n  this.rowNodes_.style.width = screenSize.width + 'px';\n  this.rowNodes_.style.height = visibleRowsHeight + topFoldOffset + 'px';\n  this.rowNodes_.style.left = this.screen_.offsetLeft + 'px';\n  this.rowNodes_.style.top = this.screen_.offsetTop - topFoldOffset + 'px';\n};\n\n/**\n * Resize the scroll area to appear as though it contains every row.\n */\nhterm.ScrollPort.prototype.syncScrollHeight = function() {\n  this.lastRowCount_ = this.rowProvider_.getRowCount();\n  this.scrollArea_.style.height = (this.characterSize.height *\n                                   this.lastRowCount_ +\n                                   this.visibleRowTopMargin +\n                                   this.visibleRowBottomMargin +\n                                   'px');\n};\n\n/**\n * Schedule a redraw to happen asynchronously.\n *\n * If this method is called multiple times before the redraw has a chance to\n * run only one redraw occurs.\n */\nhterm.ScrollPort.prototype.scheduleRedraw = function() {\n  if (this.timeouts_.redraw)\n    return;\n\n  var self = this;\n  this.timeouts_.redraw = setTimeout(function () {\n      delete self.timeouts_.redraw;\n      self.redraw_();\n    }, 0);\n};\n\n/**\n * Update the state of scroll up/down buttons.\n *\n * If the viewport is at the top or bottom row of output, these buttons will\n * be made transparent and clicking them shouldn't scroll any further.\n */\nhterm.ScrollPort.prototype.updateScrollButtonState_ = function() {\n  const setButton = (button, disabled) => {\n    button.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n    button.style.opacity = disabled ? 0.5 : 1;\n  };\n  setButton(this.scrollUpButton_, this.getTopRowIndex() == 0);\n  setButton(this.scrollDownButton_, this.isScrolledEnd);\n};\n\n/**\n * Redraw the current hterm.ScrollPort based on the current scrollbar position.\n *\n * When redrawing, we are careful to make sure that the rows that start or end\n * the current selection are not touched in any way.  Doing so would disturb\n * the selection, and cleaning up after that would cause flashes at best and\n * incorrect selection at worst.  Instead, we modify the DOM around these nodes.\n * We even stash the selection start/end outside of the visible area if\n * they are not supposed to be visible in the hterm.ScrollPort.\n */\nhterm.ScrollPort.prototype.redraw_ = function() {\n  this.resetSelectBags_();\n  this.selection.sync();\n\n  this.syncScrollHeight();\n\n  this.currentRowNodeCache_ = {};\n\n  var topRowIndex = this.getTopRowIndex();\n  var bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  this.drawTopFold_(topRowIndex);\n  this.drawBottomFold_(bottomRowIndex);\n  this.drawVisibleRows_(topRowIndex, bottomRowIndex);\n  this.ariaHideOffscreenSelectionRows_(topRowIndex, bottomRowIndex);\n\n  this.syncRowNodesDimensions_();\n\n  this.previousRowNodeCache_ = this.currentRowNodeCache_;\n  this.currentRowNodeCache_ = null;\n\n  this.isScrolledEnd = (\n    this.getTopRowIndex() + this.visibleRowCount >= this.lastRowCount_);\n\n  this.updateScrollButtonState_();\n};\n\n/**\n * Ensure that the nodes above the top fold are as they should be.\n *\n * If the selection start and/or end nodes are above the visible range\n * of this hterm.ScrollPort then the dom will be adjusted so that they appear\n * before the top fold (the first x-fold element, aka this.topFold).\n *\n * If not, the top fold will be the first element.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} topRowIndex\n */\nhterm.ScrollPort.prototype.drawTopFold_ = function(topRowIndex) {\n  if (!this.selection.startRow ||\n      this.selection.startRow.rowIndex >= topRowIndex) {\n    // Selection is entirely below the top fold, just make sure the fold is\n    // the first child.\n    if (this.rowNodes_.firstChild != this.topFold_)\n      this.rowNodes_.insertBefore(this.topFold_, this.rowNodes_.firstChild);\n\n    return;\n  }\n\n  if (!this.selection.isMultiline ||\n      this.selection.endRow.rowIndex >= topRowIndex) {\n    // Only the startRow is above the fold.\n    if (this.selection.startRow.nextSibling != this.topFold_)\n      this.rowNodes_.insertBefore(this.topFold_,\n                                  this.selection.startRow.nextSibling);\n  } else {\n    // Both rows are above the fold.\n    if (this.selection.endRow.nextSibling != this.topFold_) {\n      this.rowNodes_.insertBefore(this.topFold_,\n                                  this.selection.endRow.nextSibling);\n    }\n\n    // Trim any intermediate lines.\n    while (this.selection.startRow.nextSibling !=\n           this.selection.endRow) {\n      this.rowNodes_.removeChild(this.selection.startRow.nextSibling);\n    }\n  }\n\n  while(this.rowNodes_.firstChild != this.selection.startRow) {\n    this.rowNodes_.removeChild(this.rowNodes_.firstChild);\n  }\n};\n\n/**\n * Ensure that the nodes below the bottom fold are as they should be.\n *\n * If the selection start and/or end nodes are below the visible range\n * of this hterm.ScrollPort then the dom will be adjusted so that they appear\n * after the bottom fold (the second x-fold element, aka this.bottomFold).\n *\n * If not, the bottom fold will be the last element.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} bottomRowIndex\n */\nhterm.ScrollPort.prototype.drawBottomFold_ = function(bottomRowIndex) {\n  if (!this.selection.endRow ||\n      this.selection.endRow.rowIndex <= bottomRowIndex) {\n    // Selection is entirely above the bottom fold, just make sure the fold is\n    // the last child.\n    if (this.rowNodes_.lastChild != this.bottomFold_)\n      this.rowNodes_.appendChild(this.bottomFold_);\n\n    return;\n  }\n\n  if (!this.selection.isMultiline ||\n      this.selection.startRow.rowIndex <= bottomRowIndex) {\n    // Only the endRow is below the fold.\n    if (this.bottomFold_.nextSibling != this.selection.endRow)\n      this.rowNodes_.insertBefore(this.bottomFold_,\n                                  this.selection.endRow);\n  } else {\n    // Both rows are below the fold.\n    if (this.bottomFold_.nextSibling != this.selection.startRow) {\n      this.rowNodes_.insertBefore(this.bottomFold_,\n                                  this.selection.startRow);\n    }\n\n    // Trim any intermediate lines.\n    while (this.selection.startRow.nextSibling !=\n           this.selection.endRow) {\n      this.rowNodes_.removeChild(this.selection.startRow.nextSibling);\n    }\n  }\n\n  while(this.rowNodes_.lastChild != this.selection.endRow) {\n    this.rowNodes_.removeChild(this.rowNodes_.lastChild);\n  }\n};\n\n/**\n * Ensure that the rows between the top and bottom folds are as they should be.\n *\n * This method assumes that drawTopFold_() and drawBottomFold_() have already\n * run, and that they have left any visible selection row (selection start\n * or selection end) between the folds.\n *\n * It recycles DOM nodes from the previous redraw where possible, but will ask\n * the rowSource to make new nodes if necessary.\n *\n * It is critical that this method does not move the selection nodes.  Doing\n * so would clear the current selection.  Instead, the rest of the DOM is\n * adjusted around them.\n *\n * @param {number} topRowIndex\n * @param {number} bottomRowIndex\n */\nhterm.ScrollPort.prototype.drawVisibleRows_ = function(\n    topRowIndex, bottomRowIndex) {\n  var self = this;\n\n  // Keep removing nodes, starting with currentNode, until we encounter\n  // targetNode.  Throws on failure.\n  function removeUntilNode(currentNode, targetNode) {\n    while (currentNode != targetNode) {\n      if (!currentNode)\n        throw 'Did not encounter target node';\n\n      if (currentNode == self.bottomFold_)\n        throw 'Encountered bottom fold before target node';\n\n      var deadNode = currentNode;\n      currentNode = currentNode.nextSibling;\n      deadNode.parentNode.removeChild(deadNode);\n    }\n  }\n\n  // Shorthand for things we're going to use a lot.\n  var selectionStartRow = this.selection.startRow;\n  var selectionEndRow = this.selection.endRow;\n  var bottomFold = this.bottomFold_;\n\n  // The node we're examining during the current iteration.\n  var node = this.topFold_.nextSibling;\n\n  var targetDrawCount = Math.min(this.visibleRowCount,\n                                 this.rowProvider_.getRowCount());\n\n  for (var drawCount = 0; drawCount < targetDrawCount; drawCount++) {\n    var rowIndex = topRowIndex + drawCount;\n\n    if (node == bottomFold) {\n      // We've hit the bottom fold, we need to insert a new row.\n      var newNode = this.fetchRowNode_(rowIndex);\n      if (!newNode) {\n        console.log(\"Couldn't fetch row index: \" + rowIndex);\n        break;\n      }\n\n      this.rowNodes_.insertBefore(newNode, node);\n      continue;\n    }\n\n    if (node.rowIndex == rowIndex) {\n      // This node is in the right place, move along.\n      node = node.nextSibling;\n      continue;\n    }\n\n    if (selectionStartRow && selectionStartRow.rowIndex == rowIndex) {\n      // The selection start row is supposed to be here, remove nodes until\n      // we find it.\n      removeUntilNode(node, selectionStartRow);\n      node = selectionStartRow.nextSibling;\n      continue;\n    }\n\n    if (selectionEndRow && selectionEndRow.rowIndex == rowIndex) {\n      // The selection end row is supposed to be here, remove nodes until\n      // we find it.\n      removeUntilNode(node, selectionEndRow);\n      node = selectionEndRow.nextSibling;\n      continue;\n    }\n\n    if (node == selectionStartRow || node == selectionEndRow) {\n      // We encountered the start/end of the selection, but we don't want it\n      // yet.  Insert a new row instead.\n      var newNode = this.fetchRowNode_(rowIndex);\n      if (!newNode) {\n        console.log(\"Couldn't fetch row index: \" + rowIndex);\n        break;\n      }\n\n      this.rowNodes_.insertBefore(newNode, node);\n      continue;\n    }\n\n    // There is nothing special about this node, but it's in our way.  Replace\n    // it with the node that should be here.\n    var newNode = this.fetchRowNode_(rowIndex);\n    if (!newNode) {\n      console.log(\"Couldn't fetch row index: \" + rowIndex);\n      break;\n    }\n\n    if (node == newNode) {\n      node = node.nextSibling;\n      continue;\n    }\n\n    this.rowNodes_.insertBefore(newNode, node);\n    this.rowNodes_.removeChild(node);\n    node = newNode.nextSibling;\n  }\n\n  if (node != this.bottomFold_)\n    removeUntilNode(node, bottomFold);\n};\n\n/**\n * Ensure aria-hidden is set on any selection rows that are offscreen.\n *\n * The attribute aria-hidden is set to 'true' so that hidden rows are ignored\n * by screen readers.  We keep a list of currently hidden rows so they can be\n * reset each time this function is called as the selection and/or scrolling\n * may have changed.\n *\n * @param {number} topRowIndex Index of top row on screen.\n * @param {number} bottomRowIndex Index of bottom row on screen.\n */\nhterm.ScrollPort.prototype.ariaHideOffscreenSelectionRows_ = function(\n    topRowIndex, bottomRowIndex) {\n  // Reset previously hidden selection rows.\n  const hiddenRows = this.ariaHiddenSelectionRows_;\n  let row;\n  while ((row = hiddenRows.pop())) {\n    row.removeAttribute('aria-hidden');\n  }\n\n  function checkRow(row) {\n    if (row && (row.rowIndex < topRowIndex || row.rowIndex > bottomRowIndex)) {\n      row.setAttribute('aria-hidden', 'true');\n      hiddenRows.push(row);\n    }\n  }\n  checkRow(this.selection.startRow);\n  checkRow(this.selection.endRow);\n};\n\n/**\n * Empty out both select bags and remove them from the document.\n *\n * These nodes hold the text between the start and end of the selection\n * when that text is otherwise off screen.  They are filled out in the\n * onCopy_ event.\n */\nhterm.ScrollPort.prototype.resetSelectBags_ = function() {\n  if (this.topSelectBag_.parentNode) {\n    this.topSelectBag_.textContent = '';\n    this.topSelectBag_.parentNode.removeChild(this.topSelectBag_);\n  }\n\n  if (this.bottomSelectBag_.parentNode) {\n    this.bottomSelectBag_.textContent = '';\n    this.bottomSelectBag_.parentNode.removeChild(this.bottomSelectBag_);\n  }\n};\n\n/**\n * Place a row node in the cache of visible nodes.\n *\n * This method may only be used during a redraw_.\n *\n * @param {!Node} rowNode\n */\nhterm.ScrollPort.prototype.cacheRowNode_ = function(rowNode) {\n  this.currentRowNodeCache_[rowNode.rowIndex] = rowNode;\n};\n\n/**\n * Fetch the row node for the given index.\n *\n * This will return a node from the cache if possible, or will request one\n * from the RowProvider if not.\n *\n * If a redraw_ is in progress the row will be added to the current cache.\n *\n * @param {number} rowIndex\n * @return {!Node}\n */\nhterm.ScrollPort.prototype.fetchRowNode_ = function(rowIndex) {\n  var node;\n\n  if (this.previousRowNodeCache_ && rowIndex in this.previousRowNodeCache_) {\n    node = this.previousRowNodeCache_[rowIndex];\n  } else {\n    node = this.rowProvider_.getRowNode(rowIndex);\n  }\n\n  if (this.currentRowNodeCache_)\n    this.cacheRowNode_(node);\n\n  return node;\n};\n\n/**\n * Select all rows in the viewport.\n */\nhterm.ScrollPort.prototype.selectAll = function() {\n  var firstRow;\n\n  if (this.topFold_.nextSibling.rowIndex != 0) {\n    while (this.topFold_.previousSibling) {\n      this.rowNodes_.removeChild(this.topFold_.previousSibling);\n    }\n\n    firstRow = this.fetchRowNode_(0);\n    this.rowNodes_.insertBefore(firstRow, this.topFold_);\n    this.syncRowNodesDimensions_();\n  } else {\n    firstRow = this.topFold_.nextSibling;\n  }\n\n  var lastRowIndex = this.rowProvider_.getRowCount() - 1;\n  var lastRow;\n\n  if (this.bottomFold_.previousSibling.rowIndex != lastRowIndex) {\n    while (this.bottomFold_.nextSibling) {\n      this.rowNodes_.removeChild(this.bottomFold_.nextSibling);\n    }\n\n    lastRow = this.fetchRowNode_(lastRowIndex);\n    this.rowNodes_.appendChild(lastRow);\n  } else {\n    lastRow = this.bottomFold_.previousSibling.rowIndex;\n  }\n\n  var selection = this.document_.getSelection();\n  selection.collapse(firstRow, 0);\n  selection.extend(lastRow, lastRow.childNodes.length);\n\n  this.selection.sync();\n};\n\n/**\n * Return the maximum scroll position in pixels.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getScrollMax_ = function() {\n  return (hterm.getClientHeight(this.scrollArea_) +\n          this.visibleRowTopMargin + this.visibleRowBottomMargin -\n          hterm.getClientHeight(lib.notNull(this.screen_)));\n};\n\n/**\n * Scroll the given rowIndex to the top of the hterm.ScrollPort.\n *\n * @param {number} rowIndex Index of the target row.\n */\nhterm.ScrollPort.prototype.scrollRowToTop = function(rowIndex) {\n  this.syncScrollHeight();\n\n  this.isScrolledEnd = (\n    rowIndex + this.visibleRowCount >= this.lastRowCount_);\n\n  var scrollTop = rowIndex * this.characterSize.height +\n      this.visibleRowTopMargin;\n\n  var scrollMax = this.getScrollMax_();\n  if (scrollTop > scrollMax)\n    scrollTop = scrollMax;\n\n  if (this.screen_.scrollTop == scrollTop)\n    return;\n\n  this.screen_.scrollTop = scrollTop;\n  this.scheduleRedraw();\n};\n\n/**\n * Scroll the given rowIndex to the bottom of the hterm.ScrollPort.\n *\n * @param {number} rowIndex Index of the target row.\n */\nhterm.ScrollPort.prototype.scrollRowToBottom = function(rowIndex) {\n  this.syncScrollHeight();\n\n  this.isScrolledEnd = (\n    rowIndex + this.visibleRowCount >= this.lastRowCount_);\n\n  var scrollTop = rowIndex * this.characterSize.height +\n      this.visibleRowTopMargin + this.visibleRowBottomMargin;\n  scrollTop -= this.visibleRowCount * this.characterSize.height;\n\n  if (scrollTop < 0)\n    scrollTop = 0;\n\n  if (this.screen_.scrollTop == scrollTop)\n    return;\n\n  this.screen_.scrollTop = scrollTop;\n};\n\n/**\n * Return the row index of the first visible row.\n *\n * This is based on the scroll position.  If a redraw_ is in progress this\n * returns the row that *should* be at the top.\n *\n * @return {number}\n */\nhterm.ScrollPort.prototype.getTopRowIndex = function() {\n  return Math.round(this.screen_.scrollTop / this.characterSize.height);\n};\n\n/**\n * Return the row index of the last visible row.\n *\n * This is based on the scroll position.  If a redraw_ is in progress this\n * returns the row that *should* be at the bottom.\n *\n * @param {number} topRowIndex\n * @return {number}\n */\nhterm.ScrollPort.prototype.getBottomRowIndex = function(topRowIndex) {\n  return topRowIndex + this.visibleRowCount - 1;\n};\n\n/**\n * Handler for scroll events.\n *\n * The onScroll event fires when scrollArea's scrollTop property changes.  This\n * may be due to the user manually move the scrollbar, or a programmatic change.\n *\n * @param {!Event} e\n */\nhterm.ScrollPort.prototype.onScroll_ = function(e) {\n  var screenSize = this.getScreenSize();\n  if (screenSize.width != this.lastScreenWidth_ ||\n      screenSize.height != this.lastScreenHeight_) {\n    // This event may also fire during a resize (but before the resize event!).\n    // This happens when the browser moves the scrollbar as part of the resize.\n    // In these cases, we want to ignore the scroll event and let onResize\n    // handle things.  If we don't, then we end up scrolling to the wrong\n    // position after a resize.\n    this.resize();\n    return;\n  }\n\n  this.redraw_();\n  this.publish('scroll', { scrollPort: this });\n};\n\n/**\n * Clients can override this if they want to hear scrollwheel events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!WheelEvent} e\n */\nhterm.ScrollPort.prototype.onScrollWheel = function(e) {};\n\n/**\n * Handler for scroll-wheel events.\n *\n * The onScrollWheel event fires when the user moves their scrollwheel over this\n * hterm.ScrollPort.  Because the frontmost element in the hterm.ScrollPort is\n * a fixed position DIV, the scroll wheel does nothing by default.  Instead, we\n * have to handle it manually.\n *\n * @param {!WheelEvent} e\n */\nhterm.ScrollPort.prototype.onScrollWheel_ = function(e) {\n  this.onScrollWheel(e);\n\n  // Ignore the event if it was already handled (preventDefault was called),\n  // or if it is non-cancelable since preventDefault is ignored for these.\n  // See https://crbug.com/894223 where blink sends non-cancelable touchpad\n  // scrollWheel events.\n  if (e.defaultPrevented || !e.cancelable)\n    return;\n\n  // Figure out how far this event wants us to scroll.\n  const delta = this.scrollWheelDelta(e);\n\n  let top = this.screen_.scrollTop - delta.y;\n  if (top < 0)\n    top = 0;\n\n  var scrollMax = this.getScrollMax_();\n  if (top > scrollMax)\n    top = scrollMax;\n\n  if (top != this.screen_.scrollTop) {\n    // Moving scrollTop causes a scroll event, which triggers the redraw.\n    this.screen_.scrollTop = top;\n\n    // Only preventDefault when we've actually scrolled.  If there's nothing\n    // to scroll we want to pass the event through so Chrome can detect the\n    // overscroll.\n    e.preventDefault();\n  }\n};\n\n/**\n * Calculate how far a wheel event should scroll.\n *\n * This normalizes the browser's concept of a scroll (pixels, lines, etc...)\n * into a standard pixel distance.\n *\n * @param {!WheelEvent} e The mouse wheel event to process.\n * @return {{x:number, y:number}} The x & y of how far (in pixels) to scroll.\n */\nhterm.ScrollPort.prototype.scrollWheelDelta = function(e) {\n  const delta = {x: 0, y: 0};\n\n  switch (e.deltaMode) {\n    case WheelEvent.DOM_DELTA_PIXEL:\n      delta.x = e.deltaX * this.scrollWheelMultiplier_;\n      delta.y = e.deltaY * this.scrollWheelMultiplier_;\n      break;\n    case WheelEvent.DOM_DELTA_LINE:\n      delta.x = e.deltaX * this.characterSize.width;\n      delta.y = e.deltaY * this.characterSize.height;\n      break;\n    case WheelEvent.DOM_DELTA_PAGE:\n      delta.x = e.deltaX * this.characterSize.width *\n          hterm.getClientWidth(lib.notNull(this.screen_));\n      delta.y = e.deltaY * this.characterSize.height *\n          hterm.getClientHeight(lib.notNull(this.screen_));\n      break;\n  }\n\n  // The Y sign is inverted from what we would expect: up/down are\n  // negative/positive respectively.  The X sign is sane though: left/right\n  // are negative/positive respectively.\n  delta.y *= -1;\n\n  return delta;\n};\n\n/**\n * Clients can override this if they want to hear touch events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!TouchEvent} e\n */\nhterm.ScrollPort.prototype.onTouch = function(e) {};\n\n/**\n * Handler for touch events.\n *\n * @param {!TouchEvent} e\n */\nhterm.ScrollPort.prototype.onTouch_ = function(e) {\n  this.onTouch(e);\n\n  if (e.defaultPrevented)\n    return;\n\n  // Extract the fields from the Touch event that we need.  If we saved the\n  // event directly, it has references to other objects (like x-row) that\n  // might stick around for a long time.  This way we only have small objects\n  // in our lastTouch_ state.\n  var scrubTouch = function(t) {\n    return {\n      id: t.identifier,\n      y: t.clientY,\n      x: t.clientX,\n    };\n  };\n\n  var i, touch;\n  switch (e.type) {\n    case 'touchstart':\n      // Workaround focus bug on CrOS if possible.\n      // TODO(vapier): Drop this once https://crbug.com/919222 is fixed.\n      if (hterm.os == 'cros' && window.chrome && chrome.windows) {\n        chrome.windows.getCurrent((win) => {\n          if (!win.focused) {\n            chrome.windows.update(win.id, {focused: true});\n          }\n        });\n      }\n\n      // Save the current set of touches.\n      for (i = 0; i < e.changedTouches.length; ++i) {\n        touch = scrubTouch(e.changedTouches[i]);\n        this.lastTouch_[touch.id] = touch;\n      }\n      break;\n\n    case 'touchcancel':\n    case 'touchend':\n      // Throw away existing touches that we're finished with.\n      for (i = 0; i < e.changedTouches.length; ++i)\n        delete this.lastTouch_[e.changedTouches[i].identifier];\n      break;\n\n    case 'touchmove':\n      // Walk all of the touches in this one event and merge all of their\n      // changes into one delta.  This lets multiple fingers scroll faster.\n      var delta = 0;\n      for (i = 0; i < e.changedTouches.length; ++i) {\n        touch = scrubTouch(e.changedTouches[i]);\n        delta += (this.lastTouch_[touch.id].y - touch.y);\n        this.lastTouch_[touch.id] = touch;\n      }\n\n      // Invert to match the touchscreen scrolling direction of browser windows.\n      delta *= -1;\n\n      var top = this.screen_.scrollTop - delta;\n      if (top < 0)\n        top = 0;\n\n      var scrollMax = this.getScrollMax_();\n      if (top > scrollMax)\n        top = scrollMax;\n\n      if (top != this.screen_.scrollTop) {\n        // Moving scrollTop causes a scroll event, which triggers the redraw.\n        this.screen_.scrollTop = top;\n      }\n      break;\n  }\n\n  // To disable gestures or anything else interfering with our scrolling.\n  e.preventDefault();\n};\n\n/**\n * Handler for resize events.\n *\n * The browser will resize us such that the top row stays at the top, but we\n * prefer to the bottom row to stay at the bottom.\n *\n * @param {!FocusEvent} e\n */\nhterm.ScrollPort.prototype.onResize_ = function(e) {\n  // Re-measure, since onResize also happens for browser zoom changes.\n  this.syncCharacterSize();\n};\n\n/**\n * Clients can override this if they want to hear copy events.\n *\n * Clients may call event.preventDefault() if they want to keep the scrollport\n * from also handling the events.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onCopy = function(e) { };\n\n/**\n * Handler for copy-to-clipboard events.\n *\n * If some or all of the selected rows are off screen we may need to fill in\n * the rows between selection start and selection end.  This handler determines\n * if we're missing some of the selected text, and if so populates one or both\n * of the \"select bags\" with the missing text.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onCopy_ = function(e) {\n  this.onCopy(e);\n\n  if (e.defaultPrevented)\n    return;\n\n  this.resetSelectBags_();\n  this.selection.sync();\n\n  if (this.selection.isCollapsed ||\n      this.selection.endRow.rowIndex - this.selection.startRow.rowIndex < 2) {\n    return;\n  }\n\n  var topRowIndex = this.getTopRowIndex();\n  var bottomRowIndex = this.getBottomRowIndex(topRowIndex);\n\n  if (this.selection.startRow.rowIndex < topRowIndex) {\n    // Start of selection is above the top fold.\n    var endBackfillIndex;\n\n    if (this.selection.endRow.rowIndex < topRowIndex) {\n      // Entire selection is above the top fold.\n      endBackfillIndex = this.selection.endRow.rowIndex;\n    } else {\n      // Selection extends below the top fold.\n      endBackfillIndex = this.topFold_.nextSibling.rowIndex;\n    }\n\n    this.topSelectBag_.textContent = this.rowProvider_.getRowsText(\n        this.selection.startRow.rowIndex + 1, endBackfillIndex);\n    this.rowNodes_.insertBefore(this.topSelectBag_,\n                                this.selection.startRow.nextSibling);\n    this.syncRowNodesDimensions_();\n  }\n\n  if (this.selection.endRow.rowIndex > bottomRowIndex) {\n    // Selection ends below the bottom fold.\n    var startBackfillIndex;\n\n    if (this.selection.startRow.rowIndex > bottomRowIndex) {\n      // Entire selection is below the bottom fold.\n      startBackfillIndex = this.selection.startRow.rowIndex + 1;\n    } else {\n      // Selection starts above the bottom fold.\n      startBackfillIndex = this.bottomFold_.previousSibling.rowIndex + 1;\n    }\n\n    this.bottomSelectBag_.textContent = this.rowProvider_.getRowsText(\n        startBackfillIndex, this.selection.endRow.rowIndex);\n    this.rowNodes_.insertBefore(this.bottomSelectBag_, this.selection.endRow);\n  }\n};\n\n/**\n * Focuses on the paste target on a ctrl-v keydown event, as in\n * FF a content editable element must be focused before the paste event.\n *\n * @param {!KeyboardEvent} e\n */\nhterm.ScrollPort.prototype.onBodyKeyDown_ = function(e) {\n  if (!this.ctrlVPaste)\n    return;\n\n  if ((e.ctrlKey || e.metaKey) && e.keyCode == 86 /* 'V' */)\n    this.pasteTarget_.focus();\n};\n\n/**\n * Handle a paste event on the the ScrollPort's screen element.\n *\n * TODO: Handle ClipboardData.files transfers.  https://crbug.com/433581.\n *\n * @param {!ClipboardEvent} e\n */\nhterm.ScrollPort.prototype.onPaste_ = function(e) {\n  this.pasteTarget_.focus();\n\n  var self = this;\n  setTimeout(function() {\n      self.publish('paste', { text: self.pasteTarget_.value });\n      self.pasteTarget_.value = '';\n      self.focus();\n    }, 0);\n};\n\n/**\n * Handles a textInput event on the paste target. Stops this from\n * propagating as we want this to be handled in the onPaste_ method.\n *\n * @param {!Event} e\n */\nhterm.ScrollPort.prototype.handlePasteTargetTextInput_ = function(e) {\n  e.stopPropagation();\n};\n\n/**\n * Handle a drop event on the the ScrollPort's screen element.\n *\n * By default we try to copy in the structured format (HTML/whatever).\n * The shift key can select plain text though.\n *\n * TODO: Handle DataTransfer.files transfers.  https://crbug.com/433581.\n *\n * @param {!DragEvent} e The drag event that fired us.\n */\nhterm.ScrollPort.prototype.onDragAndDrop_ = function(e) {\n  if (!this.pasteOnDrop)\n    return;\n\n  e.preventDefault();\n\n  let data;\n  let format;\n\n  // If the shift key active, try to find a \"rich\" text source (but not plain\n  // text).  e.g. text/html is OK.\n  if (e.shiftKey) {\n    e.dataTransfer.types.forEach((t) => {\n      if (!format && t != 'text/plain' && t.startsWith('text/'))\n        format = t;\n    });\n\n    // If we found a non-plain text source, try it out first.\n    if (format)\n      data = e.dataTransfer.getData(format);\n  }\n\n  // If we haven't loaded anything useful, fall back to plain text.\n  if (!data)\n    data = e.dataTransfer.getData('text/plain');\n\n  if (data)\n    this.publish('paste', {text: data});\n};\n\n/**\n * Set the vertical scrollbar mode of the ScrollPort.\n *\n * @param {boolean} state\n */\nhterm.ScrollPort.prototype.setScrollbarVisible = function(state) {\n  this.screen_.style.overflowY = state ? 'scroll' : 'hidden';\n};\n\n/**\n * Set scroll wheel multiplier. This alters how much the screen scrolls on\n * mouse wheel events.\n *\n * @param {number} multiplier\n */\nhterm.ScrollPort.prototype.setScrollWheelMoveMultipler = function(multiplier) {\n  this.scrollWheelMultiplier_ = multiplier;\n};\n// SOURCE FILE: hterm/js/hterm_terminal.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for the Terminal class.\n *\n * A Terminal pulls together the hterm.ScrollPort, hterm.Screen and hterm.VT100\n * classes to provide the complete terminal functionality.\n *\n * There are a number of lower-level Terminal methods that can be called\n * directly to manipulate the cursor, text, scroll region, and other terminal\n * attributes.  However, the primary method is interpret(), which parses VT\n * escape sequences and invokes the appropriate Terminal methods.\n *\n * This class was heavily influenced by Cory Maccarrone's Framebuffer class.\n *\n * TODO(rginda): Eventually we're going to need to support characters which are\n * displayed twice as wide as standard latin characters.  This is to support\n * CJK (and possibly other character sets).\n *\n * @param {?string=} profileId Optional preference profile name.  If not\n *     provided or null, defaults to 'default'.\n * @constructor\n * @implements {hterm.RowProvider}\n */\nhterm.Terminal = function(profileId) {\n  this.profileId_ = null;\n\n  /** @type {?hterm.PreferenceManager} */\n  this.prefs_ = null;\n\n  // Two screen instances.\n  this.primaryScreen_ = new hterm.Screen();\n  this.alternateScreen_ = new hterm.Screen();\n\n  // The \"current\" screen.\n  this.screen_ = this.primaryScreen_;\n\n  // The local notion of the screen size.  ScreenBuffers also have a size which\n  // indicates their present size.  During size changes, the two may disagree.\n  // Also, the inactive screen's size is not altered until it is made the active\n  // screen.\n  this.screenSize = new hterm.Size(0, 0);\n\n  // The scroll port we'll be using to display the visible rows.\n  this.scrollPort_ = new hterm.ScrollPort(this);\n  this.scrollPort_.subscribe('resize', this.onResize_.bind(this));\n  this.scrollPort_.subscribe('scroll', this.onScroll_.bind(this));\n  this.scrollPort_.subscribe('paste', this.onPaste_.bind(this));\n  this.scrollPort_.subscribe('focus', this.onScrollportFocus_.bind(this));\n  this.scrollPort_.onCopy = this.onCopy_.bind(this);\n\n  // The div that contains this terminal.\n  this.div_ = null;\n\n  // The document that contains the scrollPort.  Defaulted to the global\n  // document here so that the terminal is functional even if it hasn't been\n  // inserted into a document yet, but re-set in decorate().\n  this.document_ = window.document;\n\n  // The rows that have scrolled off screen and are no longer addressable.\n  this.scrollbackRows_ = [];\n\n  // Saved tab stops.\n  this.tabStops_ = [];\n\n  // Keep track of whether default tab stops have been erased; after a TBC\n  // clears all tab stops, defaults aren't restored on resize until a reset.\n  this.defaultTabStops = true;\n\n  // The VT's notion of the top and bottom rows.  Used during some VT\n  // cursor positioning and scrolling commands.\n  this.vtScrollTop_ = null;\n  this.vtScrollBottom_ = null;\n\n  // The DIV element for the visible cursor.\n  this.cursorNode_ = null;\n\n  // The current cursor shape of the terminal.\n  this.cursorShape_ = hterm.Terminal.cursorShape.BLOCK;\n\n  // Cursor blink on/off cycle in ms, overwritten by prefs once they're loaded.\n  this.cursorBlinkCycle_ = [100, 100];\n\n  // Whether to temporarily disable blinking.\n  this.cursorBlinkPause_ = false;\n\n  // Pre-bound onCursorBlink_ handler, so we don't have to do this for each\n  // cursor on/off servicing.\n  this.myOnCursorBlink_ = this.onCursorBlink_.bind(this);\n\n  // These prefs are cached so we don't have to read from local storage with\n  // each output and keystroke.  They are initialized by the preference manager.\n  /** @type {string} */\n  this.backgroundColor_ = '';\n  /** @type {string} */\n  this.foregroundColor_ = '';\n  this.scrollOnOutput_ = null;\n  this.scrollOnKeystroke_ = null;\n  this.scrollWheelArrowKeys_ = null;\n\n  // True if we should override mouse event reporting to allow local selection.\n  this.defeatMouseReports_ = false;\n\n  // Whether to auto hide the mouse cursor when typing.\n  this.setAutomaticMouseHiding();\n  // Timer to keep mouse visible while it's being used.\n  this.mouseHideDelay_ = null;\n\n  // Terminal bell sound.\n  this.bellAudio_ = this.document_.createElement('audio');\n  this.bellAudio_.id = 'hterm:bell-audio';\n  this.bellAudio_.setAttribute('preload', 'auto');\n\n  // The AccessibilityReader object for announcing command output.\n  this.accessibilityReader_ = null;\n\n  // The context menu object.\n  this.contextMenu = new hterm.ContextMenu();\n\n  // All terminal bell notifications that have been generated (not necessarily\n  // shown).\n  this.bellNotificationList_ = [];\n  this.bellSquelchTimeout_ = null;\n\n  // Whether we have permission to display notifications.\n  this.desktopNotificationBell_ = false;\n\n  // Cursor position and attributes saved with DECSC.\n  this.savedOptions_ = {};\n\n  // The current mode bits for the terminal.\n  this.options_ = new hterm.Options();\n\n  // Timeouts we might need to clear.\n  this.timeouts_ = {};\n\n  // The VT escape sequence interpreter.\n  this.vt = new hterm.VT(this);\n\n  this.saveCursorAndState(true);\n\n  // The keyboard handler.\n  this.keyboard = new hterm.Keyboard(this);\n\n  // General IO interface that can be given to third parties without exposing\n  // the entire terminal object.\n  this.io = new hterm.Terminal.IO(this);\n\n  // True if mouse-click-drag should scroll the terminal.\n  this.enableMouseDragScroll = true;\n\n  this.copyOnSelect = null;\n  this.mouseRightClickPaste = null;\n  this.mousePasteButton = null;\n\n  // Whether to use the default window copy behavior.\n  this.useDefaultWindowCopy = false;\n\n  this.clearSelectionAfterCopy = true;\n\n  this.realizeSize_(80, 24);\n  this.setDefaultTabStops();\n\n  // Whether we allow images to be shown.\n  this.allowImagesInline = null;\n\n  this.reportFocus = false;\n\n  this.setProfile(profileId || 'default',\n                  function() { this.onTerminalReady(); }.bind(this));\n};\n\n/**\n * Possible cursor shapes.\n */\nhterm.Terminal.cursorShape = {\n  BLOCK: 'BLOCK',\n  BEAM: 'BEAM',\n  UNDERLINE: 'UNDERLINE'\n};\n\n/**\n * Clients should override this to be notified when the terminal is ready\n * for use.\n *\n * The terminal initialization is asynchronous, and shouldn't be used before\n * this method is called.\n */\nhterm.Terminal.prototype.onTerminalReady = function() { };\n\n/**\n * Default tab with of 8 to match xterm.\n */\nhterm.Terminal.prototype.tabWidth = 8;\n\n/**\n * Select a preference profile.\n *\n * This will load the terminal preferences for the given profile name and\n * associate subsequent preference changes with the new preference profile.\n *\n * @param {string} profileId The name of the preference profile.  Forward slash\n *     characters will be removed from the name.\n * @param {function()=} opt_callback Optional callback to invoke when the\n *     profile transition is complete.\n */\nhterm.Terminal.prototype.setProfile = function(profileId, opt_callback) {\n  this.profileId_ = profileId.replace(/\\//g, '');\n\n  var terminal = this;\n\n  if (this.prefs_)\n    this.prefs_.deactivate();\n\n  this.prefs_ = new hterm.PreferenceManager(this.profileId_);\n  this.prefs_.addObservers(null, {\n    'alt-gr-mode': function(v) {\n      if (v == null) {\n        if (navigator.language.toLowerCase() == 'en-us') {\n          v = 'none';\n        } else {\n          v = 'right-alt';\n        }\n      } else if (typeof v == 'string') {\n        v = v.toLowerCase();\n      } else {\n        v = 'none';\n      }\n\n      if (!/^(none|ctrl-alt|left-alt|right-alt)$/.test(v))\n        v = 'none';\n\n      terminal.keyboard.altGrMode = v;\n    },\n\n    'alt-backspace-is-meta-backspace': function(v) {\n      terminal.keyboard.altBackspaceIsMetaBackspace = v;\n    },\n\n    'alt-is-meta': function(v) {\n      terminal.keyboard.altIsMeta = v;\n    },\n\n    'alt-sends-what': function(v) {\n      if (!/^(escape|8-bit|browser-key)$/.test(v))\n        v = 'escape';\n\n      terminal.keyboard.altSendsWhat = v;\n    },\n\n    'audible-bell-sound': function(v) {\n      var ary = v.match(/^lib-resource:(\\S+)/);\n      if (ary) {\n        terminal.bellAudio_.setAttribute('src',\n                                         lib.resource.getDataUrl(ary[1]));\n      } else {\n        terminal.bellAudio_.setAttribute('src', v);\n      }\n    },\n\n    'desktop-notification-bell': function(v) {\n      if (v && Notification) {\n        terminal.desktopNotificationBell_ =\n            Notification.permission === 'granted';\n        if (!terminal.desktopNotificationBell_) {\n          // Note: We don't call Notification.requestPermission here because\n          // Chrome requires the call be the result of a user action (such as an\n          // onclick handler), and pref listeners are run asynchronously.\n          //\n          // A way of working around this would be to display a dialog in the\n          // terminal with a \"click-to-request-permission\" button.\n          console.warn('desktop-notification-bell is true but we do not have ' +\n                       'permission to display notifications.');\n        }\n      } else {\n        terminal.desktopNotificationBell_ = false;\n      }\n    },\n\n    'background-color': function(v) {\n      terminal.setBackgroundColor(v);\n    },\n\n    'background-image': function(v) {\n      terminal.scrollPort_.setBackgroundImage(v);\n    },\n\n    'background-size': function(v) {\n      terminal.scrollPort_.setBackgroundSize(v);\n    },\n\n    'background-position': function(v) {\n      terminal.scrollPort_.setBackgroundPosition(v);\n    },\n\n    'backspace-sends-backspace': function(v) {\n      terminal.keyboard.backspaceSendsBackspace = v;\n    },\n\n    'character-map-overrides': function(v) {\n      if (!(v == null || v instanceof Object)) {\n        console.warn('Preference character-map-modifications is not an ' +\n                     'object: ' + v);\n        return;\n      }\n\n      terminal.vt.characterMaps.reset();\n      terminal.vt.characterMaps.setOverrides(v);\n    },\n\n    'cursor-blink': function(v) {\n      terminal.setCursorBlink(!!v);\n    },\n\n    'cursor-shape': function(v) {\n      terminal.setCursorShape(v);\n    },\n\n    'cursor-blink-cycle': function(v) {\n        if (v instanceof Array &&\n            typeof v[0] == 'number' &&\n            typeof v[1] == 'number') {\n          terminal.cursorBlinkCycle_ = v;\n        } else if (typeof v == 'number') {\n          terminal.cursorBlinkCycle_ = [v, v];\n        } else {\n          // Fast blink indicates an error.\n          terminal.cursorBlinkCycle_ = [100, 100];\n        }\n    },\n\n    'cursor-color': function(v) {\n      terminal.setCursorColor(v);\n    },\n\n    'color-palette-overrides': function(v) {\n      if (!(v == null || v instanceof Object || v instanceof Array)) {\n        console.warn('Preference color-palette-overrides is not an array or ' +\n                     'object: ' + v);\n        return;\n      }\n\n      lib.colors.colorPalette = lib.colors.stockColorPalette.concat();\n\n      if (v) {\n        for (var key in v) {\n          var i = parseInt(key, 10);\n          if (isNaN(i) || i < 0 || i > 255) {\n            console.log('Invalid value in palette: ' + key + ': ' + v[key]);\n            continue;\n          }\n\n          if (v[i]) {\n            var rgb = lib.colors.normalizeCSS(v[i]);\n            if (rgb)\n              lib.colors.colorPalette[i] = rgb;\n          }\n        }\n      }\n\n      terminal.primaryScreen_.textAttributes.resetColorPalette();\n      terminal.alternateScreen_.textAttributes.resetColorPalette();\n    },\n\n    'copy-on-select': function(v) {\n      terminal.copyOnSelect = !!v;\n    },\n\n    'use-default-window-copy': function(v) {\n      terminal.useDefaultWindowCopy = !!v;\n    },\n\n    'clear-selection-after-copy': function(v) {\n      terminal.clearSelectionAfterCopy = !!v;\n    },\n\n    'ctrl-plus-minus-zero-zoom': function(v) {\n      terminal.keyboard.ctrlPlusMinusZeroZoom = v;\n    },\n\n    'ctrl-c-copy': function(v) {\n      terminal.keyboard.ctrlCCopy = v;\n    },\n\n    'ctrl-v-paste': function(v) {\n      terminal.keyboard.ctrlVPaste = v;\n      terminal.scrollPort_.setCtrlVPaste(v);\n    },\n\n    'paste-on-drop': function(v) {\n      terminal.scrollPort_.setPasteOnDrop(v);\n    },\n\n    'east-asian-ambiguous-as-two-column': function(v) {\n      lib.wc.regardCjkAmbiguous = v;\n    },\n\n    'enable-8-bit-control': function(v) {\n      terminal.vt.enable8BitControl = !!v;\n    },\n\n    'enable-bold': function(v) {\n      terminal.syncBoldSafeState();\n    },\n\n    'enable-bold-as-bright': function(v) {\n      terminal.primaryScreen_.textAttributes.enableBoldAsBright = !!v;\n      terminal.alternateScreen_.textAttributes.enableBoldAsBright = !!v;\n    },\n\n    'enable-blink': function(v) {\n      terminal.setTextBlink(!!v);\n    },\n\n    'enable-clipboard-write': function(v) {\n      terminal.vt.enableClipboardWrite = !!v;\n    },\n\n    'enable-dec12': function(v) {\n      terminal.vt.enableDec12 = !!v;\n    },\n\n    'enable-csi-j-3': function(v) {\n      terminal.vt.enableCsiJ3 = !!v;\n    },\n\n    'font-family': function(v) {\n      terminal.syncFontFamily();\n    },\n\n    'font-size': function(v) {\n      v = parseInt(v, 10);\n      if (v <= 0) {\n        console.error(`Invalid font size: ${v}`);\n        return;\n      }\n\n      terminal.setFontSize(v);\n    },\n\n    'font-smoothing': function(v) {\n      terminal.syncFontFamily();\n    },\n\n    'foreground-color': function(v) {\n      terminal.setForegroundColor(v);\n    },\n\n    'hide-mouse-while-typing': function(v) {\n      terminal.setAutomaticMouseHiding(v);\n    },\n\n    'home-keys-scroll': function(v) {\n      terminal.keyboard.homeKeysScroll = v;\n    },\n\n    'keybindings': function(v) {\n      terminal.keyboard.bindings.clear();\n\n      if (!v)\n        return;\n\n      if (!(v instanceof Object)) {\n        console.error('Error in keybindings preference: Expected object');\n        return;\n      }\n\n      try {\n        terminal.keyboard.bindings.addBindings(v);\n      } catch (ex) {\n        console.error('Error in keybindings preference: ' + ex);\n      }\n    },\n\n    'media-keys-are-fkeys': function(v) {\n      terminal.keyboard.mediaKeysAreFKeys = v;\n    },\n\n    'meta-sends-escape': function(v) {\n      terminal.keyboard.metaSendsEscape = v;\n    },\n\n    'mouse-right-click-paste': function(v) {\n      terminal.mouseRightClickPaste = v;\n    },\n\n    'mouse-paste-button': function(v) {\n      terminal.syncMousePasteButton();\n    },\n\n    'page-keys-scroll': function(v) {\n      terminal.keyboard.pageKeysScroll = v;\n    },\n\n    'pass-alt-number': function(v) {\n      if (v == null) {\n        // Let Alt-1..9 pass to the browser (to control tab switching) on\n        // non-OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os != 'mac' && hterm.windowType != 'popup');\n      }\n\n      terminal.passAltNumber = v;\n    },\n\n    'pass-ctrl-number': function(v) {\n      if (v == null) {\n        // Let Ctrl-1..9 pass to the browser (to control tab switching) on\n        // non-OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os != 'mac' && hterm.windowType != 'popup');\n      }\n\n      terminal.passCtrlNumber = v;\n    },\n\n    'pass-meta-number': function(v) {\n      if (v == null) {\n        // Let Meta-1..9 pass to the browser (to control tab switching) on\n        // OS X systems, or if hterm is not opened in an app window.\n        v = (hterm.os == 'mac' && hterm.windowType != 'popup');\n      }\n\n      terminal.passMetaNumber = v;\n    },\n\n    'pass-meta-v': function(v) {\n      terminal.keyboard.passMetaV = v;\n    },\n\n    'receive-encoding': function(v) {\n       if (!(/^(utf-8|raw)$/).test(v)) {\n         console.warn('Invalid value for \"receive-encoding\": ' + v);\n         v = 'utf-8';\n       }\n\n       terminal.vt.characterEncoding = v;\n    },\n\n    'scroll-on-keystroke': function(v) {\n      terminal.scrollOnKeystroke_ = v;\n    },\n\n    'scroll-on-output': function(v) {\n      terminal.scrollOnOutput_ = v;\n    },\n\n    'scrollbar-visible': function(v) {\n      terminal.setScrollbarVisible(v);\n    },\n\n    'scroll-wheel-may-send-arrow-keys': function(v) {\n      terminal.scrollWheelArrowKeys_ = v;\n    },\n\n    'scroll-wheel-move-multiplier': function(v) {\n      terminal.setScrollWheelMoveMultipler(v);\n    },\n\n    'shift-insert-paste': function(v) {\n      terminal.keyboard.shiftInsertPaste = v;\n    },\n\n    'terminal-encoding': function(v) {\n      terminal.vt.setEncoding(v);\n    },\n\n    'user-css': function(v) {\n      terminal.scrollPort_.setUserCssUrl(v);\n    },\n\n    'user-css-text': function(v) {\n      terminal.scrollPort_.setUserCssText(v);\n    },\n\n    'word-break-match-left': function(v) {\n      terminal.primaryScreen_.wordBreakMatchLeft = v;\n      terminal.alternateScreen_.wordBreakMatchLeft = v;\n    },\n\n    'word-break-match-right': function(v) {\n      terminal.primaryScreen_.wordBreakMatchRight = v;\n      terminal.alternateScreen_.wordBreakMatchRight = v;\n    },\n\n    'word-break-match-middle': function(v) {\n      terminal.primaryScreen_.wordBreakMatchMiddle = v;\n      terminal.alternateScreen_.wordBreakMatchMiddle = v;\n    },\n\n    'allow-images-inline': function(v) {\n      terminal.allowImagesInline = v;\n    },\n  });\n\n  this.prefs_.readStorage(function() {\n    this.prefs_.notifyAll();\n\n    if (opt_callback)\n      opt_callback();\n  }.bind(this));\n};\n\n/**\n * Returns the preferences manager used for configuring this terminal.\n *\n * @return {!hterm.PreferenceManager}\n */\nhterm.Terminal.prototype.getPrefs = function() {\n  return lib.notNull(this.prefs_);\n};\n\n/**\n * Enable or disable bracketed paste mode.\n *\n * @param {boolean} state The value to set.\n */\nhterm.Terminal.prototype.setBracketedPaste = function(state) {\n  this.options_.bracketedPaste = state;\n};\n\n/**\n * Set the color for the cursor.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setCursorColor = function(color) {\n  if (color === undefined)\n    color = this.prefs_.getString('cursor-color');\n\n  this.setCssVar('cursor-color', color);\n};\n\n/**\n * Return the current cursor color as a string.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getCursorColor = function() {\n  return this.getCssVar('cursor-color');\n};\n\n/**\n * Enable or disable mouse based text selection in the terminal.\n *\n * @param {boolean} state The value to set.\n */\nhterm.Terminal.prototype.setSelectionEnabled = function(state) {\n  this.enableMouseDragScroll = state;\n};\n\n/**\n * Set the background color.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setBackgroundColor = function(color) {\n  if (color === undefined)\n    color = this.prefs_.getString('background-color');\n\n  this.backgroundColor_ = lib.colors.normalizeCSS(color) || '';\n  this.primaryScreen_.textAttributes.setDefaults(\n      this.foregroundColor_, this.backgroundColor_);\n  this.alternateScreen_.textAttributes.setDefaults(\n      this.foregroundColor_, this.backgroundColor_);\n  this.scrollPort_.setBackgroundColor(color);\n};\n\n/**\n * Return the current terminal background color.\n *\n * Intended for use by other classes, so we don't have to expose the entire\n * prefs_ object.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getBackgroundColor = function() {\n  return lib.notNull(this.backgroundColor_);\n};\n\n/**\n * Set the foreground color.\n *\n * If you want this setting to persist, set it through prefs_, rather than\n * with this method.\n *\n * @param {string=} color The color to set.  If not defined, we reset to the\n *     saved user preference.\n */\nhterm.Terminal.prototype.setForegroundColor = function(color) {\n  if (color === undefined)\n    color = this.prefs_.getString('foreground-color');\n\n  this.foregroundColor_ = lib.colors.normalizeCSS(color) || '';\n  this.primaryScreen_.textAttributes.setDefaults(\n      this.foregroundColor_, this.backgroundColor_);\n  this.alternateScreen_.textAttributes.setDefaults(\n      this.foregroundColor_, this.backgroundColor_);\n  this.scrollPort_.setForegroundColor(color);\n};\n\n/**\n * Return the current terminal foreground color.\n *\n * Intended for use by other classes, so we don't have to expose the entire\n * prefs_ object.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getForegroundColor = function() {\n  return lib.notNull(this.foregroundColor_);\n};\n\n/**\n * Create a new instance of a terminal command and run it with a given\n * argument string.\n *\n * @param {!Function} commandClass The constructor for a terminal command.\n * @param {string} commandName The command to run for this terminal.\n * @param {!Array<string>} args The arguments to pass to the command.\n */\nhterm.Terminal.prototype.runCommandClass = function(\n    commandClass, commandName, args) {\n  var environment = this.prefs_.get('environment');\n  if (typeof environment != 'object' || environment == null)\n    environment = {};\n\n  var self = this;\n  this.command = new commandClass(\n      {\n        commandName: commandName,\n        args: args,\n        io: this.io.push(),\n        environment: environment,\n        onExit: function(code) {\n          self.io.pop();\n          self.uninstallKeyboard();\n          self.div_.dispatchEvent(new CustomEvent('terminal-closing'));\n          if (self.prefs_.get('close-on-exit'))\n              window.close();\n        }\n      });\n\n  this.installKeyboard();\n  this.command.run();\n};\n\n/**\n * Returns true if the current screen is the primary screen, false otherwise.\n *\n * @return {boolean}\n */\nhterm.Terminal.prototype.isPrimaryScreen = function() {\n  return this.screen_ == this.primaryScreen_;\n};\n\n/**\n * Install the keyboard handler for this terminal.\n *\n * This will prevent the browser from seeing any keystrokes sent to the\n * terminal.\n */\nhterm.Terminal.prototype.installKeyboard = function() {\n  this.keyboard.installKeyboard(this.scrollPort_.getDocument().body);\n};\n\n/**\n * Uninstall the keyboard handler for this terminal.\n */\nhterm.Terminal.prototype.uninstallKeyboard = function() {\n  this.keyboard.installKeyboard(null);\n};\n\n/**\n * Set a CSS variable.\n *\n * Normally this is used to set variables in the hterm namespace.\n *\n * @param {string} name The variable to set.\n * @param {string|number} value The value to assign to the variable.\n * @param {string=} opt_prefix The variable namespace/prefix to use.\n */\nhterm.Terminal.prototype.setCssVar = function(name, value,\n                                              opt_prefix='--hterm-') {\n  this.document_.documentElement.style.setProperty(\n      `${opt_prefix}${name}`, value.toString());\n};\n\n/**\n * Get a CSS variable.\n *\n * Normally this is used to get variables in the hterm namespace.\n *\n * @param {string} name The variable to read.\n * @param {string=} opt_prefix The variable namespace/prefix to use.\n * @return {string} The current setting for this variable.\n */\nhterm.Terminal.prototype.getCssVar = function(name, opt_prefix='--hterm-') {\n  return this.document_.documentElement.style.getPropertyValue(\n      `${opt_prefix}${name}`);\n};\n\n/**\n * Set the font size for this terminal.\n *\n * Call setFontSize(0) to reset to the default font size.\n *\n * This function does not modify the font-size preference.\n *\n * @param {number} px The desired font size, in pixels.\n */\nhterm.Terminal.prototype.setFontSize = function(px) {\n  if (px <= 0)\n    px = this.prefs_.getNumber('font-size');\n\n  this.scrollPort_.setFontSize(px);\n  this.setCssVar('charsize-width', this.scrollPort_.characterSize.width + 'px');\n  this.setCssVar('charsize-height',\n                 this.scrollPort_.characterSize.height + 'px');\n};\n\n/**\n * Get the current font size.\n *\n * @return {number}\n */\nhterm.Terminal.prototype.getFontSize = function() {\n  return this.scrollPort_.getFontSize();\n};\n\n/**\n * Get the current font family.\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getFontFamily = function() {\n  return this.scrollPort_.getFontFamily();\n};\n\n/**\n * Set the CSS \"font-family\" for this terminal.\n */\nhterm.Terminal.prototype.syncFontFamily = function() {\n  this.scrollPort_.setFontFamily(this.prefs_.getString('font-family'),\n                                 this.prefs_.getString('font-smoothing'));\n  this.syncBoldSafeState();\n};\n\n/**\n * Set this.mousePasteButton based on the mouse-paste-button pref,\n * autodetecting if necessary.\n */\nhterm.Terminal.prototype.syncMousePasteButton = function() {\n  var button = this.prefs_.get('mouse-paste-button');\n  if (typeof button == 'number') {\n    this.mousePasteButton = button;\n    return;\n  }\n\n  if (hterm.os != 'linux') {\n    this.mousePasteButton = 1;  // Middle mouse button.\n  } else {\n    this.mousePasteButton = 2;  // Right mouse button.\n  }\n};\n\n/**\n * Enable or disable bold based on the enable-bold pref, autodetecting if\n * necessary.\n */\nhterm.Terminal.prototype.syncBoldSafeState = function() {\n  var enableBold = this.prefs_.get('enable-bold');\n  if (enableBold !== null) {\n    this.primaryScreen_.textAttributes.enableBold = enableBold;\n    this.alternateScreen_.textAttributes.enableBold = enableBold;\n    return;\n  }\n\n  var normalSize = this.scrollPort_.measureCharacterSize();\n  var boldSize = this.scrollPort_.measureCharacterSize('bold');\n\n  var isBoldSafe = normalSize.equals(boldSize);\n  if (!isBoldSafe) {\n    console.warn('Bold characters disabled: Size of bold weight differs ' +\n                 'from normal.  Font family is: ' +\n                 this.scrollPort_.getFontFamily());\n  }\n\n  this.primaryScreen_.textAttributes.enableBold = isBoldSafe;\n  this.alternateScreen_.textAttributes.enableBold = isBoldSafe;\n};\n\n/**\n * Control text blinking behavior.\n *\n * @param {boolean=} state Whether to enable support for blinking text.\n */\nhterm.Terminal.prototype.setTextBlink = function(state) {\n  if (state === undefined)\n    state = this.prefs_.getBoolean('enable-blink');\n  this.setCssVar('blink-node-duration', state ? '0.7s' : '0');\n};\n\n/**\n * Set the mouse cursor style based on the current terminal mode.\n */\nhterm.Terminal.prototype.syncMouseStyle = function() {\n  this.setCssVar('mouse-cursor-style',\n                 this.vt.mouseReport == this.vt.MOUSE_REPORT_DISABLED ?\n                     'var(--hterm-mouse-cursor-text)' :\n                     'var(--hterm-mouse-cursor-default)');\n};\n\n/**\n * Return a copy of the current cursor position.\n *\n * @return {!hterm.RowCol} The RowCol object representing the current position.\n */\nhterm.Terminal.prototype.saveCursor = function() {\n  return this.screen_.cursorPosition.clone();\n};\n\n/**\n * Return the current text attributes.\n *\n * @return {!hterm.TextAttributes}\n */\nhterm.Terminal.prototype.getTextAttributes = function() {\n  return this.screen_.textAttributes;\n};\n\n/**\n * Set the text attributes.\n *\n * @param {!hterm.TextAttributes} textAttributes The attributes to set.\n */\nhterm.Terminal.prototype.setTextAttributes = function(textAttributes) {\n  this.screen_.textAttributes = textAttributes;\n};\n\n/**\n * Return the current browser zoom factor applied to the terminal.\n *\n * @return {number} The current browser zoom factor.\n */\nhterm.Terminal.prototype.getZoomFactor = function() {\n  return this.scrollPort_.characterSize.zoomFactor;\n};\n\n/**\n * Change the title of this terminal's window.\n *\n * @param {string} title The title to set.\n */\nhterm.Terminal.prototype.setWindowTitle = function(title) {\n  window.document.title = title;\n};\n\n/**\n * Restore a previously saved cursor position.\n *\n * @param {!hterm.RowCol} cursor The position to restore.\n */\nhterm.Terminal.prototype.restoreCursor = function(cursor) {\n  var row = lib.f.clamp(cursor.row, 0, this.screenSize.height - 1);\n  var column = lib.f.clamp(cursor.column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n  if (cursor.column > column ||\n      cursor.column == column && cursor.overflow) {\n    this.screen_.cursorPosition.overflow = true;\n  }\n};\n\n/**\n * Clear the cursor's overflow flag.\n */\nhterm.Terminal.prototype.clearCursorOverflow = function() {\n  this.screen_.cursorPosition.overflow = false;\n};\n\n/**\n * Save the current cursor state to the corresponding screens.\n *\n * See the hterm.Screen.CursorState class for more details.\n *\n * @param {boolean=} both If true, update both screens, else only update the\n *     current screen.\n */\nhterm.Terminal.prototype.saveCursorAndState = function(both) {\n  if (both) {\n    this.primaryScreen_.saveCursorAndState(this.vt);\n    this.alternateScreen_.saveCursorAndState(this.vt);\n  } else\n    this.screen_.saveCursorAndState(this.vt);\n};\n\n/**\n * Restore the saved cursor state in the corresponding screens.\n *\n * See the hterm.Screen.CursorState class for more details.\n *\n * @param {boolean=} both If true, update both screens, else only update the\n *     current screen.\n */\nhterm.Terminal.prototype.restoreCursorAndState = function(both) {\n  if (both) {\n    this.primaryScreen_.restoreCursorAndState(this.vt);\n    this.alternateScreen_.restoreCursorAndState(this.vt);\n  } else\n    this.screen_.restoreCursorAndState(this.vt);\n};\n\n/**\n * Sets the cursor shape\n *\n * @param {string} shape The shape to set.\n */\nhterm.Terminal.prototype.setCursorShape = function(shape) {\n  this.cursorShape_ = shape;\n  this.restyleCursor_();\n};\n\n/**\n * Get the cursor shape\n *\n * @return {string}\n */\nhterm.Terminal.prototype.getCursorShape = function() {\n  return this.cursorShape_;\n};\n\n/**\n * Set the width of the terminal, resizing the UI to match.\n *\n * @param {?number} columnCount\n */\nhterm.Terminal.prototype.setWidth = function(columnCount) {\n  if (columnCount == null) {\n    this.div_.style.width = '100%';\n    return;\n  }\n\n  this.div_.style.width = Math.ceil(\n      this.scrollPort_.characterSize.width *\n      columnCount + this.scrollPort_.currentScrollbarWidthPx) + 'px';\n  this.realizeSize_(columnCount, this.screenSize.height);\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * Set the height of the terminal, resizing the UI to match.\n *\n * @param {?number} rowCount The height in rows.\n */\nhterm.Terminal.prototype.setHeight = function(rowCount) {\n  if (rowCount == null) {\n    this.div_.style.height = '100%';\n    return;\n  }\n\n  this.div_.style.height =\n      this.scrollPort_.characterSize.height * rowCount + 'px';\n  this.realizeSize_(this.screenSize.width, rowCount);\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * Deal with terminal size changes.\n *\n * @param {number} columnCount The number of columns.\n * @param {number} rowCount The number of rows.\n */\nhterm.Terminal.prototype.realizeSize_ = function(columnCount, rowCount) {\n  let notify = false;\n\n  if (columnCount != this.screenSize.width) {\n    notify = true;\n    this.realizeWidth_(columnCount);\n  }\n\n  if (rowCount != this.screenSize.height) {\n    notify = true;\n    this.realizeHeight_(rowCount);\n  }\n\n  // Send new terminal size to plugin.\n  if (notify) {\n    this.io.onTerminalResize_(columnCount, rowCount);\n  }\n};\n\n/**\n * Deal with terminal width changes.\n *\n * This function does what needs to be done when the terminal width changes\n * out from under us.  It happens here rather than in onResize_() because this\n * code may need to run synchronously to handle programmatic changes of\n * terminal width.\n *\n * Relying on the browser to send us an async resize event means we may not be\n * in the correct state yet when the next escape sequence hits.\n *\n * @param {number} columnCount The number of columns.\n */\nhterm.Terminal.prototype.realizeWidth_ = function(columnCount) {\n  if (columnCount <= 0)\n    throw new Error('Attempt to realize bad width: ' + columnCount);\n\n  var deltaColumns = columnCount - this.screen_.getWidth();\n  if (deltaColumns == 0) {\n    // No change, so don't bother recalculating things.\n    return;\n  }\n\n  this.screenSize.width = columnCount;\n  this.screen_.setColumnCount(columnCount);\n\n  if (deltaColumns > 0) {\n    if (this.defaultTabStops)\n      this.setDefaultTabStops(this.screenSize.width - deltaColumns);\n  } else {\n    for (var i = this.tabStops_.length - 1; i >= 0; i--) {\n      if (this.tabStops_[i] < columnCount)\n        break;\n\n      this.tabStops_.pop();\n    }\n  }\n\n  this.screen_.setColumnCount(this.screenSize.width);\n};\n\n/**\n * Deal with terminal height changes.\n *\n * This function does what needs to be done when the terminal height changes\n * out from under us.  It happens here rather than in onResize_() because this\n * code may need to run synchronously to handle programmatic changes of\n * terminal height.\n *\n * Relying on the browser to send us an async resize event means we may not be\n * in the correct state yet when the next escape sequence hits.\n *\n * @param {number} rowCount The number of rows.\n */\nhterm.Terminal.prototype.realizeHeight_ = function(rowCount) {\n  if (rowCount <= 0)\n    throw new Error('Attempt to realize bad height: ' + rowCount);\n\n  var deltaRows = rowCount - this.screen_.getHeight();\n  if (deltaRows == 0) {\n    // No change, so don't bother recalculating things.\n    return;\n  }\n\n  this.screenSize.height = rowCount;\n\n  var cursor = this.saveCursor();\n\n  if (deltaRows < 0) {\n    // Screen got smaller.\n    deltaRows *= -1;\n    while (deltaRows) {\n      var lastRow = this.getRowCount() - 1;\n      if (lastRow - this.scrollbackRows_.length == cursor.row)\n        break;\n\n      if (this.getRowText(lastRow))\n        break;\n\n      this.screen_.popRow();\n      deltaRows--;\n    }\n\n    var ary = this.screen_.shiftRows(deltaRows);\n    this.scrollbackRows_.push.apply(this.scrollbackRows_, ary);\n\n    // We just removed rows from the top of the screen, we need to update\n    // the cursor to match.\n    cursor.row = Math.max(cursor.row - deltaRows, 0);\n  } else if (deltaRows > 0) {\n    // Screen got larger.\n\n    if (deltaRows <= this.scrollbackRows_.length) {\n      var scrollbackCount = Math.min(deltaRows, this.scrollbackRows_.length);\n      var rows = this.scrollbackRows_.splice(\n          this.scrollbackRows_.length - scrollbackCount, scrollbackCount);\n      this.screen_.unshiftRows(rows);\n      deltaRows -= scrollbackCount;\n      cursor.row += scrollbackCount;\n    }\n\n    if (deltaRows)\n      this.appendRows_(deltaRows);\n  }\n\n  this.setVTScrollRegion(null, null);\n  this.restoreCursor(cursor);\n};\n\n/**\n * Scroll the terminal to the top of the scrollback buffer.\n */\nhterm.Terminal.prototype.scrollHome = function() {\n  this.scrollPort_.scrollRowToTop(0);\n};\n\n/**\n * Scroll the terminal to the end.\n */\nhterm.Terminal.prototype.scrollEnd = function() {\n  this.scrollPort_.scrollRowToBottom(this.getRowCount());\n};\n\n/**\n * Scroll the terminal one page up (minus one line) relative to the current\n * position.\n */\nhterm.Terminal.prototype.scrollPageUp = function() {\n  this.scrollPort_.scrollPageUp();\n};\n\n/**\n * Scroll the terminal one page down (minus one line) relative to the current\n * position.\n */\nhterm.Terminal.prototype.scrollPageDown = function() {\n  this.scrollPort_.scrollPageDown();\n};\n\n/**\n * Scroll the terminal one line up relative to the current position.\n */\nhterm.Terminal.prototype.scrollLineUp = function() {\n  var i = this.scrollPort_.getTopRowIndex();\n  this.scrollPort_.scrollRowToTop(i - 1);\n};\n\n/**\n * Scroll the terminal one line down relative to the current position.\n */\nhterm.Terminal.prototype.scrollLineDown = function() {\n  var i = this.scrollPort_.getTopRowIndex();\n  this.scrollPort_.scrollRowToTop(i + 1);\n};\n\n/**\n * Clear primary screen, secondary screen, and the scrollback buffer.\n */\nhterm.Terminal.prototype.wipeContents = function() {\n  this.clearHome(this.primaryScreen_);\n  this.clearHome(this.alternateScreen_);\n\n  this.clearScrollback();\n};\n\n/**\n * Clear scrollback buffer.\n */\nhterm.Terminal.prototype.clearScrollback = function() {\n  // Move to the end of the buffer in case the screen was scrolled back.\n  // We're going to throw it away which would leave the display invalid.\n  this.scrollEnd();\n\n  this.scrollbackRows_.length = 0;\n  this.scrollPort_.resetCache();\n\n  [this.primaryScreen_, this.alternateScreen_].forEach((screen) => {\n    const bottom = screen.getHeight();\n    this.renumberRows_(0, bottom, screen);\n  });\n\n  this.syncCursorPosition_();\n  this.scrollPort_.invalidate();\n};\n\n/**\n * Full terminal reset.\n *\n * Perform a full reset to the default values listed in\n * https://vt100.net/docs/vt510-rm/RIS.html\n */\nhterm.Terminal.prototype.reset = function() {\n  this.vt.reset();\n\n  this.clearAllTabStops();\n  this.setDefaultTabStops();\n\n  const resetScreen = (screen) => {\n    // We want to make sure to reset the attributes before we clear the screen.\n    // The attributes might be used to initialize default/empty rows.\n    screen.textAttributes.reset();\n    screen.textAttributes.resetColorPalette();\n    this.clearHome(screen);\n    screen.saveCursorAndState(this.vt);\n  };\n  resetScreen(this.primaryScreen_);\n  resetScreen(this.alternateScreen_);\n\n  // Reset terminal options to their default values.\n  this.options_ = new hterm.Options();\n  this.setCursorBlink(!!this.prefs_.get('cursor-blink'));\n\n  this.setVTScrollRegion(null, null);\n\n  this.setCursorVisible(true);\n};\n\n/**\n * Soft terminal reset.\n *\n * Perform a soft reset to the default values listed in\n * http://www.vt100.net/docs/vt510-rm/DECSTR#T5-9\n */\nhterm.Terminal.prototype.softReset = function() {\n  this.vt.reset();\n\n  // Reset terminal options to their default values.\n  this.options_ = new hterm.Options();\n\n  // We show the cursor on soft reset but do not alter the blink state.\n  this.options_.cursorBlink = !!this.timeouts_.cursorBlink;\n\n  const resetScreen = (screen) => {\n    // Xterm also resets the color palette on soft reset, even though it doesn't\n    // seem to be documented anywhere.\n    screen.textAttributes.reset();\n    screen.textAttributes.resetColorPalette();\n    screen.saveCursorAndState(this.vt);\n  };\n  resetScreen(this.primaryScreen_);\n  resetScreen(this.alternateScreen_);\n\n  // The xterm man page explicitly says this will happen on soft reset.\n  this.setVTScrollRegion(null, null);\n\n  // Xterm also shows the cursor on soft reset, but does not alter the blink\n  // state.\n  this.setCursorVisible(true);\n};\n\n/**\n * Move the cursor forward to the next tab stop, or to the last column\n * if no more tab stops are set.\n */\nhterm.Terminal.prototype.forwardTabStop = function() {\n  var column = this.screen_.cursorPosition.column;\n\n  for (var i = 0; i < this.tabStops_.length; i++) {\n    if (this.tabStops_[i] > column) {\n      this.setCursorColumn(this.tabStops_[i]);\n      return;\n    }\n  }\n\n  // xterm does not clear the overflow flag on HT or CHT.\n  var overflow = this.screen_.cursorPosition.overflow;\n  this.setCursorColumn(this.screenSize.width - 1);\n  this.screen_.cursorPosition.overflow = overflow;\n};\n\n/**\n * Move the cursor backward to the previous tab stop, or to the first column\n * if no previous tab stops are set.\n */\nhterm.Terminal.prototype.backwardTabStop = function() {\n  var column = this.screen_.cursorPosition.column;\n\n  for (var i = this.tabStops_.length - 1; i >= 0; i--) {\n    if (this.tabStops_[i] < column) {\n      this.setCursorColumn(this.tabStops_[i]);\n      return;\n    }\n  }\n\n  this.setCursorColumn(1);\n};\n\n/**\n * Set a tab stop at the given column.\n *\n * @param {number} column Zero based column.\n */\nhterm.Terminal.prototype.setTabStop = function(column) {\n  for (var i = this.tabStops_.length - 1; i >= 0; i--) {\n    if (this.tabStops_[i] == column)\n      return;\n\n    if (this.tabStops_[i] < column) {\n      this.tabStops_.splice(i + 1, 0, column);\n      return;\n    }\n  }\n\n  this.tabStops_.splice(0, 0, column);\n};\n\n/**\n * Clear the tab stop at the current cursor position.\n *\n * No effect if there is no tab stop at the current cursor position.\n */\nhterm.Terminal.prototype.clearTabStopAtCursor = function() {\n  var column = this.screen_.cursorPosition.column;\n\n  var i = this.tabStops_.indexOf(column);\n  if (i == -1)\n    return;\n\n  this.tabStops_.splice(i, 1);\n};\n\n/**\n * Clear all tab stops.\n */\nhterm.Terminal.prototype.clearAllTabStops = function() {\n  this.tabStops_.length = 0;\n  this.defaultTabStops = false;\n};\n\n/**\n * Set up the default tab stops, starting from a given column.\n *\n * This sets a tabstop every (column % this.tabWidth) column, starting\n * from the specified column, or 0 if no column is provided.  It also flags\n * future resizes to set them up.\n *\n * This does not clear the existing tab stops first, use clearAllTabStops\n * for that.\n *\n * @param {number=} opt_start Optional starting zero based starting column,\n *     useful for filling out missing tab stops when the terminal is resized.\n */\nhterm.Terminal.prototype.setDefaultTabStops = function(opt_start) {\n  var start = opt_start || 0;\n  var w = this.tabWidth;\n  // Round start up to a default tab stop.\n  start = start - 1 - ((start - 1) % w) + w;\n  for (var i = start; i < this.screenSize.width; i += w) {\n    this.setTabStop(i);\n  }\n\n  this.defaultTabStops = true;\n};\n\n/**\n * Interpret a sequence of characters.\n *\n * Incomplete escape sequences are buffered until the next call.\n *\n * @param {string} str Sequence of characters to interpret or pass through.\n */\nhterm.Terminal.prototype.interpret = function(str) {\n  this.scheduleSyncCursorPosition_();\n  this.vt.interpret(str);\n};\n\n/**\n * Take over the given DIV for use as the terminal display.\n *\n * @param {!Element} div The div to use as the terminal display.\n */\nhterm.Terminal.prototype.decorate = function(div) {\n  const charset = div.ownerDocument.characterSet.toLowerCase();\n  if (charset != 'utf-8') {\n    console.warn(`Document encoding should be set to utf-8, not \"${charset}\";` +\n                 ` Add <meta charset='utf-8'/> to your HTML <head> to fix.`);\n  }\n\n  this.div_ = div;\n\n  this.accessibilityReader_ = new hterm.AccessibilityReader(div);\n\n  this.scrollPort_.decorate(div, () => this.setupScrollPort_());\n};\n\n/**\n * Initialisation of ScrollPort properties which need to be set after its DOM\n * has been initialised.\n *\n * @private\n */\nhterm.Terminal.prototype.setupScrollPort_ = function() {\n  this.scrollPort_.setBackgroundImage(\n      this.prefs_.getString('background-image'));\n  this.scrollPort_.setBackgroundSize(this.prefs_.getString('background-size'));\n  this.scrollPort_.setBackgroundPosition(\n      this.prefs_.getString('background-position'));\n  this.scrollPort_.setUserCssUrl(this.prefs_.getString('user-css'));\n  this.scrollPort_.setUserCssText(this.prefs_.getString('user-css-text'));\n  this.scrollPort_.setAccessibilityReader(\n      lib.notNull(this.accessibilityReader_));\n\n  this.div_.focus = this.focus.bind(this);\n\n  this.setFontSize(this.prefs_.getNumber('font-size'));\n  this.syncFontFamily();\n\n  this.setScrollbarVisible(this.prefs_.getBoolean('scrollbar-visible'));\n  this.setScrollWheelMoveMultipler(\n      this.prefs_.getNumber('scroll-wheel-move-multiplier'));\n\n  this.document_ = this.scrollPort_.getDocument();\n  this.accessibilityReader_.decorate(this.document_);\n\n  this.document_.body.oncontextmenu = function() { return false; };\n  this.contextMenu.setDocument(this.document_);\n\n  var onMouse = this.onMouse_.bind(this);\n  var screenNode = this.scrollPort_.getScreenNode();\n  screenNode.addEventListener(\n      'mousedown', /** @type {!EventListener} */ (onMouse));\n  screenNode.addEventListener(\n      'mouseup', /** @type {!EventListener} */ (onMouse));\n  screenNode.addEventListener(\n      'mousemove', /** @type {!EventListener} */ (onMouse));\n  this.scrollPort_.onScrollWheel = onMouse;\n\n  screenNode.addEventListener(\n      'keydown',\n      /** @type {!EventListener} */ (this.onKeyboardActivity_.bind(this)));\n\n  screenNode.addEventListener(\n      'focus', this.onFocusChange_.bind(this, true));\n  // Listen for mousedown events on the screenNode as in FF the focus\n  // events don't bubble.\n  screenNode.addEventListener('mousedown', function() {\n    setTimeout(this.onFocusChange_.bind(this, true));\n  }.bind(this));\n\n  screenNode.addEventListener(\n      'blur', this.onFocusChange_.bind(this, false));\n\n  var style = this.document_.createElement('style');\n  style.textContent = `\n.cursor-node[focus=\"false\"] {\n  box-sizing: border-box;\n  background-color: transparent !important;\n  border-width: 2px;\n  border-style: solid;\n}\nmenu {\n  margin: 0;\n  padding: 0;\n  cursor: var(--hterm-mouse-cursor-pointer);\n}\nmenuitem {\n  white-space: nowrap;\n  border-bottom: 1px dashed;\n  display: block;\n  padding: 0.3em 0.3em 0 0.3em;\n}\nmenuitem.separator {\n  border-bottom: none;\n  height: 0.5em;\n  padding: 0;\n}\nmenuitem:hover {\n  color: var(--hterm-cursor-color);\n}\n.wc-node {\n  display: inline-block;\n  text-align: center;\n  width: calc(var(--hterm-charsize-width) * 2);\n  line-height: var(--hterm-charsize-height);\n}\n:root {\n  --hterm-charsize-width: ${this.scrollPort_.characterSize.width}px;\n  --hterm-charsize-height: ${this.scrollPort_.characterSize.height}px;\n  /* Default position hides the cursor for when the window is initializing. */\n  --hterm-cursor-offset-col: -1;\n  --hterm-cursor-offset-row: -1;\n  --hterm-blink-node-duration: 0.7s;\n  --hterm-mouse-cursor-default: default;\n  --hterm-mouse-cursor-text: text;\n  --hterm-mouse-cursor-pointer: pointer;\n  --hterm-mouse-cursor-style: var(--hterm-mouse-cursor-text);\n}\n.uri-node:hover {\n  text-decoration: underline;\n  cursor: var(--hterm-mouse-cursor-pointer);\n}\n@keyframes blink {\n  from { opacity: 1.0; }\n  to { opacity: 0.0; }\n}\n.blink-node {\n  animation-name: blink;\n  animation-duration: var(--hterm-blink-node-duration);\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n  animation-direction: alternate;\n}`;\n  // Insert this stock style as the first node so that any user styles will\n  // override w/out having to use !important everywhere.  The rules above mix\n  // runtime variables with default ones designed to be overridden by the user,\n  // but we can wait for a concrete case from the users to determine the best\n  // way to split the sheet up to before & after the user-css settings.\n  this.document_.head.insertBefore(style, this.document_.head.firstChild);\n\n  this.cursorNode_ = this.document_.createElement('div');\n  this.cursorNode_.id = 'hterm:terminal-cursor';\n  this.cursorNode_.className = 'cursor-node';\n  this.cursorNode_.style.cssText = `\nposition: absolute;\nleft: calc(var(--hterm-charsize-width) * var(--hterm-cursor-offset-col));\ntop: calc(var(--hterm-charsize-height) * var(--hterm-cursor-offset-row));\ndisplay: ${this.options_.cursorVisible ? '' : 'none'};\nwidth: var(--hterm-charsize-width);\nheight: var(--hterm-charsize-height);\nbackground-color: var(--hterm-cursor-color);\nborder-color: var(--hterm-cursor-color);\n-webkit-transition: opacity, background-color 100ms linear;\n-moz-transition: opacity, background-color 100ms linear;`;\n\n  this.setCursorColor();\n  this.setCursorBlink(!!this.prefs_.get('cursor-blink'));\n  this.restyleCursor_();\n\n  this.document_.body.appendChild(this.cursorNode_);\n\n  // When 'enableMouseDragScroll' is off we reposition this element directly\n  // under the mouse cursor after a click.  This makes Chrome associate\n  // subsequent mousemove events with the scroll-blocker.  Since the\n  // scroll-blocker is a peer (not a child) of the scrollport, the mousemove\n  // events do not cause the scrollport to scroll.\n  //\n  // It's a hack, but it's the cleanest way I could find.\n  this.scrollBlockerNode_ = this.document_.createElement('div');\n  this.scrollBlockerNode_.id = 'hterm:mouse-drag-scroll-blocker';\n  this.scrollBlockerNode_.setAttribute('aria-hidden', 'true');\n  this.scrollBlockerNode_.style.cssText =\n      ('position: absolute;' +\n       'top: -99px;' +\n       'display: block;' +\n       'width: 10px;' +\n       'height: 10px;');\n  this.document_.body.appendChild(this.scrollBlockerNode_);\n\n  this.scrollPort_.onScrollWheel = onMouse;\n  ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick',\n   ].forEach(function(event) {\n       this.scrollBlockerNode_.addEventListener(event, onMouse);\n       this.cursorNode_.addEventListener(\n           event, /** @type {!EventListener} */ (onMouse));\n       this.document_.addEventListener(\n           event, /** @type {!EventListener} */ (onMouse));\n     }.bind(this));\n\n  this.cursorNode_.addEventListener('mousedown', function() {\n      setTimeout(this.focus.bind(this));\n    }.bind(this));\n\n  this.setReverseVideo(false);\n\n  this.scrollPort_.focus();\n  this.scrollPort_.scheduleRedraw();\n};\n\n/**\n * Return the HTML document that contains the terminal DOM nodes.\n *\n * @return {!Document}\n */\nhterm.Terminal.prototype.getDocument = function() {\n  return this.document_;\n};\n\n/**\n * Focus the terminal.\n */\nhterm.Terminal.prototype.focus = function() {\n  this.scrollPort_.focus();\n};\n\n/**\n * Unfocus the terminal.\n */\nhterm.Terminal.prototype.blur = function() {\n  this.scrollPort_.blur();\n};\n\n/**\n * Return the HTML Element for a given row index.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch rows on demand as they are scrolled into view.\n *\n * TODO(rginda): Consider saving scrollback rows as (HTML source, text content)\n * pairs to conserve memory.\n *\n * @param {number} index The zero-based row index, measured relative to the\n *     start of the scrollback buffer.  On-screen rows will always have the\n *     largest indices.\n * @return {!Element} The 'x-row' element containing for the requested row.\n * @override\n */\nhterm.Terminal.prototype.getRowNode = function(index) {\n  if (index < this.scrollbackRows_.length)\n    return this.scrollbackRows_[index];\n\n  var screenIndex = index - this.scrollbackRows_.length;\n  return this.screen_.rowsArray[screenIndex];\n};\n\n/**\n * Return the text content for a given range of rows.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch text content on demand when the user attempts to copy their\n * selection to the clipboard.\n *\n * @param {number} start The zero-based row index to start from, measured\n *     relative to the start of the scrollback buffer.  On-screen rows will\n *     always have the largest indices.\n * @param {number} end The zero-based row index to end on, measured\n *     relative to the start of the scrollback buffer.\n * @return {string} A single string containing the text value of the range of\n *     rows.  Lines will be newline delimited, with no trailing newline.\n */\nhterm.Terminal.prototype.getRowsText = function(start, end) {\n  var ary = [];\n  for (var i = start; i < end; i++) {\n    var node = this.getRowNode(i);\n    ary.push(node.textContent);\n    if (i < end - 1 && !node.getAttribute('line-overflow'))\n      ary.push('\\n');\n  }\n\n  return ary.join('');\n};\n\n/**\n * Return the text content for a given row.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to fetch text content on demand when the user attempts to copy their\n * selection to the clipboard.\n *\n * @param {number} index The zero-based row index to return, measured\n *     relative to the start of the scrollback buffer.  On-screen rows will\n *     always have the largest indices.\n * @return {string} A string containing the text value of the selected row.\n */\nhterm.Terminal.prototype.getRowText = function(index) {\n  var node = this.getRowNode(index);\n  return node.textContent;\n};\n\n/**\n * Return the total number of rows in the addressable screen and in the\n * scrollback buffer of this terminal.\n *\n * This is a method from the RowProvider interface.  The ScrollPort uses\n * it to compute the size of the scrollbar.\n *\n * @return {number} The number of rows in this terminal.\n * @override\n */\nhterm.Terminal.prototype.getRowCount = function() {\n  return this.scrollbackRows_.length + this.screen_.rowsArray.length;\n};\n\n/**\n * Create DOM nodes for new rows and append them to the end of the terminal.\n *\n * This is the only correct way to add a new DOM node for a row.  Notice that\n * the new row is appended to the bottom of the list of rows, and does not\n * require renumbering (of the rowIndex property) of previous rows.\n *\n * If you think you want a new blank row somewhere in the middle of the\n * terminal, look into moveRows_().\n *\n * This method does not pay attention to vtScrollTop/Bottom, since you should\n * be using moveRows() in cases where they would matter.\n *\n * The cursor will be positioned at column 0 of the first inserted line.\n *\n * @param {number} count The number of rows to created.\n */\nhterm.Terminal.prototype.appendRows_ = function(count) {\n  var cursorRow = this.screen_.rowsArray.length;\n  var offset = this.scrollbackRows_.length + cursorRow;\n  for (var i = 0; i < count; i++) {\n    var row = this.document_.createElement('x-row');\n    row.appendChild(this.document_.createTextNode(''));\n    row.rowIndex = offset + i;\n    this.screen_.pushRow(row);\n  }\n\n  var extraRows = this.screen_.rowsArray.length - this.screenSize.height;\n  if (extraRows > 0) {\n    var ary = this.screen_.shiftRows(extraRows);\n    Array.prototype.push.apply(this.scrollbackRows_, ary);\n    if (this.scrollPort_.isScrolledEnd)\n      this.scheduleScrollDown_();\n  }\n\n  if (cursorRow >= this.screen_.rowsArray.length)\n    cursorRow = this.screen_.rowsArray.length - 1;\n\n  this.setAbsoluteCursorPosition(cursorRow, 0);\n};\n\n/**\n * Relocate rows from one part of the addressable screen to another.\n *\n * This is used to recycle rows during VT scrolls (those which are driven\n * by VT commands, rather than by the user manipulating the scrollbar.)\n *\n * In this case, the blank lines scrolled into the scroll region are made of\n * the nodes we scrolled off.  These have their rowIndex properties carefully\n * renumbered so as not to confuse the ScrollPort.\n *\n * @param {number} fromIndex The start index.\n * @param {number} count The number of rows to move.\n * @param {number} toIndex The destination index.\n */\nhterm.Terminal.prototype.moveRows_ = function(fromIndex, count, toIndex) {\n  var ary = this.screen_.removeRows(fromIndex, count);\n  this.screen_.insertRows(toIndex, ary);\n\n  var start, end;\n  if (fromIndex < toIndex) {\n    start = fromIndex;\n    end = toIndex + count;\n  } else {\n    start = toIndex;\n    end = fromIndex + count;\n  }\n\n  this.renumberRows_(start, end);\n  this.scrollPort_.scheduleInvalidate();\n};\n\n/**\n * Renumber the rowIndex property of the given range of rows.\n *\n * The start and end indices are relative to the screen, not the scrollback.\n * Rows in the scrollback buffer cannot be renumbered.  Since they are not\n * addressable (you can't delete them, scroll them, etc), you should have\n * no need to renumber scrollback rows.\n *\n * @param {number} start The start index.\n * @param {number} end The end index.\n * @param {!hterm.Screen=} opt_screen The screen to renumber.\n */\nhterm.Terminal.prototype.renumberRows_ = function(start, end, opt_screen) {\n  var screen = opt_screen || this.screen_;\n\n  var offset = this.scrollbackRows_.length;\n  for (var i = start; i < end; i++) {\n    screen.rowsArray[i].rowIndex = offset + i;\n  }\n};\n\n/**\n * Print a string to the terminal.\n *\n * This respects the current insert and wraparound modes.  It will add new lines\n * to the end of the terminal, scrolling off the top into the scrollback buffer\n * if necessary.\n *\n * The string is *not* parsed for escape codes.  Use the interpret() method if\n * that's what you're after.\n *\n * @param {string} str The string to print.\n */\nhterm.Terminal.prototype.print = function(str) {\n  this.scheduleSyncCursorPosition_();\n\n  // Basic accessibility output for the screen reader.\n  this.accessibilityReader_.announce(str);\n\n  var startOffset = 0;\n\n  var strWidth = lib.wc.strWidth(str);\n  // Fun edge case: If the string only contains zero width codepoints (like\n  // combining characters), we make sure to iterate at least once below.\n  if (strWidth == 0 && str)\n    strWidth = 1;\n\n  while (startOffset < strWidth) {\n    if (this.options_.wraparound && this.screen_.cursorPosition.overflow) {\n      this.screen_.commitLineOverflow();\n      this.newLine(true);\n    }\n\n    var count = strWidth - startOffset;\n    var didOverflow = false;\n    var substr;\n\n    if (this.screen_.cursorPosition.column + count >= this.screenSize.width) {\n      didOverflow = true;\n      count = this.screenSize.width - this.screen_.cursorPosition.column;\n    }\n\n    if (didOverflow && !this.options_.wraparound) {\n      // If the string overflowed the line but wraparound is off, then the\n      // last printed character should be the last of the string.\n      // TODO: This will add to our problems with multibyte UTF-16 characters.\n      substr = lib.wc.substr(str, startOffset, count - 1) +\n          lib.wc.substr(str, strWidth - 1);\n      count = strWidth;\n    } else {\n      substr = lib.wc.substr(str, startOffset, count);\n    }\n\n    var tokens = hterm.TextAttributes.splitWidecharString(substr);\n    for (var i = 0; i < tokens.length; i++) {\n      this.screen_.textAttributes.wcNode = tokens[i].wcNode;\n      this.screen_.textAttributes.asciiNode = tokens[i].asciiNode;\n\n      if (this.options_.insertMode) {\n        this.screen_.insertString(tokens[i].str, tokens[i].wcStrWidth);\n      } else {\n        this.screen_.overwriteString(tokens[i].str, tokens[i].wcStrWidth);\n      }\n      this.screen_.textAttributes.wcNode = false;\n      this.screen_.textAttributes.asciiNode = true;\n    }\n\n    this.screen_.maybeClipCurrentRow();\n    startOffset += count;\n  }\n\n  if (this.scrollOnOutput_)\n    this.scrollPort_.scrollRowToBottom(this.getRowCount());\n};\n\n/**\n * Set the VT scroll region.\n *\n * This also resets the cursor position to the absolute (0, 0) position, since\n * that's what xterm appears to do.\n *\n * Setting the scroll region to the full height of the terminal will clear\n * the scroll region.  This is *NOT* what most terminals do.  We're explicitly\n * going \"off-spec\" here because it makes `screen` and `tmux` overflow into the\n * local scrollback buffer, which means the scrollbars and shift-pgup/pgdn\n * continue to work as most users would expect.\n *\n * @param {?number} scrollTop The zero-based top of the scroll region.\n * @param {?number} scrollBottom The zero-based bottom of the scroll region,\n *     inclusive.\n */\nhterm.Terminal.prototype.setVTScrollRegion = function(scrollTop, scrollBottom) {\n  if (scrollTop == 0 && scrollBottom == this.screenSize.height - 1) {\n    this.vtScrollTop_ = null;\n    this.vtScrollBottom_ = null;\n  } else {\n    this.vtScrollTop_ = scrollTop;\n    this.vtScrollBottom_ = scrollBottom;\n  }\n};\n\n/**\n * Return the top row index according to the VT.\n *\n * This will return 0 unless the terminal has been told to restrict scrolling\n * to some lower row.  It is used for some VT cursor positioning and scrolling\n * commands.\n *\n * @return {number} The topmost row in the terminal's scroll region.\n */\nhterm.Terminal.prototype.getVTScrollTop = function() {\n  if (this.vtScrollTop_ != null)\n    return this.vtScrollTop_;\n\n  return 0;\n};\n\n/**\n * Return the bottom row index according to the VT.\n *\n * This will return the height of the terminal unless the it has been told to\n * restrict scrolling to some higher row.  It is used for some VT cursor\n * positioning and scrolling commands.\n *\n * @return {number} The bottom most row in the terminal's scroll region.\n */\nhterm.Terminal.prototype.getVTScrollBottom = function() {\n  if (this.vtScrollBottom_ != null)\n    return this.vtScrollBottom_;\n\n  return this.screenSize.height - 1;\n};\n\n/**\n * Process a '\\n' character.\n *\n * If the cursor is on the final row of the terminal this will append a new\n * blank row to the screen and scroll the topmost row into the scrollback\n * buffer.\n *\n * Otherwise, this moves the cursor to column zero of the next row.\n *\n * @param {boolean=} dueToOverflow Whether the newline is due to wraparound of\n *     the terminal.\n */\nhterm.Terminal.prototype.newLine = function(dueToOverflow = false) {\n  if (!dueToOverflow)\n    this.accessibilityReader_.newLine();\n\n  var cursorAtEndOfScreen = (this.screen_.cursorPosition.row ==\n                             this.screen_.rowsArray.length - 1);\n\n  if (this.vtScrollBottom_ != null) {\n    // A VT Scroll region is active, we never append new rows.\n    if (this.screen_.cursorPosition.row == this.vtScrollBottom_) {\n      // We're at the end of the VT Scroll Region, perform a VT scroll.\n      this.vtScrollUp(1);\n      this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row, 0);\n    } else if (cursorAtEndOfScreen) {\n      // We're at the end of the screen, the only thing to do is put the\n      // cursor to column 0.\n      this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row, 0);\n    } else {\n      // Anywhere else, advance the cursor row, and reset the column.\n      this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row + 1, 0);\n    }\n  } else if (cursorAtEndOfScreen) {\n    // We're at the end of the screen.  Append a new row to the terminal,\n    // shifting the top row into the scrollback.\n    this.appendRows_(1);\n  } else {\n    // Anywhere else in the screen just moves the cursor.\n    this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row + 1, 0);\n  }\n};\n\n/**\n * Like newLine(), except maintain the cursor column.\n */\nhterm.Terminal.prototype.lineFeed = function() {\n  var column = this.screen_.cursorPosition.column;\n  this.newLine();\n  this.setCursorColumn(column);\n};\n\n/**\n * If autoCarriageReturn is set then newLine(), else lineFeed().\n */\nhterm.Terminal.prototype.formFeed = function() {\n  if (this.options_.autoCarriageReturn) {\n    this.newLine();\n  } else {\n    this.lineFeed();\n  }\n};\n\n/**\n * Move the cursor up one row, possibly inserting a blank line.\n *\n * The cursor column is not changed.\n */\nhterm.Terminal.prototype.reverseLineFeed = function() {\n  var scrollTop = this.getVTScrollTop();\n  var currentRow = this.screen_.cursorPosition.row;\n\n  if (currentRow == scrollTop) {\n    this.insertLines(1);\n  } else {\n    this.setAbsoluteCursorRow(currentRow - 1);\n  }\n};\n\n/**\n * Replace all characters to the left of the current cursor with the space\n * character.\n *\n * TODO(rginda): This should probably *remove* the characters (not just replace\n * with a space) if there are no characters at or beyond the current cursor\n * position.\n */\nhterm.Terminal.prototype.eraseToLeft = function() {\n  var cursor = this.saveCursor();\n  this.setCursorColumn(0);\n  const count = cursor.column + 1;\n  this.screen_.overwriteString(' '.repeat(count), count);\n  this.restoreCursor(cursor);\n};\n\n/**\n * Erase a given number of characters to the right of the cursor.\n *\n * The cursor position is unchanged.\n *\n * If the current background color is not the default background color this\n * will insert spaces rather than delete.  This is unfortunate because the\n * trailing space will affect text selection, but it's difficult to come up\n * with a way to style empty space that wouldn't trip up the hterm.Screen\n * code.\n *\n * eraseToRight is ignored in the presence of a cursor overflow.  This deviates\n * from xterm, but agrees with gnome-terminal and konsole, xfce4-terminal.  See\n * crbug.com/232390 for details.\n *\n * @param {number=} opt_count The number of characters to erase.\n */\nhterm.Terminal.prototype.eraseToRight = function(opt_count) {\n  if (this.screen_.cursorPosition.overflow)\n    return;\n\n  var maxCount = this.screenSize.width - this.screen_.cursorPosition.column;\n  var count = opt_count ? Math.min(opt_count, maxCount) : maxCount;\n\n  if (this.screen_.textAttributes.background ===\n      this.screen_.textAttributes.DEFAULT_COLOR) {\n    var cursorRow = this.screen_.rowsArray[this.screen_.cursorPosition.row];\n    if (hterm.TextAttributes.nodeWidth(cursorRow) <=\n        this.screen_.cursorPosition.column + count) {\n      this.screen_.deleteChars(count);\n      this.clearCursorOverflow();\n      return;\n    }\n  }\n\n  var cursor = this.saveCursor();\n  this.screen_.overwriteString(' '.repeat(count), count);\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase the current line.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseLine = function() {\n  var cursor = this.saveCursor();\n  this.screen_.clearCursorRow();\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase all characters from the start of the screen to the current cursor\n * position, regardless of scroll region.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseAbove = function() {\n  var cursor = this.saveCursor();\n\n  this.eraseToLeft();\n\n  for (var i = 0; i < cursor.row; i++) {\n    this.setAbsoluteCursorPosition(i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Erase all characters from the current cursor position to the end of the\n * screen, regardless of scroll region.\n *\n * The cursor position is unchanged.\n */\nhterm.Terminal.prototype.eraseBelow = function() {\n  var cursor = this.saveCursor();\n\n  this.eraseToRight();\n\n  var bottom = this.screenSize.height - 1;\n  for (var i = cursor.row + 1; i <= bottom; i++) {\n    this.setAbsoluteCursorPosition(i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Fill the terminal with a given character.\n *\n * This methods does not respect the VT scroll region.\n *\n * @param {string} ch The character to use for the fill.\n */\nhterm.Terminal.prototype.fill = function(ch) {\n  var cursor = this.saveCursor();\n\n  this.setAbsoluteCursorPosition(0, 0);\n  for (var row = 0; row < this.screenSize.height; row++) {\n    for (var col = 0; col < this.screenSize.width; col++) {\n      this.setAbsoluteCursorPosition(row, col);\n      this.screen_.overwriteString(ch, 1);\n    }\n  }\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Erase the entire display and leave the cursor at (0, 0).\n *\n * This does not respect the scroll region.\n *\n * @param {!hterm.Screen=} opt_screen Optional screen to operate on.  Defaults\n *     to the current screen.\n */\nhterm.Terminal.prototype.clearHome = function(opt_screen) {\n  var screen = opt_screen || this.screen_;\n  var bottom = screen.getHeight();\n\n  this.accessibilityReader_.clear();\n\n  if (bottom == 0) {\n    // Empty screen, nothing to do.\n    return;\n  }\n\n  for (var i = 0; i < bottom; i++) {\n    screen.setCursorPosition(i, 0);\n    screen.clearCursorRow();\n  }\n\n  screen.setCursorPosition(0, 0);\n};\n\n/**\n * Erase the entire display without changing the cursor position.\n *\n * The cursor position is unchanged.  This does not respect the scroll\n * region.\n *\n * @param {!hterm.Screen=} opt_screen Optional screen to operate on.  Defaults\n *     to the current screen.\n */\nhterm.Terminal.prototype.clear = function(opt_screen) {\n  var screen = opt_screen || this.screen_;\n  var cursor = screen.cursorPosition.clone();\n  this.clearHome(screen);\n  screen.setCursorPosition(cursor.row, cursor.column);\n};\n\n/**\n * VT command to insert lines at the current cursor row.\n *\n * This respects the current scroll region.  Rows pushed off the bottom are\n * lost (they won't show up in the scrollback buffer).\n *\n * @param {number} count The number of lines to insert.\n */\nhterm.Terminal.prototype.insertLines = function(count) {\n  var cursorRow = this.screen_.cursorPosition.row;\n\n  var bottom = this.getVTScrollBottom();\n  count = Math.min(count, bottom - cursorRow);\n\n  // The moveCount is the number of rows we need to relocate to make room for\n  // the new row(s).  The count is the distance to move them.\n  var moveCount = bottom - cursorRow - count + 1;\n  if (moveCount)\n    this.moveRows_(cursorRow, moveCount, cursorRow + count);\n\n  for (var i = count - 1; i >= 0; i--) {\n    this.setAbsoluteCursorPosition(cursorRow + i, 0);\n    this.screen_.clearCursorRow();\n  }\n};\n\n/**\n * VT command to delete lines at the current cursor row.\n *\n * New rows are added to the bottom of scroll region to take their place.  New\n * rows are strictly there to take up space and have no content or style.\n *\n * @param {number} count The number of lines to delete.\n */\nhterm.Terminal.prototype.deleteLines = function(count) {\n  var cursor = this.saveCursor();\n\n  var top = cursor.row;\n  var bottom = this.getVTScrollBottom();\n\n  var maxCount = bottom - top + 1;\n  count = Math.min(count, maxCount);\n\n  var moveStart = bottom - count + 1;\n  if (count != maxCount)\n    this.moveRows_(top, count, moveStart);\n\n  for (var i = 0; i < count; i++) {\n    this.setAbsoluteCursorPosition(moveStart + i, 0);\n    this.screen_.clearCursorRow();\n  }\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Inserts the given number of spaces at the current cursor position.\n *\n * The cursor position is not changed.\n *\n * @param {number} count The number of spaces to insert.\n */\nhterm.Terminal.prototype.insertSpace = function(count) {\n  var cursor = this.saveCursor();\n\n  const ws = ' '.repeat(count || 1);\n  this.screen_.insertString(ws, ws.length);\n  this.screen_.maybeClipCurrentRow();\n\n  this.restoreCursor(cursor);\n  this.clearCursorOverflow();\n};\n\n/**\n * Forward-delete the specified number of characters starting at the cursor\n * position.\n *\n * @param {number} count The number of characters to delete.\n */\nhterm.Terminal.prototype.deleteChars = function(count) {\n  var deleted = this.screen_.deleteChars(count);\n  if (deleted && !this.screen_.textAttributes.isDefault()) {\n    var cursor = this.saveCursor();\n    this.setCursorColumn(this.screenSize.width - deleted);\n    this.screen_.insertString(' '.repeat(deleted));\n    this.restoreCursor(cursor);\n  }\n\n  this.clearCursorOverflow();\n};\n\n/**\n * Shift rows in the scroll region upwards by a given number of lines.\n *\n * New rows are inserted at the bottom of the scroll region to fill the\n * vacated rows.  The new rows not filled out with the current text attributes.\n *\n * This function does not affect the scrollback rows at all.  Rows shifted\n * off the top are lost.\n *\n * The cursor position is not altered.\n *\n * @param {number} count The number of rows to scroll.\n */\nhterm.Terminal.prototype.vtScrollUp = function(count) {\n  var cursor = this.saveCursor();\n\n  this.setAbsoluteCursorRow(this.getVTScrollTop());\n  this.deleteLines(count);\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Shift rows below the cursor down by a given number of lines.\n *\n * This function respects the current scroll region.\n *\n * New rows are inserted at the top of the scroll region to fill the\n * vacated rows.  The new rows not filled out with the current text attributes.\n *\n * This function does not affect the scrollback rows at all.  Rows shifted\n * off the bottom are lost.\n *\n * @param {number} count The number of rows to scroll.\n */\nhterm.Terminal.prototype.vtScrollDown = function(count) {\n  var cursor = this.saveCursor();\n\n  this.setAbsoluteCursorPosition(this.getVTScrollTop(), 0);\n  this.insertLines(count);\n\n  this.restoreCursor(cursor);\n};\n\n/**\n * Enable accessibility-friendly features that have a performance impact.\n *\n * This will generate additional DOM nodes in an aria-live region that will\n * cause Assitive Technology to announce the output of the terminal. It also\n * enables other features that aid assistive technology. All the features gated\n * behind this flag have a performance impact on the terminal which is why they\n * are made optional.\n *\n * @param {boolean} enabled Whether to enable accessibility-friendly features.\n */\nhterm.Terminal.prototype.setAccessibilityEnabled = function(enabled) {\n  this.accessibilityReader_.setAccessibilityEnabled(enabled);\n};\n\n/**\n * Set the cursor position.\n *\n * The cursor row is relative to the scroll region if the terminal has\n * 'origin mode' enabled, or relative to the addressable screen otherwise.\n *\n * @param {number} row The new zero-based cursor row.\n * @param {number} column The new zero-based cursor column.\n */\nhterm.Terminal.prototype.setCursorPosition = function(row, column) {\n  if (this.options_.originMode) {\n    this.setRelativeCursorPosition(row, column);\n  } else {\n    this.setAbsoluteCursorPosition(row, column);\n  }\n};\n\n/**\n * Move the cursor relative to its current position.\n *\n * @param {number} row\n * @param {number} column\n */\nhterm.Terminal.prototype.setRelativeCursorPosition = function(row, column) {\n  var scrollTop = this.getVTScrollTop();\n  row = lib.f.clamp(row + scrollTop, scrollTop, this.getVTScrollBottom());\n  column = lib.f.clamp(column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n};\n\n/**\n * Move the cursor to the specified position.\n *\n * @param {number} row\n * @param {number} column\n */\nhterm.Terminal.prototype.setAbsoluteCursorPosition = function(row, column) {\n  row = lib.f.clamp(row, 0, this.screenSize.height - 1);\n  column = lib.f.clamp(column, 0, this.screenSize.width - 1);\n  this.screen_.setCursorPosition(row, column);\n};\n\n/**\n * Set the cursor column.\n *\n * @param {number} column The new zero-based cursor column.\n */\nhterm.Terminal.prototype.setCursorColumn = function(column) {\n  this.setAbsoluteCursorPosition(this.screen_.cursorPosition.row, column);\n};\n\n/**\n * Return the cursor column.\n *\n * @return {number} The zero-based cursor column.\n */\nhterm.Terminal.prototype.getCursorColumn = function() {\n  return this.screen_.cursorPosition.column;\n};\n\n/**\n * Set the cursor row.\n *\n * The cursor row is relative to the scroll region if the terminal has\n * 'origin mode' enabled, or relative to the addressable screen otherwise.\n *\n * @param {number} row The new cursor row.\n */\nhterm.Terminal.prototype.setAbsoluteCursorRow = function(row) {\n  this.setAbsoluteCursorPosition(row, this.screen_.cursorPosition.column);\n};\n\n/**\n * Return the cursor row.\n *\n * @return {number} The zero-based cursor row.\n */\nhterm.Terminal.prototype.getCursorRow = function() {\n  return this.screen_.cursorPosition.row;\n};\n\n/**\n * Request that the ScrollPort redraw itself soon.\n *\n * The redraw will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single redraw.\n */\nhterm.Terminal.prototype.scheduleRedraw_ = function() {\n  if (this.timeouts_.redraw)\n    return;\n\n  var self = this;\n  this.timeouts_.redraw = setTimeout(function() {\n      delete self.timeouts_.redraw;\n      self.scrollPort_.redraw_();\n    }, 0);\n};\n\n/**\n * Request that the ScrollPort be scrolled to the bottom.\n *\n * The scroll will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single scroll.\n *\n * This affects the scrollbar position of the ScrollPort, and has nothing to\n * do with the VT scroll commands.\n */\nhterm.Terminal.prototype.scheduleScrollDown_ = function() {\n  if (this.timeouts_.scrollDown)\n    return;\n\n  var self = this;\n  this.timeouts_.scrollDown = setTimeout(function() {\n      delete self.timeouts_.scrollDown;\n      self.scrollPort_.scrollRowToBottom(self.getRowCount());\n    }, 10);\n};\n\n/**\n * Move the cursor up a specified number of rows.\n *\n * @param {number} count The number of rows to move the cursor.\n */\nhterm.Terminal.prototype.cursorUp = function(count) {\n  this.cursorDown(-(count || 1));\n};\n\n/**\n * Move the cursor down a specified number of rows.\n *\n * @param {number} count The number of rows to move the cursor.\n */\nhterm.Terminal.prototype.cursorDown = function(count) {\n  count = count || 1;\n  var minHeight = (this.options_.originMode ? this.getVTScrollTop() : 0);\n  var maxHeight = (this.options_.originMode ? this.getVTScrollBottom() :\n                   this.screenSize.height - 1);\n\n  var row = lib.f.clamp(this.screen_.cursorPosition.row + count,\n                        minHeight, maxHeight);\n  this.setAbsoluteCursorRow(row);\n};\n\n/**\n * Move the cursor left a specified number of columns.\n *\n * If reverse wraparound mode is enabled and the previous row wrapped into\n * the current row then we back up through the wraparound as well.\n *\n * @param {number} count The number of columns to move the cursor.\n */\nhterm.Terminal.prototype.cursorLeft = function(count) {\n  count = count || 1;\n\n  if (count < 1)\n    return;\n\n  var currentColumn = this.screen_.cursorPosition.column;\n  if (this.options_.reverseWraparound) {\n    if (this.screen_.cursorPosition.overflow) {\n      // If this cursor is in the right margin, consume one count to get it\n      // back to the last column.  This only applies when we're in reverse\n      // wraparound mode.\n      count--;\n      this.clearCursorOverflow();\n\n      if (!count)\n        return;\n    }\n\n    var newRow = this.screen_.cursorPosition.row;\n    var newColumn = currentColumn - count;\n    if (newColumn < 0) {\n      newRow = newRow - Math.floor(count / this.screenSize.width) - 1;\n      if (newRow < 0) {\n        // xterm also wraps from row 0 to the last row.\n        newRow = this.screenSize.height + newRow % this.screenSize.height;\n      }\n      newColumn = this.screenSize.width + newColumn % this.screenSize.width;\n    }\n\n    this.setCursorPosition(Math.max(newRow, 0), newColumn);\n\n  } else {\n    var newColumn = Math.max(currentColumn - count, 0);\n    this.setCursorColumn(newColumn);\n  }\n};\n\n/**\n * Move the cursor right a specified number of columns.\n *\n * @param {number} count The number of columns to move the cursor.\n */\nhterm.Terminal.prototype.cursorRight = function(count) {\n  count = count || 1;\n\n  if (count < 1)\n    return;\n\n  var column = lib.f.clamp(this.screen_.cursorPosition.column + count,\n                           0, this.screenSize.width - 1);\n  this.setCursorColumn(column);\n};\n\n/**\n * Reverse the foreground and background colors of the terminal.\n *\n * This only affects text that was drawn with no attributes.\n *\n * TODO(rginda): Test xterm to see if reverse is respected for text that has\n * been drawn with attributes that happen to coincide with the default\n * 'no-attribute' colors.  My guess is probably not.\n *\n * @param {boolean} state The state to set.\n */\nhterm.Terminal.prototype.setReverseVideo = function(state) {\n  this.options_.reverseVideo = state;\n  if (state) {\n    this.scrollPort_.setForegroundColor(this.backgroundColor_);\n    this.scrollPort_.setBackgroundColor(this.foregroundColor_);\n  } else {\n    this.scrollPort_.setForegroundColor(this.foregroundColor_);\n    this.scrollPort_.setBackgroundColor(this.backgroundColor_);\n  }\n};\n\n/**\n * Ring the terminal bell.\n *\n * This will not play the bell audio more than once per second.\n */\nhterm.Terminal.prototype.ringBell = function() {\n  this.cursorNode_.style.backgroundColor =\n      this.scrollPort_.getForegroundColor();\n\n  var self = this;\n  setTimeout(function() {\n      self.restyleCursor_();\n    }, 200);\n\n  // bellSquelchTimeout_ affects both audio and notification bells.\n  if (this.bellSquelchTimeout_)\n    return;\n\n  if (this.bellAudio_.getAttribute('src')) {\n    this.bellAudio_.play();\n    this.bellSequelchTimeout_ = setTimeout(() => {\n        this.bellSquelchTimeout_ = null;\n      }, 500);\n  } else {\n    this.bellSquelchTimeout_ = null;\n  }\n\n  if (this.desktopNotificationBell_ && !this.document_.hasFocus()) {\n    var n = hterm.notify();\n    this.bellNotificationList_.push(n);\n    // TODO: Should we try to raise the window here?\n    n.onclick = function() { self.closeBellNotifications_(); };\n  }\n};\n\n/**\n * Set the origin mode bit.\n *\n * If origin mode is on, certain VT cursor and scrolling commands measure their\n * row parameter relative to the VT scroll region.  Otherwise, row 0 corresponds\n * to the top of the addressable screen.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set origin mode, false to unset.\n */\nhterm.Terminal.prototype.setOriginMode = function(state) {\n  this.options_.originMode = state;\n  this.setCursorPosition(0, 0);\n};\n\n/**\n * Set the insert mode bit.\n *\n * If insert mode is on, existing text beyond the cursor position will be\n * shifted right to make room for new text.  Otherwise, new text overwrites\n * any existing text.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set insert mode, false to unset.\n */\nhterm.Terminal.prototype.setInsertMode = function(state) {\n  this.options_.insertMode = state;\n};\n\n/**\n * Set the auto carriage return bit.\n *\n * If auto carriage return is on then a formfeed character is interpreted\n * as a newline, otherwise it's the same as a linefeed.  The difference boils\n * down to whether or not the cursor column is reset.\n *\n * @param {boolean} state The state to set.\n */\nhterm.Terminal.prototype.setAutoCarriageReturn = function(state) {\n  this.options_.autoCarriageReturn = state;\n};\n\n/**\n * Set the wraparound mode bit.\n *\n * If wraparound mode is on, certain VT commands will allow the cursor to wrap\n * to the start of the following row.  Otherwise, the cursor is clamped to the\n * end of the screen and attempts to write past it are ignored.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set wraparound mode, false to unset.\n */\nhterm.Terminal.prototype.setWraparound = function(state) {\n  this.options_.wraparound = state;\n};\n\n/**\n * Set the reverse-wraparound mode bit.\n *\n * If wraparound mode is off, certain VT commands will allow the cursor to wrap\n * to the end of the previous row.  Otherwise, the cursor is clamped to column\n * 0.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set reverse-wraparound mode, false to unset.\n */\nhterm.Terminal.prototype.setReverseWraparound = function(state) {\n  this.options_.reverseWraparound = state;\n};\n\n/**\n * Selects between the primary and alternate screens.\n *\n * If alternate mode is on, the alternate screen is active.  Otherwise the\n * primary screen is active.\n *\n * Swapping screens has no effect on the scrollback buffer.\n *\n * Each screen maintains its own cursor position.\n *\n * Defaults to off.\n *\n * @param {boolean} state True to set alternate mode, false to unset.\n */\nhterm.Terminal.prototype.setAlternateMode = function(state) {\n  var cursor = this.saveCursor();\n  this.screen_ = state ? this.alternateScreen_ : this.primaryScreen_;\n\n  if (this.screen_.rowsArray.length &&\n      this.screen_.rowsArray[0].rowIndex != this.scrollbackRows_.length) {\n    // If the screen changed sizes while we were away, our rowIndexes may\n    // be incorrect.\n    var offset = this.scrollbackRows_.length;\n    var ary = this.screen_.rowsArray;\n    for (var i = 0; i < ary.length; i++) {\n      ary[i].rowIndex = offset + i;\n    }\n  }\n\n  this.realizeWidth_(this.screenSize.width);\n  this.realizeHeight_(this.screenSize.height);\n  this.scrollPort_.syncScrollHeight();\n  this.scrollPort_.invalidate();\n\n  this.restoreCursor(cursor);\n  this.scrollPort_.resize();\n};\n\n/**\n * Set the cursor-blink mode bit.\n *\n * If cursor-blink is on, the cursor will blink when it is visible.  Otherwise\n * a visible cursor does not blink.\n *\n * You should make sure to turn blinking off if you're going to dispose of a\n * terminal, otherwise you'll leak a timeout.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set cursor-blink mode, false to unset.\n */\nhterm.Terminal.prototype.setCursorBlink = function(state) {\n  this.options_.cursorBlink = state;\n\n  if (!state && this.timeouts_.cursorBlink) {\n    clearTimeout(this.timeouts_.cursorBlink);\n    delete this.timeouts_.cursorBlink;\n  }\n\n  if (this.options_.cursorVisible)\n    this.setCursorVisible(true);\n};\n\n/**\n * Set the cursor-visible mode bit.\n *\n * If cursor-visible is on, the cursor will be visible.  Otherwise it will not.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set cursor-visible mode, false to unset.\n */\nhterm.Terminal.prototype.setCursorVisible = function(state) {\n  this.options_.cursorVisible = state;\n\n  if (!state) {\n    if (this.timeouts_.cursorBlink) {\n      clearTimeout(this.timeouts_.cursorBlink);\n      delete this.timeouts_.cursorBlink;\n    }\n    this.cursorNode_.style.opacity = '0';\n    return;\n  }\n\n  this.syncCursorPosition_();\n\n  this.cursorNode_.style.opacity = '1';\n\n  if (this.options_.cursorBlink) {\n    if (this.timeouts_.cursorBlink)\n      return;\n\n    this.onCursorBlink_();\n  } else {\n    if (this.timeouts_.cursorBlink) {\n      clearTimeout(this.timeouts_.cursorBlink);\n      delete this.timeouts_.cursorBlink;\n    }\n  }\n};\n\n/**\n * Pause blinking temporarily.\n *\n * When the cursor moves around, it can be helpful to momentarily pause the\n * blinking.  This could be when the user is typing in things, or when they're\n * moving around with the arrow keys.\n */\nhterm.Terminal.prototype.pauseCursorBlink_ = function() {\n  if (!this.options_.cursorBlink) {\n    return;\n  }\n\n  this.cursorBlinkPause_ = true;\n\n  // If a timeout is already pending, reset the clock due to the new input.\n  if (this.timeouts_.cursorBlinkPause) {\n    clearTimeout(this.timeouts_.cursorBlinkPause);\n  }\n  // After 500ms, resume blinking.  That seems like a good balance between user\n  // input timings & responsiveness to resume.\n  this.timeouts_.cursorBlinkPause = setTimeout(() => {\n    delete this.timeouts_.cursorBlinkPause;\n    this.cursorBlinkPause_ = false;\n  }, 500);\n};\n\n/**\n * Synchronizes the visible cursor and document selection with the current\n * cursor coordinates.\n *\n * @return {boolean} True if the cursor is onscreen and synced.\n */\nhterm.Terminal.prototype.syncCursorPosition_ = function() {\n  var topRowIndex = this.scrollPort_.getTopRowIndex();\n  var bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n  var cursorRowIndex = this.scrollbackRows_.length +\n      this.screen_.cursorPosition.row;\n\n  let forceSyncSelection = false;\n  if (this.accessibilityReader_.accessibilityEnabled) {\n    // Report the new position of the cursor for accessibility purposes.\n    const cursorColumnIndex = this.screen_.cursorPosition.column;\n    const cursorLineText =\n        this.screen_.rowsArray[this.screen_.cursorPosition.row].innerText;\n    // This will force the selection to be sync'd to the cursor position if the\n    // user has pressed a key. Generally we would only sync the cursor position\n    // when selection is collapsed so that if the user has selected something\n    // we don't clear the selection by moving the selection. However when a\n    // screen reader is used, it's intuitive for entering a key to move the\n    // selection to the cursor.\n    forceSyncSelection = this.accessibilityReader_.hasUserGesture;\n    this.accessibilityReader_.afterCursorChange(\n        cursorLineText, cursorRowIndex, cursorColumnIndex);\n  }\n\n  if (cursorRowIndex > bottomRowIndex) {\n    // Cursor is scrolled off screen, move it outside of the visible area.\n    this.setCssVar('cursor-offset-row', '-1');\n    return false;\n  }\n\n  if (this.options_.cursorVisible &&\n      this.cursorNode_.style.display == 'none') {\n    // Re-display the terminal cursor if it was hidden by the mouse cursor.\n    this.cursorNode_.style.display = '';\n  }\n\n  // Position the cursor using CSS variable math.  If we do the math in JS,\n  // the float math will end up being more precise than the CSS which will\n  // cause the cursor tracking to be off.\n  this.setCssVar(\n      'cursor-offset-row',\n      `${cursorRowIndex - topRowIndex} + ` +\n      `${this.scrollPort_.visibleRowTopMargin}px`);\n  this.setCssVar('cursor-offset-col', this.screen_.cursorPosition.column);\n\n  this.cursorNode_.setAttribute('title',\n                                '(' + this.screen_.cursorPosition.column +\n                                ', ' + this.screen_.cursorPosition.row +\n                                ')');\n\n  // Update the caret for a11y purposes.\n  var selection = this.document_.getSelection();\n  if (selection && (selection.isCollapsed || forceSyncSelection)) {\n    this.screen_.syncSelectionCaret(selection);\n  }\n  return true;\n};\n\n/**\n * Adjusts the style of this.cursorNode_ according to the current cursor shape\n * and character cell dimensions.\n */\nhterm.Terminal.prototype.restyleCursor_ = function() {\n  var shape = this.cursorShape_;\n\n  if (this.cursorNode_.getAttribute('focus') == 'false') {\n    // Always show a block cursor when unfocused.\n    shape = hterm.Terminal.cursorShape.BLOCK;\n  }\n\n  var style = this.cursorNode_.style;\n\n  switch (shape) {\n    case hterm.Terminal.cursorShape.BEAM:\n      style.backgroundColor = 'transparent';\n      style.borderBottomStyle = '';\n      style.borderLeftStyle = 'solid';\n      break;\n\n    case hterm.Terminal.cursorShape.UNDERLINE:\n      style.backgroundColor = 'transparent';\n      style.borderBottomStyle = 'solid';\n      style.borderLeftStyle = '';\n      break;\n\n    default:\n      style.backgroundColor = 'var(--hterm-cursor-color)';\n      style.borderBottomStyle = '';\n      style.borderLeftStyle = '';\n      break;\n  }\n};\n\n/**\n * Synchronizes the visible cursor with the current cursor coordinates.\n *\n * The sync will happen asynchronously, soon after the call stack winds down.\n * Multiple calls will be coalesced into a single sync. This should be called\n * prior to the cursor actually changing position.\n */\nhterm.Terminal.prototype.scheduleSyncCursorPosition_ = function() {\n  if (this.timeouts_.syncCursor)\n    return;\n\n  if (this.accessibilityReader_.accessibilityEnabled) {\n    // Report the previous position of the cursor for accessibility purposes.\n    const cursorRowIndex = this.scrollbackRows_.length +\n        this.screen_.cursorPosition.row;\n    const cursorColumnIndex = this.screen_.cursorPosition.column;\n    const cursorLineText =\n        this.screen_.rowsArray[this.screen_.cursorPosition.row].innerText;\n    this.accessibilityReader_.beforeCursorChange(\n        cursorLineText, cursorRowIndex, cursorColumnIndex);\n  }\n\n  var self = this;\n  this.timeouts_.syncCursor = setTimeout(function() {\n      self.syncCursorPosition_();\n      delete self.timeouts_.syncCursor;\n    }, 0);\n};\n\n/**\n * Show or hide the zoom warning.\n *\n * The zoom warning is a message warning the user that their browser zoom must\n * be set to 100% in order for hterm to function properly.\n *\n * @param {boolean} state True to show the message, false to hide it.\n */\nhterm.Terminal.prototype.showZoomWarning_ = function(state) {\n  if (!this.zoomWarningNode_) {\n    if (!state)\n      return;\n\n    this.zoomWarningNode_ = this.document_.createElement('div');\n    this.zoomWarningNode_.id = 'hterm:zoom-warning';\n    this.zoomWarningNode_.style.cssText = (\n        'color: black;' +\n        'background-color: #ff2222;' +\n        'font-size: large;' +\n        'border-radius: 8px;' +\n        'opacity: 0.75;' +\n        'padding: 0.2em 0.5em 0.2em 0.5em;' +\n        'top: 0.5em;' +\n        'right: 1.2em;' +\n        'position: absolute;' +\n        '-webkit-text-size-adjust: none;' +\n        '-webkit-user-select: none;' +\n        '-moz-text-size-adjust: none;' +\n        '-moz-user-select: none;');\n\n    this.zoomWarningNode_.addEventListener('click', function(e) {\n      this.parentNode.removeChild(this);\n    });\n  }\n\n  this.zoomWarningNode_.textContent = lib.i18n.replaceReferences(\n      hterm.zoomWarningMessage,\n      [Math.floor(this.scrollPort_.characterSize.zoomFactor * 100)]);\n\n  this.zoomWarningNode_.style.fontFamily = this.prefs_.get('font-family');\n\n  if (state) {\n    if (!this.zoomWarningNode_.parentNode)\n      this.div_.parentNode.appendChild(this.zoomWarningNode_);\n  } else if (this.zoomWarningNode_.parentNode) {\n    this.zoomWarningNode_.parentNode.removeChild(this.zoomWarningNode_);\n  }\n};\n\n/**\n * Show the terminal overlay for a given amount of time.\n *\n * The terminal overlay appears in inverse video in a large font, centered\n * over the terminal.  You should probably keep the overlay message brief,\n * since it's in a large font and you probably aren't going to check the size\n * of the terminal first.\n *\n * @param {string} msg The text (not HTML) message to display in the overlay.\n * @param {number=} opt_timeout The amount of time to wait before fading out\n *     the overlay.  Defaults to 1.5 seconds.  Pass null to have the overlay\n *     stay up forever (or until the next overlay).\n */\nhterm.Terminal.prototype.showOverlay = function(msg, opt_timeout) {\n  if (!this.overlayNode_) {\n    if (!this.div_)\n      return;\n\n    this.overlayNode_ = this.document_.createElement('div');\n    this.overlayNode_.style.cssText = (\n        'border-radius: 15px;' +\n        'font-size: xx-large;' +\n        'opacity: 0.75;' +\n        'padding: 0.2em 0.5em 0.2em 0.5em;' +\n        'position: absolute;' +\n        '-webkit-user-select: none;' +\n        '-webkit-transition: opacity 180ms ease-in;' +\n        '-moz-user-select: none;' +\n        '-moz-transition: opacity 180ms ease-in;');\n\n    this.overlayNode_.addEventListener('mousedown', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }, true);\n  }\n\n  this.overlayNode_.style.color = this.prefs_.get('background-color');\n  this.overlayNode_.style.backgroundColor = this.prefs_.get('foreground-color');\n  this.overlayNode_.style.fontFamily = this.prefs_.get('font-family');\n\n  this.overlayNode_.textContent = msg;\n  this.overlayNode_.style.opacity = '0.75';\n\n  if (!this.overlayNode_.parentNode)\n    this.div_.appendChild(this.overlayNode_);\n\n  var divSize = hterm.getClientSize(lib.notNull(this.div_));\n  var overlaySize = hterm.getClientSize(this.overlayNode_);\n\n  this.overlayNode_.style.top =\n      (divSize.height - overlaySize.height) / 2 + 'px';\n  this.overlayNode_.style.left = (divSize.width - overlaySize.width -\n      this.scrollPort_.currentScrollbarWidthPx) / 2 + 'px';\n\n  if (this.overlayTimeout_)\n    clearTimeout(this.overlayTimeout_);\n\n  this.accessibilityReader_.assertiveAnnounce(msg);\n\n  if (opt_timeout === null)\n    return;\n\n  this.overlayTimeout_ = setTimeout(() => {\n    this.overlayNode_.style.opacity = '0';\n    this.overlayTimeout_ = setTimeout(() => this.hideOverlay(), 200);\n  }, opt_timeout || 1500);\n};\n\n/**\n * Hide the terminal overlay immediately.\n *\n * Useful when we show an overlay for an event with an unknown end time.\n */\nhterm.Terminal.prototype.hideOverlay = function() {\n  if (this.overlayTimeout_)\n    clearTimeout(this.overlayTimeout_);\n  this.overlayTimeout_ = null;\n\n  if (this.overlayNode_.parentNode)\n    this.overlayNode_.parentNode.removeChild(this.overlayNode_);\n  this.overlayNode_.style.opacity = '0.75';\n};\n\n/**\n * Paste from the system clipboard to the terminal.\n *\n * @return {boolean}\n */\nhterm.Terminal.prototype.paste = function() {\n  return hterm.pasteFromClipboard(this.document_);\n};\n\n/**\n * Copy a string to the system clipboard.\n *\n * Note: If there is a selected range in the terminal, it'll be cleared.\n *\n * @param {string} str The string to copy.\n */\nhterm.Terminal.prototype.copyStringToClipboard = function(str) {\n  if (this.prefs_.get('enable-clipboard-notice'))\n    setTimeout(this.showOverlay.bind(this, hterm.notifyCopyMessage, 500), 200);\n\n  hterm.copySelectionToClipboard(this.document_, str);\n};\n\n/**\n * Display an image.\n *\n * Either URI or buffer or blob fields must be specified.\n *\n * @param {{\n *     name: (string|undefined),\n *     size: (string|number|undefined),\n *     preserveAspectRation: (boolean|undefined),\n *     inline: (boolean|undefined),\n *     width: (string|number|undefined),\n *     height: (string|number|undefined),\n *     align: (string|undefined),\n *     url: (string|undefined),\n *     buffer: (!ArrayBuffer|undefined),\n *     blob: (!Blob|undefined),\n *     type: (string|undefined),\n * }} options The image to display.\n *   name A human readable string for the image\n *   size The size (in bytes).\n *   preserveAspectRatio Whether to preserve aspect.\n *   inline Whether to display the image inline.\n *   width The width of the image.\n *   height The height of the image.\n *   align Direction to align the image.\n *   uri The source URI for the image.\n *   buffer The ArrayBuffer image data.\n *   blob The Blob image data.\n *   type The MIME type of the image data.\n * @param {function()=} onLoad Callback when loading finishes.\n * @param {function(!Event)=} onError Callback when loading fails.\n */\nhterm.Terminal.prototype.displayImage = function(options, onLoad, onError) {\n  // Make sure we're actually given a resource to display.\n  if (options.uri === undefined && options.buffer === undefined &&\n      options.blob === undefined)\n    return;\n\n  // Set up the defaults to simplify code below.\n  if (!options.name)\n    options.name = '';\n\n  // See if the mime type is available.  If not, guess from the filename.\n  // We don't list all possible mime types because the browser can usually\n  // guess it correctly.  So list the ones that need a bit more help.\n  if (!options.type) {\n    const ary = options.name.split('.');\n    const ext = ary[ary.length - 1].trim();\n    switch (ext) {\n      case 'svg':\n      case 'svgz':\n        options.type = 'image/svg+xml';\n        break;\n    }\n  }\n\n  // Has the user approved image display yet?\n  if (this.allowImagesInline !== true) {\n    this.newLine();\n    const row = this.getRowNode(this.scrollbackRows_.length +\n                                this.getCursorRow() - 1);\n\n    if (this.allowImagesInline === false) {\n      row.textContent = hterm.msg('POPUP_INLINE_IMAGE_DISABLED', [],\n                                  'Inline Images Disabled');\n      return;\n    }\n\n    // Show a prompt.\n    let button;\n    const span = this.document_.createElement('span');\n    span.innerText = hterm.msg('POPUP_INLINE_IMAGE', [], 'Inline Images');\n    span.style.fontWeight = 'bold';\n    span.style.borderWidth = '1px';\n    span.style.borderStyle = 'dashed';\n    button = this.document_.createElement('span');\n    button.innerText = hterm.msg('BUTTON_BLOCK', [], 'block');\n    button.style.marginLeft = '1em';\n    button.style.borderWidth = '1px';\n    button.style.borderStyle = 'solid';\n    button.addEventListener('click', () => {\n      this.prefs_.set('allow-images-inline', false);\n    });\n    span.appendChild(button);\n    button = this.document_.createElement('span');\n    button.innerText = hterm.msg('BUTTON_ALLOW_SESSION', [],\n                                 'allow this session');\n    button.style.marginLeft = '1em';\n    button.style.borderWidth = '1px';\n    button.style.borderStyle = 'solid';\n    button.addEventListener('click', () => {\n      this.allowImagesInline = true;\n    });\n    span.appendChild(button);\n    button = this.document_.createElement('span');\n    button.innerText = hterm.msg('BUTTON_ALLOW_ALWAYS', [], 'always allow');\n    button.style.marginLeft = '1em';\n    button.style.borderWidth = '1px';\n    button.style.borderStyle = 'solid';\n    button.addEventListener('click', () => {\n      this.prefs_.set('allow-images-inline', true);\n    });\n    span.appendChild(button);\n\n    row.appendChild(span);\n    return;\n  }\n\n  // See if we should show this object directly, or download it.\n  if (options.inline) {\n    const io = this.io.push();\n    io.showOverlay(hterm.msg('LOADING_RESOURCE_START', [options.name],\n                             'Loading $1 ...'));\n\n    // While we're loading the image, eat all the user's input.\n    io.onVTKeystroke = io.sendString = () => {};\n\n    // Initialize this new image.\n    const img = this.document_.createElement('img');\n    if (options.uri !== undefined) {\n      img.src = options.uri;\n    } else if (options.buffer !== undefined) {\n      const blob = new Blob([options.buffer], {type: options.type});\n      img.src = URL.createObjectURL(blob);\n    } else {\n      const blob = new Blob([options.blob], {type: options.type});\n      img.src = URL.createObjectURL(blob);\n    }\n    img.title = img.alt = options.name;\n\n    // Attach the image to the page to let it load/render.  It won't stay here.\n    // This is needed so it's visible and the DOM can calculate the height.  If\n    // the image is hidden or not in the DOM, the height is always 0.\n    this.document_.body.appendChild(img);\n\n    // Wait for the image to finish loading before we try moving it to the\n    // right place in the terminal.\n    img.onload = () => {\n      // Now that we have the image dimensions, figure out how to show it.\n      img.style.objectFit = options.preserveAspectRatio ? 'scale-down' : 'fill';\n      img.style.maxWidth = `${this.document_.body.clientWidth}px`;\n      img.style.maxHeight = `${this.document_.body.clientHeight}px`;\n\n      // Parse a width/height specification.\n      const parseDim = (dim, maxDim, cssVar) => {\n        if (!dim || dim == 'auto')\n          return '';\n\n        const ary = dim.match(/^([0-9]+)(px|%)?$/);\n        if (ary) {\n          if (ary[2] == '%')\n            return Math.floor(maxDim * ary[1] / 100) + 'px';\n          else if (ary[2] == 'px')\n            return dim;\n          else\n            return `calc(${dim} * var(${cssVar}))`;\n        }\n\n        return '';\n      };\n      img.style.width =\n          parseDim(options.width, this.document_.body.clientWidth,\n                   '--hterm-charsize-width');\n      img.style.height =\n          parseDim(options.height,  this.document_.body.clientHeight,\n                   '--hterm-charsize-height');\n\n      // Figure out how many rows the image occupies, then add that many.\n      // Note: This count will be inaccurate if the font size changes on us.\n      const padRows = Math.ceil(img.clientHeight /\n                                this.scrollPort_.characterSize.height);\n      for (let i = 0; i < padRows; ++i)\n        this.newLine();\n\n      // Update the max height in case the user shrinks the character size.\n      img.style.maxHeight = `calc(${padRows} * var(--hterm-charsize-height))`;\n\n      // Move the image to the last row.  This way when we scroll up, it doesn't\n      // disappear when the first row gets clipped.  It will disappear when we\n      // scroll down and the last row is clipped ...\n      this.document_.body.removeChild(img);\n      // Create a wrapper node so we can do an absolute in a relative position.\n      // This helps with rounding errors between JS & CSS counts.\n      const div = this.document_.createElement('div');\n      div.style.position = 'relative';\n      div.style.textAlign = options.align || '';\n      img.style.position = 'absolute';\n      img.style.bottom = 'calc(0px - var(--hterm-charsize-height))';\n      div.appendChild(img);\n      const row = this.getRowNode(this.scrollbackRows_.length +\n                                  this.getCursorRow() - 1);\n      row.appendChild(div);\n\n      // Now that the image has been read, we can revoke the source.\n      if (options.uri === undefined) {\n        URL.revokeObjectURL(img.src);\n      }\n\n      io.hideOverlay();\n      io.pop();\n\n      if (onLoad)\n        onLoad();\n    };\n\n    // If we got a malformed image, give up.\n    img.onerror = (e) => {\n      this.document_.body.removeChild(img);\n      io.showOverlay(hterm.msg('LOADING_RESOURCE_FAILED', [options.name],\n                               'Loading $1 failed'));\n      io.pop();\n\n      if (onError)\n        onError(e);\n    };\n  } else {\n    // We can't use chrome.downloads.download as that requires \"downloads\"\n    // permissions, and that works only in extensions, not apps.\n    const a = this.document_.createElement('a');\n    if (options.uri !== undefined) {\n      a.href = options.uri;\n    } else if (options.buffer !== undefined) {\n      const blob = new Blob([options.buffer]);\n      a.href = URL.createObjectURL(blob);\n    } else {\n      a.href = URL.createObjectURL(lib.notNull(options.blob));\n    }\n    a.download = options.name;\n    this.document_.body.appendChild(a);\n    a.click();\n    a.remove();\n    if (options.uri === undefined) {\n      URL.revokeObjectURL(a.href);\n    }\n  }\n};\n\n/**\n * Returns the selected text, or null if no text is selected.\n *\n * @return {string|null}\n */\nhterm.Terminal.prototype.getSelectionText = function() {\n  var selection = this.scrollPort_.selection;\n  selection.sync();\n\n  if (selection.isCollapsed)\n    return null;\n\n  // Start offset measures from the beginning of the line.\n  var startOffset = selection.startOffset;\n  var node = selection.startNode;\n\n  // If an x-row isn't selected, |node| will be null.\n  if (!node)\n    return null;\n\n  if (node.nodeName != 'X-ROW') {\n    // If the selection doesn't start on an x-row node, then it must be\n    // somewhere inside the x-row.  Add any characters from previous siblings\n    // into the start offset.\n\n    if (node.nodeName == '#text' && node.parentNode.nodeName == 'SPAN') {\n      // If node is the text node in a styled span, move up to the span node.\n      node = node.parentNode;\n    }\n\n    while (node.previousSibling) {\n      node = node.previousSibling;\n      startOffset += hterm.TextAttributes.nodeWidth(node);\n    }\n  }\n\n  // End offset measures from the end of the line.\n  var endOffset = (hterm.TextAttributes.nodeWidth(selection.endNode) -\n                   selection.endOffset);\n  node = selection.endNode;\n\n  if (node.nodeName != 'X-ROW') {\n    // If the selection doesn't end on an x-row node, then it must be\n    // somewhere inside the x-row.  Add any characters from following siblings\n    // into the end offset.\n\n    if (node.nodeName == '#text' && node.parentNode.nodeName == 'SPAN') {\n      // If node is the text node in a styled span, move up to the span node.\n      node = node.parentNode;\n    }\n\n    while (node.nextSibling) {\n      node = node.nextSibling;\n      endOffset += hterm.TextAttributes.nodeWidth(node);\n    }\n  }\n\n  var rv = this.getRowsText(selection.startRow.rowIndex,\n                            selection.endRow.rowIndex + 1);\n  return lib.wc.substring(rv, startOffset, lib.wc.strWidth(rv) - endOffset);\n};\n\n/**\n * Copy the current selection to the system clipboard, then clear it after a\n * short delay.\n */\nhterm.Terminal.prototype.copySelectionToClipboard = function() {\n  var text = this.getSelectionText();\n  if (text != null)\n    this.copyStringToClipboard(text);\n};\n\n/**\n * Show overlay with current terminal size.\n */\nhterm.Terminal.prototype.overlaySize = function() {\n  if (this.prefs_.get('enable-resize-status')) {\n    this.showOverlay(this.screenSize.width + 'x' + this.screenSize.height);\n  }\n};\n\n/**\n * Invoked by hterm.Terminal.Keyboard when a VT keystroke is detected.\n *\n * @param {string} string The VT string representing the keystroke, in UTF-16.\n */\nhterm.Terminal.prototype.onVTKeystroke = function(string) {\n  if (this.scrollOnKeystroke_)\n    this.scrollPort_.scrollRowToBottom(this.getRowCount());\n\n  this.pauseCursorBlink_();\n\n  this.io.onVTKeystroke(string);\n};\n\n/**\n * Open the selected url.\n */\nhterm.Terminal.prototype.openSelectedUrl_ = function() {\n  var str = this.getSelectionText();\n\n  // If there is no selection, try and expand wherever they clicked.\n  if (str == null) {\n    this.screen_.expandSelectionForUrl(this.document_.getSelection());\n    str = this.getSelectionText();\n\n    // If clicking in empty space, return.\n    if (str == null)\n      return;\n  }\n\n  // Make sure URL is valid before opening.\n  if (str.length > 2048 || str.search(/[\\s\\[\\](){}<>\"'\\\\^`]/) >= 0)\n    return;\n\n  // If the URI isn't anchored, it'll open relative to the extension.\n  // We have no way of knowing the correct schema, so assume http.\n  if (str.search('^[a-zA-Z][a-zA-Z0-9+.-]*://') < 0) {\n    // We have to whitelist a few protocols that lack authorities and thus\n    // never use the //.  Like mailto.\n    switch (str.split(':', 1)[0]) {\n      case 'mailto':\n        break;\n      default:\n        str = 'http://' + str;\n        break;\n    }\n  }\n\n  hterm.openUrl(str);\n};\n\n/**\n * Manage the automatic mouse hiding behavior while typing.\n *\n * @param {?boolean=} v Whether to enable automatic hiding.\n */\nhterm.Terminal.prototype.setAutomaticMouseHiding = function(v=null) {\n  // Since Chrome OS & macOS do this by default everywhere, we don't need to.\n  // Linux & Windows seem to leave this to specific applications to manage.\n  if (v === null)\n    v = (hterm.os != 'cros' && hterm.os != 'mac');\n\n  this.mouseHideWhileTyping_ = !!v;\n};\n\n/**\n * Handler for monitoring user keyboard activity.\n *\n * This isn't for processing the keystrokes directly, but for updating any\n * state that might toggle based on the user using the keyboard at all.\n *\n * @param {!KeyboardEvent} e The keyboard event that triggered us.\n */\nhterm.Terminal.prototype.onKeyboardActivity_ = function(e) {\n  // When the user starts typing, hide the mouse cursor.\n  if (this.mouseHideWhileTyping_ && !this.mouseHideDelay_)\n    this.setCssVar('mouse-cursor-style', 'none');\n};\n\n/**\n * Add the terminalRow and terminalColumn properties to mouse events and\n * then forward on to onMouse().\n *\n * The terminalRow and terminalColumn properties contain the (row, column)\n * coordinates for the mouse event.\n *\n * @param {!MouseEvent} e The mouse event to handle.\n */\nhterm.Terminal.prototype.onMouse_ = function(e) {\n  if (e.processedByTerminalHandler_) {\n    // We register our event handlers on the document, as well as the cursor\n    // and the scroll blocker.  Mouse events that occur on the cursor or\n    // scroll blocker will also appear on the document, but we don't want to\n    // process them twice.\n    //\n    // We can't just prevent bubbling because that has other side effects, so\n    // we decorate the event object with this property instead.\n    return;\n  }\n\n  // Consume navigation events.  Button 3 is usually \"browser back\" and\n  // button 4 is \"browser forward\" which we don't want to happen.\n  if (e.button > 2) {\n    e.preventDefault();\n    // We don't return so click events can be passed to the remote below.\n  }\n\n  var reportMouseEvents = (!this.defeatMouseReports_ &&\n      this.vt.mouseReport != this.vt.MOUSE_REPORT_DISABLED);\n\n  e.processedByTerminalHandler_ = true;\n\n  // Handle auto hiding of mouse cursor while typing.\n  if (this.mouseHideWhileTyping_ && !this.mouseHideDelay_) {\n    // Make sure the mouse cursor is visible.\n    this.syncMouseStyle();\n    // This debounce isn't perfect, but should work well enough for such a\n    // simple implementation.  If the user moved the mouse, we enabled this\n    // debounce, and then moved the mouse just before the timeout, we wouldn't\n    // debounce that later movement.\n    this.mouseHideDelay_ = setTimeout(() => this.mouseHideDelay_ = null, 1000);\n  }\n\n  // One based row/column stored on the mouse event.\n  e.terminalRow = Math.floor(\n      (e.clientY - this.scrollPort_.visibleRowTopMargin) /\n      this.scrollPort_.characterSize.height) + 1;\n  e.terminalColumn = Math.floor(\n      e.clientX / this.scrollPort_.characterSize.width) + 1;\n\n  if (e.type == 'mousedown' && e.terminalColumn > this.screenSize.width) {\n    // Mousedown in the scrollbar area.\n    return;\n  }\n\n  if (this.options_.cursorVisible && !reportMouseEvents) {\n    // If the cursor is visible and we're not sending mouse events to the\n    // host app, then we want to hide the terminal cursor when the mouse\n    // cursor is over top.  This keeps the terminal cursor from interfering\n    // with local text selection.\n    if (e.terminalRow - 1 == this.screen_.cursorPosition.row &&\n        e.terminalColumn - 1 == this.screen_.cursorPosition.column) {\n      this.cursorNode_.style.display = 'none';\n    } else if (this.cursorNode_.style.display == 'none') {\n      this.cursorNode_.style.display = '';\n    }\n  }\n\n  if (e.type == 'mousedown') {\n    this.contextMenu.hide();\n\n    if (e.altKey || !reportMouseEvents) {\n      // If VT mouse reporting is disabled, or has been defeated with\n      // alt-mousedown, then the mouse will act on the local selection.\n      this.defeatMouseReports_ = true;\n      this.setSelectionEnabled(true);\n    } else {\n      // Otherwise we defer ownership of the mouse to the VT.\n      this.defeatMouseReports_ = false;\n      this.document_.getSelection().collapseToEnd();\n      this.setSelectionEnabled(false);\n      e.preventDefault();\n    }\n  }\n\n  if (!reportMouseEvents) {\n    if (e.type == 'dblclick') {\n      this.screen_.expandSelection(this.document_.getSelection());\n      if (this.copyOnSelect)\n        this.copySelectionToClipboard();\n    }\n\n    if (e.type == 'click' && !e.shiftKey && (e.ctrlKey || e.metaKey)) {\n      // Debounce this event with the dblclick event.  If you try to doubleclick\n      // a URL to open it, Chrome will fire click then dblclick, but we won't\n      // have expanded the selection text at the first click event.\n      clearTimeout(this.timeouts_.openUrl);\n      this.timeouts_.openUrl = setTimeout(this.openSelectedUrl_.bind(this),\n                                          500);\n      return;\n    }\n\n    if (e.type == 'mousedown') {\n      if (e.ctrlKey && e.button == 2 /* right button */) {\n        e.preventDefault();\n        this.contextMenu.show(e, this);\n      } else if (e.button == this.mousePasteButton ||\n          (this.mouseRightClickPaste && e.button == 2 /* right button */)) {\n        if (!this.paste())\n          console.warn('Could not paste manually due to web restrictions');\n      }\n    }\n\n    if (e.type == 'mouseup' && e.button == 0 && this.copyOnSelect &&\n        !this.document_.getSelection().isCollapsed) {\n      this.copySelectionToClipboard();\n    }\n\n    if ((e.type == 'mousemove' || e.type == 'mouseup') &&\n        this.scrollBlockerNode_.engaged) {\n      // Disengage the scroll-blocker after one of these events.\n      this.scrollBlockerNode_.engaged = false;\n      this.scrollBlockerNode_.style.top = '-99px';\n    }\n\n    // Emulate arrow key presses via scroll wheel events.\n    if (this.scrollWheelArrowKeys_ && !e.shiftKey &&\n        this.keyboard.applicationCursor && !this.isPrimaryScreen()) {\n      if (e.type == 'wheel') {\n        const delta =\n            this.scrollPort_.scrollWheelDelta(/** @type {!WheelEvent} */ (e));\n\n        // Helper to turn a wheel event delta into a series of key presses.\n        const deltaToArrows = (distance, charSize, arrowPos, arrowNeg) => {\n          if (distance == 0) {\n            return '';\n          }\n\n          // Convert the scroll distance into a number of rows/cols.\n          const cells = lib.f.smartFloorDivide(Math.abs(distance), charSize);\n          const data = '\\x1bO' + (distance < 0 ? arrowNeg : arrowPos);\n          return data.repeat(cells);\n        };\n\n        // The order between up/down and left/right doesn't really matter.\n        this.io.sendString(\n            // Up/down arrow keys.\n            deltaToArrows(delta.y, this.scrollPort_.characterSize.height,\n                          'A', 'B') +\n            // Left/right arrow keys.\n            deltaToArrows(delta.x, this.scrollPort_.characterSize.width,\n                          'C', 'D')\n        );\n\n        e.preventDefault();\n      }\n    }\n  } else /* if (this.reportMouseEvents) */ {\n    if (!this.scrollBlockerNode_.engaged) {\n      if (e.type == 'mousedown') {\n        // Move the scroll-blocker into place if we want to keep the scrollport\n        // from scrolling.\n        this.scrollBlockerNode_.engaged = true;\n        this.scrollBlockerNode_.style.top = (e.clientY - 5) + 'px';\n        this.scrollBlockerNode_.style.left = (e.clientX - 5) + 'px';\n      } else if (e.type == 'mousemove') {\n        // Oh.  This means that drag-scroll was disabled AFTER the mouse down,\n        // in which case it's too late to engage the scroll-blocker.\n        this.document_.getSelection().collapseToEnd();\n        e.preventDefault();\n      }\n    }\n\n    this.onMouse(e);\n  }\n\n  if (e.type == 'mouseup' && this.document_.getSelection().isCollapsed) {\n    // Restore this on mouseup in case it was temporarily defeated with a\n    // alt-mousedown.  Only do this when the selection is empty so that\n    // we don't immediately kill the users selection.\n    this.defeatMouseReports_ = false;\n  }\n};\n\n/**\n * Clients should override this if they care to know about mouse events.\n *\n * The event parameter will be a normal DOM mouse click event with additional\n * 'terminalRow' and 'terminalColumn' properties.\n *\n * @param {!MouseEvent} e The mouse event to handle.\n */\nhterm.Terminal.prototype.onMouse = function(e) { };\n\n/**\n * React when focus changes.\n *\n * @param {boolean} focused True if focused, false otherwise.\n */\nhterm.Terminal.prototype.onFocusChange_ = function(focused) {\n  this.cursorNode_.setAttribute('focus', focused);\n  this.restyleCursor_();\n\n  if (this.reportFocus)\n    this.io.sendString(focused === true ? '\\x1b[I' : '\\x1b[O');\n\n  if (focused === true)\n    this.closeBellNotifications_();\n};\n\n/**\n * React when the ScrollPort is scrolled.\n */\nhterm.Terminal.prototype.onScroll_ = function() {\n  this.scheduleSyncCursorPosition_();\n};\n\n/**\n * React when text is pasted into the scrollPort.\n *\n * @param {{text: string}} e The text of the paste event to handle.\n */\nhterm.Terminal.prototype.onPaste_ = function(e) {\n  var data = e.text.replace(/\\n/mg, '\\r');\n  if (this.options_.bracketedPaste) {\n    // We strip out most escape sequences as they can cause issues (like\n    // inserting an \\x1b[201~ midstream).  We pass through whitespace\n    // though: 0x08:\\b 0x09:\\t 0x0a:\\n 0x0d:\\r.\n    // This matches xterm behavior.\n    const filter = (data) => data.replace(/[\\x00-\\x07\\x0b-\\x0c\\x0e-\\x1f]/g, '');\n    data = '\\x1b[200~' + filter(data) + '\\x1b[201~';\n  }\n\n  this.io.sendString(data);\n};\n\n/**\n * React when the user tries to copy from the scrollPort.\n *\n * @param {!Event} e The DOM copy event.\n */\nhterm.Terminal.prototype.onCopy_ = function(e) {\n  if (!this.useDefaultWindowCopy) {\n    e.preventDefault();\n    setTimeout(this.copySelectionToClipboard.bind(this), 0);\n  }\n};\n\n/**\n * React when the ScrollPort is resized.\n *\n * Note: This function should not directly contain code that alters the internal\n * state of the terminal.  That kind of code belongs in realizeWidth or\n * realizeHeight, so that it can be executed synchronously in the case of a\n * programmatic width change.\n */\nhterm.Terminal.prototype.onResize_ = function() {\n  var columnCount = Math.floor(this.scrollPort_.getScreenWidth() /\n                               this.scrollPort_.characterSize.width) || 0;\n  var rowCount = lib.f.smartFloorDivide(this.scrollPort_.getScreenHeight(),\n                            this.scrollPort_.characterSize.height) || 0;\n\n  if (columnCount <= 0 || rowCount <= 0) {\n    // We avoid these situations since they happen sometimes when the terminal\n    // gets removed from the document or during the initial load, and we can't\n    // deal with that.\n    // This can also happen if called before the scrollPort calculates the\n    // character size, meaning we dived by 0 above and default to 0 values.\n    return;\n  }\n\n  var isNewSize = (columnCount != this.screenSize.width ||\n                   rowCount != this.screenSize.height);\n  const wasScrolledEnd = this.scrollPort_.isScrolledEnd;\n\n  // We do this even if the size didn't change, just to be sure everything is\n  // in sync.\n  this.realizeSize_(columnCount, rowCount);\n  this.showZoomWarning_(this.scrollPort_.characterSize.zoomFactor != 1);\n\n  if (isNewSize)\n    this.overlaySize();\n\n  this.restyleCursor_();\n  this.scheduleSyncCursorPosition_();\n\n  if (wasScrolledEnd) {\n    this.scrollEnd();\n  }\n};\n\n/**\n * Service the cursor blink timeout.\n */\nhterm.Terminal.prototype.onCursorBlink_ = function() {\n  if (!this.options_.cursorBlink) {\n    delete this.timeouts_.cursorBlink;\n    return;\n  }\n\n  if (this.cursorNode_.getAttribute('focus') == 'false' ||\n      this.cursorNode_.style.opacity == '0' ||\n      this.cursorBlinkPause_) {\n    this.cursorNode_.style.opacity = '1';\n    this.timeouts_.cursorBlink = setTimeout(this.myOnCursorBlink_,\n                                            this.cursorBlinkCycle_[0]);\n  } else {\n    this.cursorNode_.style.opacity = '0';\n    this.timeouts_.cursorBlink = setTimeout(this.myOnCursorBlink_,\n                                            this.cursorBlinkCycle_[1]);\n  }\n};\n\n/**\n * Set the scrollbar-visible mode bit.\n *\n * If scrollbar-visible is on, the vertical scrollbar will be visible.\n * Otherwise it will not.\n *\n * Defaults to on.\n *\n * @param {boolean} state True to set scrollbar-visible mode, false to unset.\n */\nhterm.Terminal.prototype.setScrollbarVisible = function(state) {\n  this.scrollPort_.setScrollbarVisible(state);\n};\n\n/**\n * Set the scroll wheel move multiplier.  This will affect how fast the page\n * scrolls on wheel events.\n *\n * Defaults to 1.\n *\n * @param {number} multiplier The multiplier to set.\n */\nhterm.Terminal.prototype.setScrollWheelMoveMultipler = function(multiplier) {\n  this.scrollPort_.setScrollWheelMoveMultipler(multiplier);\n};\n\n/**\n * Close all web notifications created by terminal bells.\n */\nhterm.Terminal.prototype.closeBellNotifications_ = function() {\n  this.bellNotificationList_.forEach(function(n) {\n      n.close();\n    });\n  this.bellNotificationList_.length = 0;\n};\n\n/**\n * Syncs the cursor position when the scrollport gains focus.\n */\nhterm.Terminal.prototype.onScrollportFocus_ = function() {\n  // If the cursor is offscreen we set selection to the last row on the screen.\n  const topRowIndex = this.scrollPort_.getTopRowIndex();\n  const bottomRowIndex = this.scrollPort_.getBottomRowIndex(topRowIndex);\n  const selection = this.document_.getSelection();\n  if (!this.syncCursorPosition_() && selection) {\n    selection.collapse(this.getRowNode(bottomRowIndex));\n  }\n};\n// SOURCE FILE: hterm/js/hterm_terminal_io.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Input/Output interface used by commands to communicate with the terminal.\n *\n * Commands like `nassh` and `crosh` receive an instance of this class as\n * part of their argv object.  This allows them to write to and read from the\n * terminal without exposing them to an entire hterm.Terminal instance.\n *\n * The active command must override the onVTKeystroke() and sendString() methods\n * of this class in order to receive keystrokes and send output to the correct\n * destination.\n *\n * Isolating commands from the terminal provides the following benefits:\n * - Provides a mechanism to save and restore onVTKeystroke and sendString\n *   handlers when invoking subcommands (see the push() and pop() methods).\n * - The isolation makes it easier to make changes in Terminal and supporting\n *   classes without affecting commands.\n * - In The Future commands may run in web workers where they would only be able\n *   to talk to a Terminal instance through an IPC mechanism.\n *\n * @param {!hterm.Terminal} terminal\n * @constructor\n */\nhterm.Terminal.IO = function(terminal) {\n  this.terminal_ = terminal;\n\n  // The IO object to restore on IO.pop().\n  this.previousIO_ = null;\n\n  // Any data this object accumulated while not active.\n  this.buffered_ = '';\n\n  // Decoder to maintain UTF-8 decode state.\n  this.textDecoder_ = new TextDecoder();\n};\n\n/**\n * Show the terminal overlay for a given amount of time.\n *\n * The terminal overlay appears in inverse video in a large font, centered\n * over the terminal.  You should probably keep the overlay message brief,\n * since it's in a large font and you probably aren't going to check the size\n * of the terminal first.\n *\n * @param {string} message The text (not HTML) message to display in the\n *     overlay.\n * @param {number=} opt_timeout The amount of time to wait before fading out\n *     the overlay.  Defaults to 1.5 seconds.  Pass null to have the overlay\n *     stay up forever (or until the next overlay).\n */\nhterm.Terminal.IO.prototype.showOverlay = function(message, opt_timeout) {\n  this.terminal_.showOverlay(message, opt_timeout);\n};\n\n/**\n * Hide the current overlay immediately.\n *\n * Useful when we show an overlay for an event with an unknown end time.\n */\nhterm.Terminal.IO.prototype.hideOverlay = function() {\n  this.terminal_.hideOverlay();\n};\n\n/**\n * Open an frame in the current terminal window, pointed to the specified\n * url.\n *\n * Eventually we'll probably need size/position/decoration options.\n * The user should also be able to move/resize the frame.\n *\n * @param {string} url The URL to load in the frame.\n * @param {!Object=} opt_options Optional frame options.  Not implemented.\n * @return {!hterm.Frame}\n */\nhterm.Terminal.IO.prototype.createFrame = function(url, opt_options) {\n  return new hterm.Frame(this.terminal_, url, opt_options);\n};\n\n/**\n * Change the preference profile for the terminal.\n *\n * @param {string} profileName The name of the preference profile to activate.\n */\nhterm.Terminal.IO.prototype.setTerminalProfile = function(profileName) {\n  this.terminal_.setProfile(profileName);\n};\n\n/**\n * Create a new hterm.Terminal.IO instance and make it active on the Terminal\n * object associated with this instance.\n *\n * This is used to pass control of the terminal IO off to a subcommand.  The\n * IO.pop() method can be used to restore control when the subcommand completes.\n *\n * @return {!hterm.Terminal.IO} The new foreground IO instance.\n */\nhterm.Terminal.IO.prototype.push = function() {\n  var io = new hterm.Terminal.IO(this.terminal_);\n  io.keyboardCaptured_ = this.keyboardCaptured_;\n\n  io.columnCount = this.columnCount;\n  io.rowCount = this.rowCount;\n\n  io.previousIO_ = this.terminal_.io;\n  this.terminal_.io = io;\n\n  return io;\n};\n\n/**\n * Restore the Terminal's previous IO object.\n *\n * We'll flush out any queued data.\n */\nhterm.Terminal.IO.prototype.pop = function() {\n  this.terminal_.io = this.previousIO_;\n  this.previousIO_.flush();\n};\n\n/**\n * Flush accumulated data.\n *\n * If we're not the active IO, the connected process might still be writing\n * data to us, but we won't be displaying it.  Flush any buffered data now.\n */\nhterm.Terminal.IO.prototype.flush = function() {\n  if (this.buffered_) {\n    this.terminal_.interpret(this.buffered_);\n    this.buffered_ = '';\n  }\n};\n\n/**\n * Called when data needs to be sent to the current command.\n *\n * Clients should override this to receive notification of pending data.\n *\n * @param {string} string The data to send.\n */\nhterm.Terminal.IO.prototype.sendString = function(string) {\n  // Override this.\n  console.log('Unhandled sendString: ' + string);\n};\n\n/**\n * Called when a terminal keystroke is detected.\n *\n * Clients should override this to receive notification of keystrokes.\n *\n * @param {string} string The VT key sequence.\n */\nhterm.Terminal.IO.prototype.onVTKeystroke = function(string) {\n  // Override this.\n  console.log('Unobserverd VT keystroke: ' + JSON.stringify(string));\n};\n\n/**\n * Receives notification when the terminal is resized.\n *\n * @param {number} width The new terminal width.\n * @param {number} height The new terminal height.\n */\nhterm.Terminal.IO.prototype.onTerminalResize_ = function(width, height) {\n  var obj = this;\n  while (obj) {\n    obj.columnCount = width;\n    obj.rowCount = height;\n    obj = obj.previousIO_;\n  }\n\n  this.onTerminalResize(width, height);\n};\n\n/**\n * Called when terminal size is changed.\n *\n * Clients should override this to receive notification of resize.\n *\n * @param {string|number} width The new terminal width.\n * @param {string|number} height The new terminal height.\n */\nhterm.Terminal.IO.prototype.onTerminalResize = function(width, height) {\n  // Override this.\n};\n\n/**\n * Write a UTF-8 encoded byte string to the terminal.\n *\n * @param {string|!ArrayBuffer} string The UTF-8 encoded string to print.\n */\nhterm.Terminal.IO.prototype.writeUTF8 = function(string) {\n  // We can't use instanceof here on string to see if it's an ArrayBuffer as it\n  // might be constructed in a different runtime context whose ArrayBuffer was\n  // not the same.  See https://crbug.com/930171#5 for more details.\n  if (typeof string == 'string') {\n    if (this.terminal_.vt.characterEncoding != 'raw') {\n      const bytes = lib.codec.stringToCodeUnitArray(string);\n      string = this.textDecoder_.decode(bytes, {stream: true});\n    }\n  } else {\n    // Handle array buffers & typed arrays by normalizing into a typed array.\n    const u8 = new Uint8Array(string);\n    if (this.terminal_.vt.characterEncoding == 'raw') {\n      string = lib.codec.codeUnitArrayToString(u8);\n    } else {\n      string = this.textDecoder_.decode(u8, {stream: true});\n    }\n  }\n\n  this.print(string);\n};\n\n/**\n * Write a UTF-8 encoded byte string to the terminal followed by crlf.\n *\n * @param {string} string The UTF-8 encoded string to print.\n */\nhterm.Terminal.IO.prototype.writelnUTF8 = function(string) {\n  this.writeUTF8(string);\n  // We need to use writeUTF8 to make sure we flush the decoder state.\n  this.writeUTF8('\\r\\n');\n};\n\n/**\n * Write a UTF-16 JavaScript string to the terminal.\n *\n * @param {string} string The string to print.\n */\nhterm.Terminal.IO.prototype.print =\nhterm.Terminal.IO.prototype.writeUTF16 = function(string) {\n  // If another process has the foreground IO, buffer new data sent to this IO\n  // (since it's in the background).  When we're made the foreground IO again,\n  // we'll flush everything.\n  if (this.terminal_.io != this) {\n    this.buffered_ += string;\n    return;\n  }\n\n  this.terminal_.interpret(string);\n};\n\n/**\n * Print a UTF-16 JavaScript string to the terminal followed by a newline.\n *\n * @param {string} string The string to print.\n */\nhterm.Terminal.IO.prototype.println =\nhterm.Terminal.IO.prototype.writelnUTF16 = function(string) {\n  this.print(string + '\\r\\n');\n};\n// SOURCE FILE: hterm/js/hterm_text_attributes.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for TextAttribute objects.\n *\n * These objects manage a set of text attributes such as foreground/\n * background color, bold, faint, italic, blink, underline, and strikethrough.\n *\n * TextAttribute instances can be used to construct a DOM container implementing\n * the current attributes, or to test an existing DOM container for\n * compatibility with the current attributes.\n *\n * @constructor\n * @param {!Document=} document The parent document to use when creating\n *     new DOM containers.\n */\nhterm.TextAttributes = function(document) {\n  this.document_ = document;\n  // These variables contain the source of the color as either:\n  // SRC_DEFAULT  (use context default)\n  // rgb(...)     (true color form)\n  // number       (representing the index from color palette to use)\n  /** @type {symbol|string|number} */\n  this.foregroundSource = this.SRC_DEFAULT;\n  /** @type {symbol|string|number} */\n  this.backgroundSource = this.SRC_DEFAULT;\n  /** @type {symbol|string|number} */\n  this.underlineSource = this.SRC_DEFAULT;\n\n  // These properties cache the value in the color table, but foregroundSource\n  // and backgroundSource contain the canonical values.\n  /** @type {symbol|string} */\n  this.foreground = this.DEFAULT_COLOR;\n  /** @type {symbol|string} */\n  this.background = this.DEFAULT_COLOR;\n  /** @type {symbol|string} */\n  this.underlineColor = this.DEFAULT_COLOR;\n\n  this.defaultForeground = 'rgb(255, 255, 255)';\n  this.defaultBackground = 'rgb(0, 0, 0)';\n\n  // Any attributes added here that do not default to falsey (e.g. undefined or\n  // null) require a bit more care.  createContainer has to always attach the\n  // attribute so matchesContainer can work correctly.\n  this.bold = false;\n  this.faint = false;\n  this.italic = false;\n  this.blink = false;\n  this.underline = false;\n  this.strikethrough = false;\n  this.inverse = false;\n  this.invisible = false;\n  this.wcNode = false;\n  this.asciiNode = true;\n  /** @type {?string} */\n  this.tileData = null;\n  /** @type {?string} */\n  this.uri = null;\n  /** @type {?string} */\n  this.uriId = null;\n\n  this.colorPalette = null;\n  this.resetColorPalette();\n};\n\n/**\n * If false, we ignore the bold attribute.\n *\n * This is used for fonts that have a bold version that is a different size\n * than the normal weight version.\n */\nhterm.TextAttributes.prototype.enableBold = true;\n\n/**\n * If true, use bright colors (if available) for bold text.\n *\n * This setting is independent of the enableBold setting.\n */\nhterm.TextAttributes.prototype.enableBoldAsBright = true;\n\n/**\n * A sentinel constant meaning \"whatever the default color is in this context\".\n */\nhterm.TextAttributes.prototype.DEFAULT_COLOR = Symbol('DEFAULT_COLOR');\n\n/**\n * A constant string used to specify that source color is context default.\n */\nhterm.TextAttributes.prototype.SRC_DEFAULT = Symbol('SRC_DEFAULT');\n\n/**\n * The document object which should own the DOM nodes created by this instance.\n *\n * @param {!Document} document The parent document.\n */\nhterm.TextAttributes.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n/**\n * Create a deep copy of this object.\n *\n * @return {!hterm.TextAttributes} A deep copy of this object.\n */\nhterm.TextAttributes.prototype.clone = function() {\n  var rv = new hterm.TextAttributes();\n\n  for (var key in this) {\n    rv[key] = this[key];\n  }\n\n  rv.colorPalette = this.colorPalette.concat();\n  return rv;\n};\n\n/**\n * Reset the current set of attributes.\n *\n * This does not affect the palette.  Use resetColorPalette() for that.\n * It also doesn't affect the tile data, it's not meant to.\n */\nhterm.TextAttributes.prototype.reset = function() {\n  this.foregroundSource = this.SRC_DEFAULT;\n  this.backgroundSource = this.SRC_DEFAULT;\n  this.underlineSource = this.SRC_DEFAULT;\n  this.foreground = this.DEFAULT_COLOR;\n  this.background = this.DEFAULT_COLOR;\n  this.underlineColor = this.DEFAULT_COLOR;\n  this.bold = false;\n  this.faint = false;\n  this.italic = false;\n  this.blink = false;\n  this.underline = false;\n  this.strikethrough = false;\n  this.inverse = false;\n  this.invisible = false;\n  this.wcNode = false;\n  this.asciiNode = true;\n  this.uri = null;\n  this.uriId = null;\n};\n\n/**\n * Reset the color palette to the default state.\n */\nhterm.TextAttributes.prototype.resetColorPalette = function() {\n  this.colorPalette = lib.colors.colorPalette.concat();\n  this.syncColors();\n};\n\n/**\n * Reset the color.\n *\n * @param {number|string} index The color index in the palette to reset.\n */\nhterm.TextAttributes.prototype.resetColor = function(index) {\n  index = parseInt(index, 10);\n  if (isNaN(index) || index >= this.colorPalette.length)\n    return;\n\n  this.colorPalette[index] = lib.colors.stockColorPalette[index];\n  this.syncColors();\n};\n\n/**\n * Test if the current attributes describe unstyled text.\n *\n * @return {boolean} True if the current attributes describe unstyled text.\n */\nhterm.TextAttributes.prototype.isDefault = function() {\n  return (this.foregroundSource == this.SRC_DEFAULT &&\n          this.backgroundSource == this.SRC_DEFAULT &&\n          !this.bold &&\n          !this.faint &&\n          !this.italic &&\n          !this.blink &&\n          !this.underline &&\n          !this.strikethrough &&\n          !this.inverse &&\n          !this.invisible &&\n          !this.wcNode &&\n          this.asciiNode &&\n          this.tileData == null &&\n          this.uri == null);\n};\n\n/**\n * Create a DOM container (a span or a text node) with a style to match the\n * current set of attributes.\n *\n * This method will create a plain text node if the text is unstyled, or\n * an HTML span if the text is styled.  Due to lack of monospace wide character\n * fonts on certain systems (e.g. Chrome OS), we need to put each wide character\n * in a span of CSS class '.wc-node' which has double column width.\n * Each vt_tiledata tile is also represented by a span with a single\n * character, with CSS classes '.tile' and '.tile_<glyph number>'.\n *\n * @param {string=} opt_textContent Optional text content for the new container.\n * @return {!Node} An HTML span or text nodes styled to match the current\n *     attributes.\n */\nhterm.TextAttributes.prototype.createContainer = function(\n    opt_textContent = '') {\n  if (this.isDefault()) {\n    // Only attach attributes where we need an explicit default for the\n    // matchContainer logic below.\n    const node = this.document_.createTextNode(opt_textContent);\n    node.asciiNode = true;\n    return node;\n  }\n\n  var span = this.document_.createElement('span');\n  var style = span.style;\n  var classes = [];\n\n  if (this.foreground != this.DEFAULT_COLOR)\n    style.color = this.foreground.toString();\n\n  if (this.background != this.DEFAULT_COLOR)\n    style.backgroundColor = this.background.toString();\n\n  if (this.enableBold && this.bold)\n    style.fontWeight = 'bold';\n\n  if (this.faint)\n    span.faint = true;\n\n  if (this.italic)\n    style.fontStyle = 'italic';\n\n  if (this.blink) {\n    classes.push('blink-node');\n    span.blinkNode = true;\n  }\n\n  let textDecorationLine = '';\n  span.underline = this.underline;\n  if (this.underline) {\n    textDecorationLine += ' underline';\n    style.textDecorationStyle = this.underline;\n  }\n  if (this.underlineColor != this.DEFAULT_COLOR)\n    style.textDecorationColor = this.underlineColor;\n  if (this.strikethrough) {\n    textDecorationLine += ' line-through';\n    span.strikethrough = true;\n  }\n  if (textDecorationLine)\n    style.textDecorationLine = textDecorationLine;\n\n  if (this.wcNode) {\n    classes.push('wc-node');\n    span.wcNode = true;\n  }\n  span.asciiNode = this.asciiNode;\n\n  if (this.tileData != null) {\n    classes.push('tile');\n    classes.push('tile_' + this.tileData);\n    span.tileNode = true;\n  }\n\n  if (opt_textContent)\n    span.textContent = opt_textContent;\n\n  if (this.uri) {\n    classes.push('uri-node');\n    span.uriId = this.uriId;\n    span.title = this.uri;\n    span.addEventListener('click', hterm.openUrl.bind(this, this.uri));\n  }\n\n  if (classes.length)\n    span.className = classes.join(' ');\n\n  return span;\n};\n\n/**\n * Tests if the provided object (string, span or text node) has the same\n * style as this TextAttributes instance.\n *\n * This indicates that text with these attributes could be inserted directly\n * into the target DOM node.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj The object to test.\n * @return {boolean} True if the provided container has the same style as\n *     this attributes instance.\n */\nhterm.TextAttributes.prototype.matchesContainer = function(obj) {\n  if (typeof obj == 'string' || obj.nodeType == Node.TEXT_NODE)\n    return this.isDefault();\n\n  var style = obj.style;\n\n  // We don't want to put multiple characters in a wcNode or a tile.\n  // See the comments in createContainer.\n  // For attributes that default to false, we do not require that obj have them\n  // declared, so always normalize them using !! (to turn undefined into false)\n  // in the compares below.\n  return (!(this.wcNode || obj.wcNode) &&\n          this.asciiNode == obj.asciiNode &&\n          !(this.tileData != null || obj.tileNode) &&\n          this.uriId == obj.uriId &&\n          (this.foreground == this.DEFAULT_COLOR &&\n           style.color == '') &&\n          (this.background == this.DEFAULT_COLOR &&\n           style.backgroundColor == '') &&\n          (this.underlineColor == this.DEFAULT_COLOR &&\n           style.textDecorationColor == '') &&\n          (this.enableBold && this.bold) == !!style.fontWeight &&\n          this.blink == !!obj.blinkNode &&\n          this.italic == !!style.fontStyle &&\n          this.underline == obj.underline &&\n          !!this.strikethrough == !!obj.strikethrough);\n};\n\n/**\n * Set default foreground & background colors.\n *\n * @param {?string} foreground The terminal foreground color for use as\n *     inverse text background.\n * @param {?string} background The terminal background color for use as\n *     inverse text foreground.\n */\nhterm.TextAttributes.prototype.setDefaults = function(foreground, background) {\n  this.defaultForeground = foreground;\n  this.defaultBackground = background;\n\n  this.syncColors();\n};\n\n/**\n * Updates foreground and background properties based on current indices and\n * other state.\n */\nhterm.TextAttributes.prototype.syncColors = function() {\n  function getBrightIndex(i) {\n    if (i < 8) {\n      // If the color is from the lower half of the ANSI 16, add 8.\n      return i + 8;\n    }\n\n    // If it's not from the 16 color palette, ignore bold requests.  This\n    // matches the behavior of gnome-terminal.\n    return i;\n  }\n\n  // Expand the default color as makes sense.\n  const getDefaultColor = (color, defaultColor) => {\n    return color == this.DEFAULT_COLOR ? defaultColor : color;\n  };\n\n  // TODO(joelhockey): Remove redundant `typeof foo == 'number'` when\n  // externs/es6.js is updated.\n  // https://github.com/google/closure-compiler/pull/3472.\n\n  if (this.enableBoldAsBright && this.bold) {\n    if (typeof this.foregroundSource == 'number' &&\n        Number.isInteger(this.foregroundSource)) {\n      this.foregroundSource = getBrightIndex(this.foregroundSource);\n    }\n  }\n\n  /**\n   * @param {symbol|string|number} source\n   * @return {symbol|string}\n   */\n  const colorFromSource = (source) => {\n    if (source == this.SRC_DEFAULT) {\n      return this.DEFAULT_COLOR;\n    } else if (typeof source == 'number' && Number.isInteger(source)) {\n      return this.colorPalette[source];\n    } else {\n      return source.toString();\n    }\n  };\n\n  this.foreground = colorFromSource(this.foregroundSource);\n\n  if (this.faint) {\n    const colorToMakeFaint =\n        getDefaultColor(this.foreground, this.defaultForeground);\n    this.foreground = lib.colors.mix(colorToMakeFaint, 'rgb(0, 0, 0)', 0.3333);\n  }\n\n  this.background = colorFromSource(this.backgroundSource);\n\n  // Once we've processed the bold-as-bright and faint attributes, swap.\n  // This matches xterm/gnome-terminal.\n  if (this.inverse) {\n    const swp = getDefaultColor(this.foreground, this.defaultForeground);\n    this.foreground = getDefaultColor(this.background, this.defaultBackground);\n    this.background = swp;\n  }\n\n  // Process invisible settings last to keep it simple.\n  if (this.invisible)\n    this.foreground = this.background;\n\n  this.underlineColor = colorFromSource(this.underlineSource);\n};\n\n/**\n * Static method used to test if the provided objects (strings, spans or\n * text nodes) have the same style.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj1 An object to test.\n * @param {string|!Node} obj2 Another object to test.\n * @return {boolean} True if the containers have the same style.\n */\nhterm.TextAttributes.containersMatch = function(obj1, obj2) {\n  if (typeof obj1 == 'string')\n    return hterm.TextAttributes.containerIsDefault(obj2);\n\n  if (obj1.nodeType != obj2.nodeType)\n    return false;\n\n  if (obj1.nodeType == Node.TEXT_NODE)\n    return true;\n\n  var style1 = obj1.style;\n  var style2 = obj2.style;\n\n  return (style1.color == style2.color &&\n          style1.backgroundColor == style2.backgroundColor &&\n          style1.backgroundColor == style2.backgroundColor &&\n          style1.fontWeight == style2.fontWeight &&\n          style1.fontStyle == style2.fontStyle &&\n          style1.textDecoration == style2.textDecoration &&\n          style1.textDecorationColor == style2.textDecorationColor &&\n          style1.textDecorationStyle == style2.textDecorationStyle &&\n          style1.textDecorationLine == style2.textDecorationLine);\n};\n\n/**\n * Static method to test if a given DOM container represents unstyled text.\n *\n * For the purposes of this method, a string is considered a text node.\n *\n * @param {string|!Node} obj An object to test.\n * @return {boolean} True if the object is unstyled.\n */\nhterm.TextAttributes.containerIsDefault = function(obj) {\n  return typeof obj == 'string'  || obj.nodeType == Node.TEXT_NODE;\n};\n\n/**\n * Static method to get the column width of a node's textContent.\n *\n * @param {!Node} node The HTML element to get the width of textContent\n *     from.\n * @return {number} The column width of the node's textContent.\n */\nhterm.TextAttributes.nodeWidth = function(node) {\n  if (!node.asciiNode) {\n    return lib.wc.strWidth(node.textContent);\n  } else {\n    return node.textContent.length;\n  }\n};\n\n/**\n * Static method to get the substr of a node's textContent.  The start index\n * and substr width are computed in column width.\n *\n * @param {!Node} node The HTML element to get the substr of textContent\n *     from.\n * @param {number} start The starting offset in column width.\n * @param {number=} width The width to capture in column width.\n * @return {string} The extracted substr of the node's textContent.\n */\nhterm.TextAttributes.nodeSubstr = function(node, start, width) {\n  if (!node.asciiNode) {\n    return lib.wc.substr(node.textContent, start, width);\n  } else {\n    return node.textContent.substr(start, width);\n  }\n};\n\n/**\n * Static method to get the substring based of a node's textContent.  The\n * start index of end index are computed in column width.\n *\n * @param {!Element} node The HTML element to get the substr of textContent\n *     from.\n * @param {number} start The starting offset in column width.\n * @param {number} end The ending offset in column width.\n * @return {string} The extracted substring of the node's textContent.\n */\nhterm.TextAttributes.nodeSubstring = function(node, start, end) {\n  if (!node.asciiNode) {\n    return lib.wc.substring(node.textContent, start, end);\n  } else {\n    return node.textContent.substring(start, end);\n  }\n};\n\n/**\n * Static method to split a string into contiguous runs of single-width\n * characters and runs of double-width characters.\n *\n * @param {string} str The string to split.\n * @return {!Array<{str:string, wcNode:boolean, asciiNode:boolean,\n *     wcStrWidth:number}>} An array of objects that contain substrings of str,\n *     where each substring is either a contiguous runs of single-width\n *     characters or a double-width character.  For objects that contain a\n *     double-width character, its wcNode property is set to true.  For objects\n *     that contain only ASCII content, its asciiNode property is set to true.\n */\nhterm.TextAttributes.splitWidecharString = function(str) {\n  const asciiRegex = new RegExp('^[\\u0020-\\u007f]*$');\n\n  // Optimize for printable ASCII.  This should only take ~1ms/MB, but cuts out\n  // 40ms+/MB when true.  If we're dealing with UTF8, then it's already slow.\n  if (asciiRegex.test(str)) {\n    return [{\n      str: str,\n      wcNode: false,\n      asciiNode: true,\n      wcStrWidth: str.length,\n    }];\n  }\n\n  // Iterate over each grapheme and merge them together in runs of similar\n  // strings.  We want to keep narrow and wide characters separate, and the\n  // fewer overall segments we have, the faster we'll be as processing each\n  // segment in the terminal print code is a bit slow.\n  const segmenter = new Intl.Segmenter(undefined, {type: 'grapheme'});\n  const it = segmenter.segment(str);\n\n  const rv = [];\n  let segment = it.next();\n  while (!segment.done) {\n    const grapheme = segment.value.segment;\n    const isAscii = asciiRegex.test(grapheme);\n    const strWidth = isAscii ? 1 : lib.wc.strWidth(grapheme);\n    const isWideChar =\n        isAscii ? false : (lib.wc.charWidth(grapheme.codePointAt(0)) == 2);\n\n    // Only merge non-wide characters together.  Every wide character needs to\n    // be separate so it can get a unique container.\n    const prev = rv[rv.length - 1];\n    if (prev && !isWideChar && !prev.wcNode) {\n      prev.str += grapheme;\n      prev.wcStrWidth += strWidth;\n      prev.asciiNode = prev.asciiNode && isAscii;\n    } else {\n      rv.push({\n        str: grapheme,\n        wcNode: isWideChar,\n        asciiNode: isAscii,\n        wcStrWidth: strWidth,\n      });\n    }\n\n    segment = it.next();\n  }\n\n  return rv;\n};\n// SOURCE FILE: hterm/js/hterm_vt.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Constructor for the VT escape sequence interpreter.\n *\n * The interpreter operates on a terminal object capable of performing cursor\n * move operations, painting characters, etc.\n *\n * This interpreter is intended to be compatible with xterm, though it\n * ignores some of the more esoteric escape sequences.\n *\n * Control sequences are documented in hterm/doc/ControlSequences.md.\n *\n * @param {!hterm.Terminal} terminal Terminal to use with the interpreter.\n * @constructor\n */\nhterm.VT = function(terminal) {\n  /**\n   * The display terminal object associated with this virtual terminal.\n   */\n  this.terminal = terminal;\n\n  terminal.onMouse = this.onTerminalMouse_.bind(this);\n  this.mouseReport = this.MOUSE_REPORT_DISABLED;\n  this.mouseCoordinates = this.MOUSE_COORDINATES_X10;\n\n  // We only want to report mouse moves between cells, not between pixels.\n  this.lastMouseDragResponse_ = null;\n\n  // Parse state left over from the last parse.  You should use the parseState\n  // instance passed into your parse routine, rather than reading\n  // this.parseState_ directly.\n  this.parseState_ = new hterm.VT.ParseState(this.parseUnknown_);\n\n  // Any \"leading modifiers\" for the escape sequence, such as '?', ' ', or the\n  // other modifiers handled in this.parseCSI_.\n  this.leadingModifier_ = '';\n\n  // Any \"trailing modifiers\".  Same character set as a leading modifier,\n  // except these are found after the numeric arguments.\n  this.trailingModifier_ = '';\n\n  // Whether or not to respect the escape codes for setting terminal width.\n  this.allowColumnWidthChanges_ = false;\n\n  // The amount of time we're willing to wait for the end of an OSC sequence.\n  this.oscTimeLimit_ = 20000;\n\n  /**\n   * Whether to accept the 8-bit control characters.\n   *\n   * An 8-bit control character is one with the eighth bit set.  These\n   * didn't work on 7-bit terminals so they all have two byte equivalents.\n   * Most hosts still only use the two-byte versions.\n   *\n   * We ignore 8-bit control codes by default.  This is in order to avoid\n   * issues with \"accidental\" usage of codes that need to be terminated.\n   * The \"accident\" usually involves cat'ing binary data.\n   */\n  this.enable8BitControl = false;\n\n  /**\n   * Whether to allow the OSC 52 sequence to write to the system clipboard.\n   */\n  this.enableClipboardWrite = true;\n\n  /**\n   * Respect the host's attempt to change the cursor blink status using\n   * the DEC Private mode 12.\n   */\n  this.enableDec12 = false;\n\n  /**\n   * Respect the host's attempt to clear the scrollback buffer using CSI-J-3.\n   */\n  this.enableCsiJ3 = true;\n\n  /**\n   * The expected encoding method for data received from the host.\n   */\n  this.characterEncoding = 'utf-8';\n\n  /**\n   * If true, emit warnings when we encounter a control character or escape\n   * sequence that we don't recognize or explicitly ignore.\n   *\n   * We disable this by default as the console logging can be expensive when\n   * dumping binary files (e.g. `cat /dev/zero`) to the point where you can't\n   * recover w/out restarting.\n   */\n  this.warnUnimplemented = false;\n\n  /**\n   * The set of available character maps (used by G0...G3 below).\n   */\n  this.characterMaps = new hterm.VT.CharacterMaps();\n\n  /**\n   * The default G0...G3 character maps.\n   * We default to the US/ASCII map everywhere as that aligns with other\n   * terminals, and it makes it harder to accidentally switch to the graphics\n   * character map (Ctrl-N).  Any program that wants to use the graphics map\n   * will usually select it anyways since there's no guarantee what state any\n   * of the maps are in at any particular time.\n   */\n  this.G0 = this.G1 = this.G2 = this.G3 =\n      this.characterMaps.getMap('B');\n\n  /**\n   * The 7-bit visible character set.\n   *\n   * This is a mapping from inbound data to display glyph.  The GL set\n   * contains the 94 bytes from 0x21 to 0x7e.\n   *\n   * The default GL set is 'B', US ASCII.\n   */\n  this.GL = 'G0';\n\n  /**\n   * The 8-bit visible character set.\n   *\n   * This is a mapping from inbound data to display glyph.  The GR set\n   * contains the 94 bytes from 0xa1 to 0xfe.\n   */\n  this.GR = 'G0';\n\n  /**\n   * The current encoding of the terminal.\n   *\n   * We only support ECMA-35 and UTF-8, so go with a boolean here.\n   * The encoding can be locked too.\n   */\n  this.codingSystemUtf8_ = false;\n  this.codingSystemLocked_ = false;\n\n  // Construct a regular expression to match the known one-byte control chars.\n  // This is used in parseUnknown_ to quickly scan a string for the next\n  // control character.\n  this.cc1Pattern_ = null;\n  this.updateEncodingState_();\n};\n\n/**\n * No mouse events.\n */\nhterm.VT.prototype.MOUSE_REPORT_DISABLED = 0;\n\n/**\n * DECSET mode 9.\n *\n * Report mouse down events only.\n */\nhterm.VT.prototype.MOUSE_REPORT_PRESS = 1;\n\n/**\n * DECSET mode 1000.\n *\n * Report mouse down/up events only.\n */\nhterm.VT.prototype.MOUSE_REPORT_CLICK = 2;\n\n/**\n * DECSET mode 1002.\n *\n * Report mouse down/up and movement while a button is down.\n */\nhterm.VT.prototype.MOUSE_REPORT_DRAG = 3;\n\n/**\n * DEC mode for X10 coorindates (the default).\n */\nhterm.VT.prototype.MOUSE_COORDINATES_X10 = 0;\n\n/**\n * DEC mode 1005 for UTF-8 coorindates.\n */\nhterm.VT.prototype.MOUSE_COORDINATES_UTF8 = 1;\n\n/**\n * DEC mode 1006 for SGR coorindates.\n */\nhterm.VT.prototype.MOUSE_COORDINATES_SGR = 2;\n\n/**\n * ParseState constructor.\n *\n * This object tracks the current state of the parse.  It has fields for the\n * current buffer, position in the buffer, and the parse function.\n *\n * @param {function(!hterm.VT.ParseState)=} defaultFunction The default parser\n *     function.\n * @param {string=} opt_buf Optional string to use as the current buffer.\n * @constructor\n */\nhterm.VT.ParseState = function(defaultFunction, opt_buf) {\n  this.defaultFunction = defaultFunction;\n  this.buf = opt_buf || null;\n  this.pos = 0;\n  this.func = defaultFunction;\n  this.args = [];\n  // Whether any of the arguments in the args array have subarguments.\n  // e.g. All CSI sequences are integer arguments separated by semi-colons,\n  // so subarguments are further colon separated.\n  this.subargs = null;\n};\n\n/**\n * Reset the parser function, buffer, and position.\n *\n * @param {string=} opt_buf Optional string to use as the current buffer.\n */\nhterm.VT.ParseState.prototype.reset = function(opt_buf) {\n  this.resetParseFunction();\n  this.resetBuf(opt_buf || '');\n  this.resetArguments();\n};\n\n/**\n * Reset the parser function only.\n */\nhterm.VT.ParseState.prototype.resetParseFunction = function() {\n  this.func = this.defaultFunction;\n};\n\n/**\n * Reset the buffer and position only.\n *\n * @param {string=} opt_buf Optional new value for buf, defaults to null.\n */\nhterm.VT.ParseState.prototype.resetBuf = function(opt_buf) {\n  this.buf = (typeof opt_buf == 'string') ? opt_buf : null;\n  this.pos = 0;\n};\n\n/**\n * Reset the arguments list only.\n *\n * Typically we reset arguments before parsing a sequence that uses them rather\n * than always trying to make sure they're in a good state.  This can lead to\n * confusion during debugging where args from a previous sequence appear to be\n * \"sticking around\" in other sequences (which in reality don't use args).\n *\n * @param {string=} opt_arg_zero Optional initial value for args[0].\n */\nhterm.VT.ParseState.prototype.resetArguments = function(opt_arg_zero) {\n  this.args.length = 0;\n  if (typeof opt_arg_zero != 'undefined')\n    this.args[0] = opt_arg_zero;\n};\n\n/**\n * Parse an argument as an integer.\n *\n * This assumes the inputs are already in the proper format.  e.g. This won't\n * handle non-numeric arguments.\n *\n * An \"0\" argument is treated the same as \"\" which means the default value will\n * be applied.  This is what most terminal sequences expect.\n *\n * @param {string} argstr The argument to parse directly.\n * @param {number=} defaultValue Default value if argstr is empty.\n * @return {number} The parsed value.\n */\nhterm.VT.ParseState.prototype.parseInt = function(argstr, defaultValue) {\n  if (defaultValue === undefined)\n    defaultValue = 0;\n\n  if (argstr) {\n    const ret = parseInt(argstr, 10);\n    // An argument of zero is treated as the default value.\n    return ret == 0 ? defaultValue : ret;\n  }\n  return defaultValue;\n};\n\n/**\n * Get an argument as an integer.\n *\n * @param {number} argnum The argument number to retrieve.\n * @param {number=} defaultValue Default value if the argument is empty.\n * @return {number} The parsed value.\n */\nhterm.VT.ParseState.prototype.iarg = function(argnum, defaultValue) {\n  return this.parseInt(this.args[argnum], defaultValue);\n};\n\n/**\n * Check whether an argument has subarguments.\n *\n * @param {number} argnum The argument number to check.\n * @return {number} Whether the argument has subarguments.\n */\nhterm.VT.ParseState.prototype.argHasSubargs = function(argnum) {\n  return this.subargs && this.subargs[argnum];\n};\n\n/**\n * Mark an argument as having subarguments.\n *\n * @param {number} argnum The argument number that has subarguments.\n */\nhterm.VT.ParseState.prototype.argSetSubargs = function(argnum) {\n  if (this.subargs === null)\n    this.subargs = {};\n  this.subargs[argnum] = true;\n};\n\n/**\n * Advance the parse position.\n *\n * @param {number} count The number of bytes to advance.\n */\nhterm.VT.ParseState.prototype.advance = function(count) {\n  this.pos += count;\n};\n\n/**\n * Return the remaining portion of the buffer without affecting the parse\n * position.\n *\n * @return {string} The remaining portion of the buffer.\n */\nhterm.VT.ParseState.prototype.peekRemainingBuf = function() {\n  return this.buf.substr(this.pos);\n};\n\n/**\n * Return the next single character in the buffer without affecting the parse\n * position.\n *\n * @return {string} The next character in the buffer.\n */\nhterm.VT.ParseState.prototype.peekChar = function() {\n  return this.buf.substr(this.pos, 1);\n};\n\n/**\n * Return the next single character in the buffer and advance the parse\n * position one byte.\n *\n * @return {string} The next character in the buffer.\n */\nhterm.VT.ParseState.prototype.consumeChar = function() {\n  return this.buf.substr(this.pos++, 1);\n};\n\n/**\n * Return true if the buffer is empty, or the position is past the end.\n *\n * @return {boolean} Whether the buffer is empty, or the position is past the\n *     end.\n */\nhterm.VT.ParseState.prototype.isComplete = function() {\n  return this.buf == null || this.buf.length <= this.pos;\n};\n\n/**\n * Reset the VT back to baseline state.\n */\nhterm.VT.prototype.reset = function() {\n  this.G0 = this.G1 = this.G2 = this.G3 =\n      this.characterMaps.getMap('B');\n\n  this.GL = 'G0';\n  this.GR = 'G0';\n\n  this.mouseReport = this.MOUSE_REPORT_DISABLED;\n  this.mouseCoordinates = this.MOUSE_COORDINATES_X10;\n  this.lastMouseDragResponse_ = null;\n};\n\n/**\n * Handle terminal mouse events.\n *\n * See the \"Mouse Tracking\" section of [xterm].\n *\n * @param {!MouseEvent} e\n */\nhterm.VT.prototype.onTerminalMouse_ = function(e) {\n  // Short circuit a few events to avoid unnecessary processing.\n  if (this.mouseReport == this.MOUSE_REPORT_DISABLED)\n    return;\n  else if (this.mouseReport != this.MOUSE_REPORT_DRAG && e.type == 'mousemove')\n    return;\n\n  // Temporary storage for our response.\n  var response;\n\n  // Modifier key state.\n  var mod = 0;\n  if (this.mouseReport != this.MOUSE_REPORT_PRESS) {\n    if (e.shiftKey)\n      mod |= 4;\n    if (e.metaKey || (this.terminal.keyboard.altIsMeta && e.altKey))\n      mod |= 8;\n    if (e.ctrlKey)\n      mod |= 16;\n  }\n\n  // X & Y coordinate reporting.\n  let x;\n  let y;\n  // Normally X10 has a limit of 255, but since we only want to emit UTF-8 valid\n  // streams, we limit ourselves to 127 to avoid setting the 8th bit.  If we do\n  // re-enable this, we should re-enable the hterm_vt_tests.js too.\n  let limit = 127;\n  switch (this.mouseCoordinates) {\n    case this.MOUSE_COORDINATES_UTF8:\n      // UTF-8 mode is the same as X10 but with higher limits.\n      limit = 2047;\n    case this.MOUSE_COORDINATES_X10:\n      // X10 reports coordinates by encoding into strings.\n      x = String.fromCharCode(lib.f.clamp(e.terminalColumn + 32, 32, limit));\n      y = String.fromCharCode(lib.f.clamp(e.terminalRow + 32, 32, limit));\n      break;\n    case this.MOUSE_COORDINATES_SGR:\n      // SGR reports coordinates by transmitting the numbers directly.\n      x = e.terminalColumn;\n      y = e.terminalRow;\n      break;\n  }\n\n  let b;\n  switch (e.type) {\n    case 'wheel':\n      // Mouse wheel is treated as button 1 or 2 plus an additional 64.\n      b = (((e.deltaY * -1) > 0) ? 0 : 1) + 64;\n      b |= mod;\n      if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n        response = `\\x1b[<${b};${x};${y}M`;\n      } else {\n        // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n        response = '\\x1b[M' + String.fromCharCode(b + 32) + x + y;\n      }\n\n      // Keep the terminal from scrolling.\n      e.preventDefault();\n      break;\n\n    case 'mousedown':\n      // Buttons are encoded as button number.\n      b = Math.min(e.button, 2);\n      // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n      if (this.mouseCoordinates != this.MOUSE_COORDINATES_SGR)\n        b += 32;\n\n      // And mix in the modifier keys.\n      b |= mod;\n\n      if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR)\n        response = `\\x1b[<${b};${x};${y}M`;\n      else\n        response = '\\x1b[M' + String.fromCharCode(b) + x + y;\n      break;\n\n    case 'mouseup':\n      if (this.mouseReport != this.MOUSE_REPORT_PRESS) {\n        if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR) {\n          // SGR mode can report the released button.\n          response = `\\x1b[<${e.button};${x};${y}m`;\n        } else {\n          // X10 mode has no indication of which button was released.\n          response = '\\x1b[M\\x23' + x + y;\n        }\n      }\n      break;\n\n    case 'mousemove':\n      if (this.mouseReport == this.MOUSE_REPORT_DRAG && e.buttons) {\n        // Standard button bits.  The XTerm protocol only reports the first\n        // button press (e.g. if left & right are pressed, right is ignored),\n        // and it only supports the first three buttons.  If none of them are\n        // pressed, then XTerm flags it as a release.  We'll do the same.\n        // X10 based modes (including UTF8) add 32 for legacy encoding reasons.\n        b = this.mouseCoordinates == this.MOUSE_COORDINATES_SGR ? 0 : 32;\n\n        // Priority here matches XTerm: left, middle, right.\n        if (e.buttons & 0x1) {\n          // Report left button.\n          b += 0;\n        } else if (e.buttons & 0x4) {\n          // Report middle button.\n          b += 1;\n        } else if (e.buttons & 0x2) {\n          // Report right button.\n          b += 2;\n        } else {\n          // Release higher buttons.\n          b += 3;\n        }\n\n        // Add 32 to indicate mouse motion.\n        b += 32;\n\n        // And mix in the modifier keys.\n        b |= mod;\n\n        if (this.mouseCoordinates == this.MOUSE_COORDINATES_SGR)\n          response = `\\x1b[<${b};${x};${y}M`;\n        else\n          response = '\\x1b[M' + String.fromCharCode(b) + x + y;\n\n        // If we were going to report the same cell because we moved pixels\n        // within, suppress the report.  This is what xterm does and cuts\n        // down on duplicate messages.\n        if (this.lastMouseDragResponse_ == response)\n          response = '';\n        else\n          this.lastMouseDragResponse_ = response;\n      }\n\n      break;\n\n    case 'click':\n    case 'dblclick':\n      break;\n\n    default:\n      console.error('Unknown mouse event: ' + e.type, e);\n      break;\n  }\n\n  if (response)\n    this.terminal.io.sendString(response);\n};\n\n/**\n * Interpret a string of characters, displaying the results on the associated\n * terminal object.\n *\n * The buffer will be decoded according to the 'receive-encoding' preference.\n *\n * @param {string} buf The buffer to interpret.\n */\nhterm.VT.prototype.interpret = function(buf) {\n  this.parseState_.resetBuf(buf);\n\n  while (!this.parseState_.isComplete()) {\n    const func = this.parseState_.func;\n    const pos = this.parseState_.pos;\n    const buf = this.parseState_.buf;\n\n    this.parseState_.func.call(this, this.parseState_);\n\n    if (this.parseState_.func == func && this.parseState_.pos == pos &&\n        this.parseState_.buf == buf) {\n      throw 'Parser did not alter the state!';\n    }\n  }\n};\n\n/**\n * Set the encoding of the terminal.\n *\n * @param {string} encoding The name of the encoding to set.\n */\nhterm.VT.prototype.setEncoding = function(encoding) {\n  switch (encoding) {\n    default:\n      console.warn('Invalid value for \"terminal-encoding\": ' + encoding);\n      // Fall through.\n    case 'iso-2022':\n      this.codingSystemUtf8_ = false;\n      this.codingSystemLocked_ = false;\n      break;\n    case 'utf-8-locked':\n      this.codingSystemUtf8_ = true;\n      this.codingSystemLocked_ = true;\n      break;\n    case 'utf-8':\n      this.codingSystemUtf8_ = true;\n      this.codingSystemLocked_ = false;\n      break;\n  }\n\n  this.updateEncodingState_();\n};\n\n/**\n * Refresh internal state when the encoding changes.\n */\nhterm.VT.prototype.updateEncodingState_ = function() {\n  // If we're in UTF8 mode, don't suport 8-bit escape sequences as we'll never\n  // see those -- everything should be UTF8!\n  var cc1 = Object.keys(hterm.VT.CC1)\n      .filter((e) => !this.codingSystemUtf8_ || e.charCodeAt() < 0x80)\n      .map((e) => '\\\\x' + lib.f.zpad(e.charCodeAt().toString(16), 2))\n      .join('');\n  this.cc1Pattern_ = new RegExp(`[${cc1}]`);\n};\n\n/**\n * The default parse function.\n *\n * This will scan the string for the first 1-byte control character (C0/C1\n * characters from [CTRL]).  Any plain text coming before the code will be\n * printed to the terminal, then the control character will be dispatched.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.parseUnknown_ = function(parseState) {\n  var self = this;\n\n  function print(str) {\n    if (!self.codingSystemUtf8_ && self[self.GL].GL)\n      str = self[self.GL].GL(str);\n\n    self.terminal.print(str);\n  }\n\n  // Search for the next contiguous block of plain text.\n  var buf = parseState.peekRemainingBuf();\n  var nextControl = buf.search(this.cc1Pattern_);\n\n  if (nextControl == 0) {\n    // We've stumbled right into a control character.\n    this.dispatch('CC1', buf.substr(0, 1), parseState);\n    parseState.advance(1);\n    return;\n  }\n\n  if (nextControl == -1) {\n    // There are no control characters in this string.\n    print(buf);\n    parseState.reset();\n    return;\n  }\n\n  print(buf.substr(0, nextControl));\n  this.dispatch('CC1', buf.substr(nextControl, 1), parseState);\n  parseState.advance(nextControl + 1);\n};\n\n/**\n * Parse a Control Sequence Introducer code and dispatch it.\n *\n * See [CSI] for some useful information about these codes.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.parseCSI_ = function(parseState) {\n  var ch = parseState.peekChar();\n  var args = parseState.args;\n\n  const finishParsing = () => {\n    // Resetting the arguments isn't strictly necessary, but it makes debugging\n    // less confusing (otherwise args will stick around until the next sequence\n    // that needs arguments).\n    parseState.resetArguments();\n    // We need to clear subargs since we explicitly set it.\n    parseState.subargs = null;\n    parseState.resetParseFunction();\n  };\n\n  if (ch >= '@' && ch <= '~') {\n    // This is the final character.\n    this.dispatch('CSI', this.leadingModifier_ + this.trailingModifier_ + ch,\n                  parseState);\n    finishParsing();\n\n  } else if (ch == ';') {\n    // Parameter delimiter.\n    if (this.trailingModifier_) {\n      // Parameter delimiter after the trailing modifier.  That's a paddlin'.\n      finishParsing();\n\n    } else {\n      if (!args.length) {\n        // They omitted the first param, we need to supply it.\n        args.push('');\n      }\n\n      args.push('');\n    }\n\n  } else if (ch >= '0' && ch <= '9' || ch == ':') {\n    // Next byte in the current parameter.\n\n    if (this.trailingModifier_) {\n      // Numeric parameter after the trailing modifier.  That's a paddlin'.\n      finishParsing();\n    } else {\n      if (!args.length) {\n        args[0] = ch;\n      } else {\n        args[args.length - 1] += ch;\n      }\n\n      // Possible sub-parameters.\n      if (ch == ':')\n        parseState.argSetSubargs(args.length - 1);\n    }\n\n  } else if (ch >= ' ' && ch <= '?') {\n    // Modifier character.\n    if (!args.length) {\n      this.leadingModifier_ += ch;\n    } else {\n      this.trailingModifier_ += ch;\n    }\n\n  } else if (this.cc1Pattern_.test(ch)) {\n    // Control character.\n    this.dispatch('CC1', ch, parseState);\n\n  } else {\n    // Unexpected character in sequence, bail out.\n    finishParsing();\n  }\n\n  parseState.advance(1);\n};\n\n/**\n * Skip over the string until the next String Terminator (ST, 'ESC \\') or\n * Bell (BEL, '\\x07').\n *\n * The string is accumulated in parseState.args[0].  Make sure to reset the\n * arguments (with parseState.resetArguments) before starting the parse.\n *\n * You can detect that parsing in complete by checking that the parse\n * function has changed back to the default parse function.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n * @return {boolean} If true, parsing is ongoing or complete.  If false, we've\n *     exceeded the max string sequence.\n */\nhterm.VT.prototype.parseUntilStringTerminator_ = function(parseState) {\n  var buf = parseState.peekRemainingBuf();\n  var args = parseState.args;\n  // Since we might modify parse state buffer locally, if we want to advance\n  // the parse state buffer later on, we need to know how many chars we added.\n  let bufInserted = 0;\n\n  if (!args.length) {\n    args[0] = '';\n    args[1] = new Date();\n  } else {\n    // If our saved buffer ends with an escape, it's because we were hoping\n    // it's an ST split across two buffers.  Move it from our saved buffer\n    // to the start of our current buffer for processing anew.\n    if (args[0].slice(-1) == '\\x1b') {\n      args[0] = args[0].slice(0, -1);\n      buf = '\\x1b' + buf;\n      bufInserted = 1;\n    }\n  }\n\n  const nextTerminator = buf.search(/[\\x1b\\x07]/);\n  const terminator = buf[nextTerminator];\n  let foundTerminator;\n\n  // If the next escape we see is not a start of a ST, fall through.  This will\n  // either be invalid (embedded escape), or we'll queue it up (wait for \\\\).\n  if (terminator == '\\x1b' && buf[nextTerminator + 1] != '\\\\')\n    foundTerminator = false;\n  else\n    foundTerminator = (nextTerminator != -1);\n\n  if (!foundTerminator) {\n    // No terminator here, have to wait for the next string.\n\n    args[0] += buf;\n\n    var abortReason;\n\n    // Special case: If our buffering happens to split the ST (\\e\\\\), we have to\n    // buffer the content temporarily.  So don't reject a trailing escape here,\n    // instead we let it timeout or be rejected in the next pass.\n    if (terminator == '\\x1b' && nextTerminator != buf.length - 1)\n      abortReason = 'embedded escape: ' + nextTerminator;\n\n    if (new Date() - args[1] > this.oscTimeLimit_)\n      abortReason = 'timeout expired: ' + (new Date() - args[1]);\n\n    if (abortReason) {\n      if (this.warnUnimplemented)\n        console.log('parseUntilStringTerminator_: aborting: ' + abortReason,\n                    args[0]);\n      parseState.reset(args[0]);\n      return false;\n    }\n\n    parseState.advance(buf.length - bufInserted);\n    return true;\n  }\n\n  args[0] += buf.substr(0, nextTerminator);\n\n  parseState.resetParseFunction();\n  parseState.advance(nextTerminator +\n                     (terminator == '\\x1b' ? 2 : 1) - bufInserted);\n\n  return true;\n};\n\n/**\n * Dispatch to the function that handles a given CC1, ESC, or CSI or VT52 code.\n *\n * @param {string} type\n * @param {string} code\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.prototype.dispatch = function(type, code, parseState) {\n  var handler = hterm.VT[type][code];\n  if (!handler) {\n    if (this.warnUnimplemented) {\n      console.warn(`Unknown ${type} code: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (handler == hterm.VT.ignore) {\n    if (this.warnUnimplemented) {\n      console.warn(`Ignored ${type} code: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (parseState.subargs && !handler.supportsSubargs) {\n    if (this.warnUnimplemented) {\n      console.warn(`Ignored ${type} code w/subargs: ${JSON.stringify(code)}`);\n    }\n    return;\n  }\n\n  if (type == 'CC1' && code > '\\x7f' && !this.enable8BitControl) {\n    // It's kind of a hack to put this here, but...\n    //\n    // If we're dispatching a 'CC1' code, and it's got the eighth bit set,\n    // but we're not supposed to handle 8-bit codes?  Just ignore it.\n    //\n    // This prevents an errant (DCS, '\\x90'), (OSC, '\\x9d'), (PM, '\\x9e') or\n    // (APC, '\\x9f') from locking up the terminal waiting for its expected\n    // (ST, '\\x9c') or (BEL, '\\x07').\n    console.warn('Ignoring 8-bit control code: 0x' +\n                 code.charCodeAt(0).toString(16));\n    return;\n  }\n\n  handler.apply(this, [parseState, code]);\n};\n\n/**\n * Set one of the ANSI defined terminal mode bits.\n *\n * Invoked in response to SM/RM.\n *\n * Unexpected and unimplemented values are silently ignored.\n *\n * @param {string} code\n * @param {boolean} state\n */\nhterm.VT.prototype.setANSIMode = function(code, state) {\n  if (code == 4) {  // Insert Mode (IRM)\n    this.terminal.setInsertMode(state);\n  } else if (code == 20) {  // Automatic Newline (LNM)\n    this.terminal.setAutoCarriageReturn(state);\n  } else if (this.warnUnimplemented) {\n    console.warn('Unimplemented ANSI Mode: ' + code);\n  }\n};\n\n/**\n * Set or reset one of the DEC Private modes.\n *\n * Invoked in response to DECSET/DECRST.\n *\n * @param {string} code\n * @param {boolean} state\n */\nhterm.VT.prototype.setDECMode = function(code, state) {\n  switch (parseInt(code, 10)) {\n    case 1:  // DECCKM\n      this.terminal.keyboard.applicationCursor = state;\n      break;\n\n    case 3:  // DECCOLM\n      if (this.allowColumnWidthChanges_) {\n        this.terminal.setWidth(state ? 132 : 80);\n\n        this.terminal.clearHome();\n        this.terminal.setVTScrollRegion(null, null);\n      }\n      break;\n\n    case 5:  // DECSCNM\n      this.terminal.setReverseVideo(state);\n      break;\n\n    case 6:  // DECOM\n      this.terminal.setOriginMode(state);\n      break;\n\n    case 7:  // DECAWM\n      this.terminal.setWraparound(state);\n      break;\n\n    case 9:  // Report on mouse down events only (X10).\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_PRESS : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 12:  // Start blinking cursor\n      if (this.enableDec12)\n        this.terminal.setCursorBlink(state);\n      break;\n\n    case 25:  // DECTCEM\n      this.terminal.setCursorVisible(state);\n      break;\n\n    case 30:  // Show scrollbar\n      this.terminal.setScrollbarVisible(state);\n      break;\n\n    case 40:  // Allow 80 - 132 (DECCOLM) Mode\n      this.terminal.allowColumnWidthChanges_ = state;\n      break;\n\n    case 45:  // Reverse-wraparound Mode\n      this.terminal.setReverseWraparound(state);\n      break;\n\n    case 67:  // Backarrow key sends backspace (DECBKM)\n      this.terminal.keyboard.backspaceSendsBackspace = state;\n      break;\n\n    case 1000:  // Report on mouse clicks only (X11).\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_CLICK : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 1002:  // Report on mouse clicks and drags\n      this.mouseReport = (\n          state ? this.MOUSE_REPORT_DRAG : this.MOUSE_REPORT_DISABLED);\n      this.terminal.syncMouseStyle();\n      break;\n\n    case 1004:  // Report on window focus change.\n      this.terminal.reportFocus = state;\n      break;\n\n    case 1005:  // Extended coordinates in UTF-8 mode.\n      this.mouseCoordinates = (\n          state ? this.MOUSE_COORDINATES_UTF8 : this.MOUSE_COORDINATES_X10);\n      break;\n\n    case 1006:  // Extended coordinates in SGR mode.\n      this.mouseCoordinates = (\n          state ? this.MOUSE_COORDINATES_SGR : this.MOUSE_COORDINATES_X10);\n      break;\n\n    case 1007:  // Enable Alternate Scroll Mode.\n      this.terminal.scrollWheelArrowKeys_ = state;\n      break;\n\n    case 1010:  // Scroll to bottom on tty output\n      this.terminal.scrollOnOutput = state;\n      break;\n\n    case 1011:  // Scroll to bottom on key press\n      this.terminal.scrollOnKeystroke = state;\n      break;\n\n    case 1036:  // Send ESC when Meta modifies a key\n      this.terminal.keyboard.metaSendsEscape = state;\n      break;\n\n    case 1039:  // Send ESC when Alt modifies a key\n      if (state) {\n        if (!this.terminal.keyboard.previousAltSendsWhat_) {\n          this.terminal.keyboard.previousAltSendsWhat_ =\n              this.terminal.keyboard.altSendsWhat;\n          this.terminal.keyboard.altSendsWhat = 'escape';\n        }\n      } else if (this.terminal.keyboard.previousAltSendsWhat_) {\n        this.terminal.keyboard.altSendsWhat =\n            this.terminal.keyboard.previousAltSendsWhat_;\n        this.terminal.keyboard.previousAltSendsWhat_ = null;\n      }\n      break;\n\n    case 47:  // Use Alternate Screen Buffer\n    case 1047:\n      this.terminal.setAlternateMode(state);\n      break;\n\n    case 1048:  // Save cursor as in DECSC.\n      if (state)\n        this.terminal.saveCursorAndState();\n      else\n        this.terminal.restoreCursorAndState();\n      break;\n\n    case 1049:  // 1047 + 1048 + clear.\n      if (state) {\n        this.terminal.saveCursorAndState();\n        this.terminal.setAlternateMode(state);\n        this.terminal.clear();\n      } else {\n        this.terminal.setAlternateMode(state);\n        this.terminal.restoreCursorAndState();\n      }\n\n      break;\n\n    case 2004:  // Bracketed paste mode.\n      this.terminal.setBracketedPaste(state);\n      break;\n\n    default:\n      if (this.warnUnimplemented)\n        console.warn('Unimplemented DEC Private Mode: ' + code);\n      break;\n  }\n};\n\n/**\n * Function shared by control characters and escape sequences that are\n * ignored.\n */\nhterm.VT.ignore = function() {};\n\n/**\n * Collection of control characters expressed in a single byte.\n *\n * This includes the characters from the C0 and C1 sets (see [CTRL]) that we\n * care about.  Two byte versions of the C1 codes are defined in the\n * hterm.VT.ESC collection.\n *\n * The 'CC1' mnemonic here refers to the fact that these are one-byte Control\n * Codes.  It's only used in this source file and not defined in any of the\n * referenced documents.\n */\nhterm.VT.CC1 = {};\n\n/**\n * Collection of two-byte and three-byte sequences starting with ESC.\n */\nhterm.VT.ESC = {};\n\n/**\n * Collection of CSI (Control Sequence Introducer) sequences.\n *\n * These sequences begin with 'ESC [', and may take zero or more arguments.\n */\nhterm.VT.CSI = {};\n\n/**\n * Collection of OSC (Operating System Control) sequences.\n *\n * These sequences begin with 'ESC ]', followed by a function number and a\n * string terminated by either ST or BEL.\n */\nhterm.VT.OSC = {};\n\n/**\n * Collection of VT52 sequences.\n *\n * When in VT52 mode, other sequences are disabled.\n */\nhterm.VT.VT52 = {};\n\n/**\n * Null (NUL).\n *\n * Silently ignored.\n */\nhterm.VT.CC1['\\x00'] = hterm.VT.ignore;\n\n/**\n * Enquiry (ENQ).\n *\n * Transmit answerback message.\n *\n * The default answerback message in xterm is an empty string, so we just\n * ignore this.\n */\nhterm.VT.CC1['\\x05'] = hterm.VT.ignore;\n\n/**\n * Ring Bell (BEL).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x07'] = function() {\n  this.terminal.ringBell();\n};\n\n/**\n * Backspace (BS).\n *\n * Move the cursor to the left one character position, unless it is at the\n * left margin, in which case no action occurs.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x08'] = function() {\n  this.terminal.cursorLeft(1);\n};\n\n/**\n * Horizontal Tab (HT).\n *\n * Move the cursor to the next tab stop, or to the right margin if no further\n * tab stops are present on the line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x09'] = function() {\n  this.terminal.forwardTabStop();\n};\n\n/**\n * Line Feed (LF).\n *\n * This code causes a line feed or a new line operation.  See Automatic\n * Newline (LNM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0a'] = function() {\n  this.terminal.formFeed();\n};\n\n/**\n * Vertical Tab (VT).\n *\n * Interpreted as LF.\n */\nhterm.VT.CC1['\\x0b'] = hterm.VT.CC1['\\x0a'];\n\n/**\n * Form Feed (FF).\n *\n * Interpreted as LF.\n */\nhterm.VT.CC1['\\x0c'] = hterm.VT.CC1['\\x0a'];\n\n/**\n * Carriage Return (CR).\n *\n * Move cursor to the left margin on the current line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0d'] = function() {\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Shift Out (SO), aka Lock Shift 0 (LS1).\n *\n * @this {!hterm.VT}\n * Invoke G1 character set in GL.\n */\nhterm.VT.CC1['\\x0e'] = function() {\n  this.GL = 'G1';\n};\n\n/**\n * Shift In (SI), aka Lock Shift 0 (LS0).\n *\n * Invoke G0 character set in GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x0f'] = function() {\n  this.GL = 'G0';\n};\n\n/**\n * Transmit On (XON).\n *\n * Not currently implemented.\n *\n * TODO(rginda): Implement?\n */\nhterm.VT.CC1['\\x11'] = hterm.VT.ignore;\n\n/**\n * Transmit Off (XOFF).\n *\n * Not currently implemented.\n *\n * TODO(rginda): Implement?\n */\nhterm.VT.CC1['\\x13'] = hterm.VT.ignore;\n\n/**\n * Cancel (CAN).\n *\n * If sent during a control sequence, the sequence is immediately terminated\n * and not executed.\n *\n * It also causes the error character to be displayed.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x18'] = function(parseState) {\n  // If we've shifted in the G1 character set, shift it back out to\n  // the default character set.\n  if (this.GL == 'G1') {\n    this.GL = 'G0';\n  }\n  parseState.resetParseFunction();\n  this.terminal.print('?');\n};\n\n/**\n * Substitute (SUB).\n *\n * Interpreted as CAN.\n */\nhterm.VT.CC1['\\x1a'] = hterm.VT.CC1['\\x18'];\n\n/**\n * Escape (ESC).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x1b'] = function(parseState) {\n  function parseESC(parseState) {\n    var ch = parseState.consumeChar();\n\n    if (ch == '\\x1b')\n      return;\n\n    this.dispatch('ESC', ch, parseState);\n\n    if (parseState.func == parseESC)\n      parseState.resetParseFunction();\n  }\n\n  parseState.func = parseESC;\n};\n\n/**\n * Delete (DEL).\n */\nhterm.VT.CC1['\\x7f'] = hterm.VT.ignore;\n\n// 8 bit control characters and their two byte equivalents, below...\n\n/**\n * Index (IND).\n *\n * Like newline, only keep the X position\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x84'] =\nhterm.VT.ESC['D'] = function() {\n  this.terminal.lineFeed();\n};\n\n/**\n * Next Line (NEL).\n *\n * Like newline, but doesn't add lines.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x85'] =\nhterm.VT.ESC['E'] = function() {\n  this.terminal.setCursorColumn(0);\n  this.terminal.cursorDown(1);\n};\n\n/**\n * Horizontal Tabulation Set (HTS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x88'] =\nhterm.VT.ESC['H'] = function() {\n  this.terminal.setTabStop(this.terminal.getCursorColumn());\n};\n\n/**\n * Reverse Index (RI).\n *\n * Move up one line.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x8d'] =\nhterm.VT.ESC['M'] = function() {\n  this.terminal.reverseLineFeed();\n};\n\n/**\n * Single Shift 2 (SS2).\n *\n * Select of G2 Character Set for the next character only.\n *\n * Not currently implemented.\n */\nhterm.VT.CC1['\\x8e'] =\nhterm.VT.ESC['N'] = hterm.VT.ignore;\n\n/**\n * Single Shift 3 (SS3).\n *\n * Select of G3 Character Set for the next character only.\n *\n * Not currently implemented.\n */\nhterm.VT.CC1['\\x8f'] =\nhterm.VT.ESC['O'] = hterm.VT.ignore;\n\n/**\n * Device Control String (DCS).\n *\n * Indicate a DCS sequence.  See Device-Control functions in [XTERM].\n * Not currently implemented.\n *\n * TODO(rginda): Consider implementing DECRQSS, the rest don't seem applicable.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x90'] =\nhterm.VT.ESC['P'] = function(parseState) {\n  parseState.resetArguments();\n  parseState.func = this.parseUntilStringTerminator_;\n};\n\n/**\n * Start of Guarded Area (SPA).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x96'] =\nhterm.VT.ESC['V'] = hterm.VT.ignore;\n\n/**\n * End of Guarded Area (EPA).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x97'] =\nhterm.VT.ESC['W'] = hterm.VT.ignore;\n\n/**\n * Start of String (SOS).\n *\n * Will not implement.\n */\nhterm.VT.CC1['\\x98'] =\nhterm.VT.ESC['X'] = hterm.VT.ignore;\n\n/**\n * Single Character Introducer (SCI, also DECID).\n *\n * Return Terminal ID.  Obsolete form of 'ESC [ c' (DA).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CC1['\\x9a'] =\nhterm.VT.ESC['Z'] = function() {\n  this.terminal.io.sendString('\\x1b[?1;2c');\n};\n\n/**\n * Control Sequence Introducer (CSI).\n *\n * The lead into most escape sequences.  See [CSI].\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9b'] =\nhterm.VT.ESC['['] = function(parseState) {\n  parseState.resetArguments();\n  this.leadingModifier_ = '';\n  this.trailingModifier_ = '';\n  parseState.func = this.parseCSI_;\n};\n\n/**\n * String Terminator (ST).\n *\n * Used to terminate DCS/OSC/PM/APC commands which may take string arguments.\n *\n * We don't directly handle it here, as it's only used to terminate other\n * sequences.  See the 'parseUntilStringTerminator_' method.\n */\nhterm.VT.CC1['\\x9c'] =\nhterm.VT.ESC['\\\\'] = hterm.VT.ignore;\n\n/**\n * Operating System Command (OSC).\n *\n * Commands relating to the operating system.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9d'] =\nhterm.VT.ESC[']'] = function(parseState) {\n  parseState.resetArguments();\n\n  /**\n   * @param {!hterm.VT.ParseState} parseState The current parse state.\n   */\n  function parseOSC(parseState) {\n    if (!this.parseUntilStringTerminator_(parseState)) {\n      // The string sequence was too long.\n      return;\n    }\n\n    if (parseState.func == parseOSC) {\n      // We're not done parsing the string yet.\n      return;\n    }\n\n    // We're done.\n    var ary = parseState.args[0].match(/^(\\d+);?(.*)$/);\n    if (ary) {\n      parseState.args[0] = ary[2];\n      this.dispatch('OSC', ary[1], parseState);\n    } else {\n      console.warn('Invalid OSC: ' + JSON.stringify(parseState.args[0]));\n    }\n\n    // Resetting the arguments isn't strictly necessary, but it makes debugging\n    // less confusing (otherwise args will stick around until the next sequence\n    // that needs arguments).\n    parseState.resetArguments();\n  }\n\n  parseState.func = parseOSC;\n};\n\n/**\n * Privacy Message (PM).\n *\n * Will not implement.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9e'] =\nhterm.VT.ESC['^'] = function(parseState) {\n  parseState.resetArguments();\n  parseState.func = this.parseUntilStringTerminator_;\n};\n\n/**\n * Application Program Control (APC).\n *\n * Will not implement.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CC1['\\x9f'] =\nhterm.VT.ESC['_'] = function(parseState) {\n  parseState.resetArguments();\n  parseState.func = this.parseUntilStringTerminator_;\n};\n\n/**\n * ESC \\x20 - Unclear to me where these originated, possibly in xterm.\n *\n * Not currently implemented:\n *   ESC \\x20 F - Select 7 bit escape codes in responses (S7C1T).\n *   ESC \\x20 G - Select 8 bit escape codes in responses (S8C1T).\n *                NB: We currently assume S7C1T always.\n *\n * Will not implement:\n *   ESC \\x20 L - Set ANSI conformance level 1.\n *   ESC \\x20 M - Set ANSI conformance level 2.\n *   ESC \\x20 N - Set ANSI conformance level 3.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['\\x20'] = function(parseState) {\n  parseState.func = function(parseState) {\n    var ch = parseState.consumeChar();\n    if (this.warnUnimplemented)\n      console.warn('Unimplemented sequence: ESC 0x20 ' + ch);\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * DEC 'ESC #' sequences.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['#'] = function(parseState) {\n  parseState.func = function(parseState) {\n    var ch = parseState.consumeChar();\n    if (ch == '8') {\n      // DEC Screen Alignment Test (DECALN).\n      this.terminal.setCursorPosition(0, 0);\n      this.terminal.fill('E');\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Designate Other Coding System (DOCS).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.ESC['%'] = function(parseState) {\n  parseState.func = function(parseState) {\n    var ch = parseState.consumeChar();\n\n    // If we've locked the encoding, then just eat the bytes and return.\n    if (this.codingSystemLocked_) {\n      if (ch == '/')\n        parseState.consumeChar();\n      parseState.resetParseFunction();\n      return;\n    }\n\n    // Process the encoding requests.\n    switch (ch) {\n      case '@':\n        // Switch to ECMA 35.\n        this.setEncoding('iso-2022');\n        break;\n\n      case 'G':\n        // Switch to UTF-8.\n        this.setEncoding('utf-8');\n        break;\n\n      case '/':\n        // One way transition to something else.\n        ch = parseState.consumeChar();\n        switch (ch) {\n          case 'G':  // UTF-8 Level 1.\n          case 'H':  // UTF-8 Level 2.\n          case 'I':  // UTF-8 Level 3.\n            // We treat all UTF-8 levels the same.\n            this.setEncoding('utf-8-locked');\n            break;\n\n          default:\n            if (this.warnUnimplemented)\n              console.warn('Unknown ESC % / argument: ' + JSON.stringify(ch));\n            break;\n        }\n        break;\n\n      default:\n        if (this.warnUnimplemented)\n          console.warn('Unknown ESC % argument: ' + JSON.stringify(ch));\n        break;\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Character Set Selection (SCS).\n *\n *   ESC ( Ps - Set G0 character set (VT100).\n *   ESC ) Ps - Set G1 character set (VT220).\n *   ESC * Ps - Set G2 character set (VT220).\n *   ESC + Ps - Set G3 character set (VT220).\n *   ESC - Ps - Set G1 character set (VT300).\n *   ESC . Ps - Set G2 character set (VT300).\n *   ESC / Ps - Set G3 character set (VT300).\n *\n * All other sequences are echoed to the terminal.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n * @param {string} code\n */\nhterm.VT.ESC['('] =\nhterm.VT.ESC[')'] =\nhterm.VT.ESC['*'] =\nhterm.VT.ESC['+'] =\nhterm.VT.ESC['-'] =\nhterm.VT.ESC['.'] =\nhterm.VT.ESC['/'] = function(parseState, code) {\n  parseState.func = function(parseState) {\n    var ch = parseState.consumeChar();\n    if (ch == '\\x1b') {\n      parseState.resetParseFunction();\n      parseState.func();\n      return;\n    }\n\n    var map = this.characterMaps.getMap(ch);\n    if (map !== undefined) {\n      if (code == '(') {\n        this.G0 = map;\n      } else if (code == ')' || code == '-') {\n        this.G1 = map;\n      } else if (code == '*' || code == '.') {\n        this.G2 = map;\n      } else if (code == '+' || code == '/') {\n        this.G3 = map;\n      }\n    } else if (this.warnUnimplemented) {\n      console.log('Invalid character set for \"' + code + '\": ' + ch);\n    }\n\n    parseState.resetParseFunction();\n  };\n};\n\n/**\n * Back Index (DECBI).\n *\n * VT420 and up.  Not currently implemented.\n */\nhterm.VT.ESC['6'] = hterm.VT.ignore;\n\n/**\n * Save Cursor (DECSC).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['7'] = function() {\n  this.terminal.saveCursorAndState();\n};\n\n/**\n * Restore Cursor (DECRC).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['8'] = function() {\n  this.terminal.restoreCursorAndState();\n};\n\n/**\n * Forward Index (DECFI).\n *\n * VT210 and up.  Not currently implemented.\n */\nhterm.VT.ESC['9'] = hterm.VT.ignore;\n\n/**\n * Application keypad (DECKPAM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['='] = function() {\n  this.terminal.keyboard.applicationKeypad = true;\n};\n\n/**\n * Normal keypad (DECKPNM).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['>'] = function() {\n  this.terminal.keyboard.applicationKeypad = false;\n};\n\n/**\n * Cursor to lower left corner of screen.\n *\n * Will not implement.\n *\n * This is only recognized by xterm when the hpLowerleftBugCompat resource is\n * set.\n */\nhterm.VT.ESC['F'] = hterm.VT.ignore;\n\n/**\n * Full Reset (RIS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['c'] = function() {\n  this.terminal.reset();\n};\n\n/**\n * Memory lock/unlock.\n *\n * Will not implement.\n */\nhterm.VT.ESC['l'] =\nhterm.VT.ESC['m'] = hterm.VT.ignore;\n\n/**\n * Lock Shift 2 (LS2)\n *\n * Invoke the G2 Character Set as GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['n'] = function() {\n  this.GL = 'G2';\n};\n\n/**\n * Lock Shift 3 (LS3)\n *\n * Invoke the G3 Character Set as GL.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['o'] = function() {\n  this.GL = 'G3';\n};\n\n/**\n * Lock Shift 2, Right (LS3R)\n *\n * Invoke the G3 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['|'] = function() {\n  this.GR = 'G3';\n};\n\n/**\n * Lock Shift 2, Right (LS2R)\n *\n * Invoke the G2 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['}'] = function() {\n  this.GR = 'G2';\n};\n\n/**\n * Lock Shift 1, Right (LS1R)\n *\n * Invoke the G1 Character Set as GR.\n *\n * @this {!hterm.VT}\n */\nhterm.VT.ESC['~'] = function() {\n  this.GR = 'G1';\n};\n\n/**\n * Change icon name and window title.\n *\n * We only change the window title.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['0'] = function(parseState) {\n  this.terminal.setWindowTitle(parseState.args[0]);\n};\n\n/**\n * Change window title.\n */\nhterm.VT.OSC['2'] = hterm.VT.OSC['0'];\n\n/**\n * Set/read color palette.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['4'] = function(parseState) {\n  // Args come in as a single 'index1;rgb1 ... ;indexN;rgbN' string.\n  // We split on the semicolon and iterate through the pairs.\n  var args = parseState.args[0].split(';');\n\n  var pairCount = Math.floor(args.length / 2);\n  var colorPalette = this.terminal.getTextAttributes().colorPalette;\n  var responseArray = [];\n\n  for (var pairNumber = 0; pairNumber < pairCount; ++pairNumber) {\n    var colorIndex = parseInt(args[pairNumber * 2], 10);\n    var colorValue = args[pairNumber * 2 + 1];\n\n    if (colorIndex >= colorPalette.length)\n      continue;\n\n    if (colorValue == '?') {\n      // '?' means we should report back the current color value.\n      colorValue = lib.colors.rgbToX11(colorPalette[colorIndex]);\n      if (colorValue)\n        responseArray.push(colorIndex + ';' + colorValue);\n\n      continue;\n    }\n\n    colorValue = lib.colors.x11ToCSS(colorValue);\n    if (colorValue)\n      colorPalette[colorIndex] = colorValue;\n  }\n\n  if (responseArray.length)\n    this.terminal.io.sendString('\\x1b]4;' + responseArray.join(';') + '\\x07');\n};\n\n/**\n * Hyperlinks.\n *\n * The first argument is optional and colon separated:\n *   id=<id>\n * The second argument is the link itself.\n *\n * Calling with a non-blank URI starts it.  A blank URI stops it.\n *\n * https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['8'] = function(parseState) {\n  const args = parseState.args[0].split(';');\n  let id = null;\n  let uri = null;\n\n  if (args.length != 2 || args[1].length == 0) {\n    // Reset link.\n  } else {\n    // Pull out any colon separated parameters in the first argument.\n    const params = args[0].split(':');\n    id = '';\n    params.forEach((param) => {\n      const idx = param.indexOf('=');\n      if (idx == -1)\n        return;\n\n      const key = param.slice(0, idx);\n      const value = param.slice(idx + 1);\n      switch (key) {\n        case 'id':\n          id = value;\n          break;\n        default:\n          // Ignore unknown keys.\n          break;\n      }\n    });\n\n    // The URI is in the second argument.\n    uri = args[1];\n  }\n\n  const attrs = this.terminal.getTextAttributes();\n  attrs.uri = uri;\n  attrs.uriId = id;\n};\n\n/**\n * iTerm2 growl notifications.\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['9'] = function(parseState) {\n  // This just dumps the entire string as the message.\n  hterm.notify({'body': parseState.args[0]});\n};\n\n/**\n * Change VT100 text foreground color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['10'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  var args = parseState.args[0].split(';');\n  if (!args)\n    return;\n\n  var colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11)\n    this.terminal.setForegroundColor(colorX11);\n\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['11'].apply(this, [parseState]);\n  }\n};\n\n/**\n * Change VT100 text background color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['11'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  var args = parseState.args[0].split(';');\n  if (!args)\n    return;\n\n  var colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11)\n    this.terminal.setBackgroundColor(colorX11);\n\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['12'].apply(this, [parseState]);\n  }\n};\n\n/**\n * Change text cursor color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['12'] = function(parseState) {\n  // Args come in as a single string, but extra args will chain to the following\n  // OSC sequences.\n  var args = parseState.args[0].split(';');\n  if (!args)\n    return;\n\n  var colorX11 = lib.colors.x11ToCSS(args.shift());\n  if (colorX11)\n    this.terminal.setCursorColor(colorX11);\n\n  /* Note: If we support OSC 13+, we'd chain it here.\n  if (args.length > 0) {\n    parseState.args[0] = args.join(';');\n    hterm.VT.OSC['13'].apply(this, [parseState]);\n  }\n  */\n};\n\n/**\n * Set the cursor shape.\n *\n * Parameter is expected to be in the form \"CursorShape=number\", where number is\n * one of:\n *\n *   0 - Block\n *   1 - I-Beam\n *   2 - Underline\n *\n * This is a bit of a de-facto standard supported by iTerm 2 and Konsole.  See\n * also: DECSCUSR.\n *\n * Invalid numbers will restore the cursor to the block shape.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['50'] = function(parseState) {\n  var args = parseState.args[0].match(/CursorShape=(.)/i);\n  if (!args) {\n    console.warn('Could not parse OSC 50 args: ' + parseState.args[0]);\n    return;\n  }\n\n  switch (args[1]) {\n    case '1':  // CursorShape=1: I-Beam.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n      break;\n\n    case '2':  // CursorShape=2: Underline.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n      break;\n\n    default:  // CursorShape=0: Block.\n      this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n  }\n};\n\n/**\n * Set/read system clipboard.\n *\n * Read is not implemented due to security considerations.  A remote app\n * that is able to both write and read to the clipboard could essentially\n * take over your session.\n *\n * The clipboard data will be decoded according to the 'receive-encoding'\n * preference.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['52'] = function(parseState) {\n  if (!this.enableClipboardWrite)\n    return;\n\n  // Args come in as a single 'clipboard;b64-data' string.  The clipboard\n  // parameter is used to select which of the X clipboards to address.  Since\n  // we're not integrating with X, we treat them all the same.\n  var args = parseState.args[0].match(/^[cps01234567]*;(.*)/);\n  if (!args)\n    return;\n\n  let data;\n  try {\n    data = window.atob(args[1]);\n  } catch (e) {\n    // If the user sent us invalid base64 content, silently ignore it.\n    return;\n  }\n  if (this.characterEncoding == 'utf-8') {\n    const decoder = new TextDecoder();\n    const bytes = lib.codec.stringToCodeUnitArray(data);\n    data = decoder.decode(bytes);\n  }\n  if (data)\n    this.terminal.copyStringToClipboard(data);\n};\n\n/**\n * Reset color palette.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['104'] = function(parseState) {\n  const attrs = this.terminal.getTextAttributes();\n\n  // If there are no args, we reset the entire palette.\n  if (!parseState.args[0]) {\n    attrs.resetColorPalette();\n    return;\n  }\n\n  // Args come in as a single 'index1;index2;...;indexN' string.\n  // Split on the semicolon and iterate through the colors.\n  const args = parseState.args[0].split(';');\n  args.forEach((c) => attrs.resetColor(c));\n};\n\n/**\n * Reset foreground color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['110'] = function(parseState) {\n  this.terminal.setForegroundColor();\n};\n\n/**\n * Reset background color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['111'] = function(parseState) {\n  this.terminal.setBackgroundColor();\n};\n\n/**\n * Reset text cursor color.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['112'] = function(parseState) {\n  this.terminal.setCursorColor();\n};\n\n/**\n * iTerm2 extended sequences.\n *\n * We only support image display atm.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['1337'] = function(parseState) {\n  // Args come in as a set of key value pairs followed by data.\n  // File=name=<base64>;size=123;inline=1:<base64 data>\n  let args = parseState.args[0].match(/^File=([^:]*):([\\s\\S]*)$/m);\n  if (!args) {\n    if (this.warnUnimplemented)\n      console.log(`iTerm2 1337: unsupported sequence: ${args[1]}`);\n    return;\n  }\n\n  const options = {\n    name: '',\n    size: 0,\n    preserveAspectRatio: true,\n    inline: false,\n    width: 'auto',\n    height: 'auto',\n    align: 'left',\n    type: '',\n    buffer: lib.codec.stringToCodeUnitArray(atob(args[2])).buffer,\n  };\n  // Walk the \"key=value;\" sets.\n  args[1].split(';').forEach((ele) => {\n    const kv = ele.match(/^([^=]+)=(.*)$/m);\n    if (!kv)\n      return;\n\n    // Sanitize values nicely.\n    switch (kv[1]) {\n      case 'name':\n        try {\n          options.name = window.atob(kv[2]);\n        } catch (e) {}\n        break;\n      case 'size':\n        try {\n          options.size = parseInt(kv[2], 10);\n        } catch (e) {}\n        break;\n      case 'width':\n        options.width = kv[2];\n        break;\n      case 'height':\n        options.height = kv[2];\n        break;\n      case 'preserveAspectRatio':\n        options.preserveAspectRatio = !(kv[2] == '0');\n        break;\n      case 'inline':\n        options.inline = !(kv[2] == '0');\n        break;\n      // hterm-specific keys.\n      case 'align':\n        options.align = kv[2];\n        break;\n      case 'type':\n        options.type = kv[2];\n        break;\n      default:\n        // Ignore unknown keys.  Don't want remote stuffing our JS env.\n        break;\n    }\n  });\n\n  // This is a bit of a hack.  If the buffer has data following the image, we\n  // need to delay processing of it until after we've finished with the image.\n  // Otherwise while we wait for the the image to load asynchronously, the new\n  // text data will intermingle with the image.\n  if (options.inline) {\n    const io = this.terminal.io;\n    const queued = parseState.peekRemainingBuf();\n    parseState.advance(queued.length);\n    this.terminal.displayImage(options);\n    io.print(queued);\n  } else\n    this.terminal.displayImage(options);\n};\n\n/**\n * URxvt perl modules.\n *\n * This is the escape system used by rxvt-unicode and its perl modules.\n * Obviously we don't support perl or custom modules, so we list a few common\n * ones that we find useful.\n *\n * Technically there is no format here, but most modules obey:\n * <module name>;<module args, usually ; delimited>\n *\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.OSC['777'] = function(parseState) {\n  var ary;\n  var urxvtMod = parseState.args[0].split(';', 1)[0];\n\n  switch (urxvtMod) {\n    case 'notify':\n      // Format:\n      // notify;title;message\n      var title, message;\n      ary = parseState.args[0].match(/^[^;]+;([^;]*)(;([\\s\\S]*))?$/);\n      if (ary) {\n        title = ary[1];\n        message = ary[3];\n      }\n      hterm.notify({'title': title, 'body': message});\n      break;\n\n    default:\n      console.warn('Unknown urxvt module: ' + parseState.args[0]);\n      break;\n  }\n};\n\n/**\n * Insert (blank) characters (ICH).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['@'] = function(parseState) {\n  this.terminal.insertSpace(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Up (CUU).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['A'] = function(parseState) {\n  this.terminal.cursorUp(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Down (CUD).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['B'] = function(parseState) {\n  this.terminal.cursorDown(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Forward (CUF).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['C'] = function(parseState) {\n  this.terminal.cursorRight(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Backward (CUB).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['D'] = function(parseState) {\n  this.terminal.cursorLeft(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Next Line (CNL).\n *\n * This is like Cursor Down, except the cursor moves to the beginning of the\n * line as well.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['E'] = function(parseState) {\n  this.terminal.cursorDown(parseState.iarg(0, 1));\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Cursor Preceding Line (CPL).\n *\n * This is like Cursor Up, except the cursor moves to the beginning of the\n * line as well.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['F'] = function(parseState) {\n  this.terminal.cursorUp(parseState.iarg(0, 1));\n  this.terminal.setCursorColumn(0);\n};\n\n/**\n * Cursor Horizontal Absolute (CHA).\n *\n * Xterm calls this Cursor Character Absolute.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['G'] = function(parseState) {\n  this.terminal.setCursorColumn(parseState.iarg(0, 1) - 1);\n};\n\n/**\n * Cursor Position (CUP).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['H'] = function(parseState) {\n  this.terminal.setCursorPosition(parseState.iarg(0, 1) - 1,\n                                  parseState.iarg(1, 1) - 1);\n};\n\n/**\n * Cursor Forward Tabulation (CHT).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['I'] = function(parseState) {\n  var count = parseState.iarg(0, 1);\n  count = lib.f.clamp(count, 1, this.terminal.screenSize.width);\n  for (var i = 0; i < count; i++) {\n    this.terminal.forwardTabStop();\n  }\n};\n\n/**\n * Erase in Display (ED, DECSED).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['J'] =\nhterm.VT.CSI['?J'] = function(parseState) {\n  var arg = parseState.args[0];\n\n  if (!arg || arg == 0) {\n    this.terminal.eraseBelow();\n  } else if (arg == 1) {\n    this.terminal.eraseAbove();\n  } else if (arg == 2) {\n    this.terminal.clear();\n  } else if (arg == 3) {\n    if (this.enableCsiJ3) {\n      this.terminal.clearScrollback();\n    }\n  }\n};\n\n/**\n * Erase in line (EL, DECSEL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['K'] =\nhterm.VT.CSI['?K'] = function(parseState) {\n  var arg = parseState.args[0];\n\n  if (!arg || arg == 0) {\n    this.terminal.eraseToRight();\n  } else if (arg == 1) {\n    this.terminal.eraseToLeft();\n  } else if (arg == 2) {\n    this.terminal.eraseLine();\n  }\n};\n\n/**\n * Insert Lines (IL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['L'] = function(parseState) {\n  this.terminal.insertLines(parseState.iarg(0, 1));\n};\n\n/**\n * Delete Lines (DL).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['M'] = function(parseState) {\n  this.terminal.deleteLines(parseState.iarg(0, 1));\n};\n\n/**\n * Delete Characters (DCH).\n *\n * This command shifts the line contents left, starting at the cursor position.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['P'] = function(parseState) {\n  this.terminal.deleteChars(parseState.iarg(0, 1));\n};\n\n/**\n * Scroll Up (SU).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['S'] = function(parseState) {\n  this.terminal.vtScrollUp(parseState.iarg(0, 1));\n};\n\n/**\n * Scroll Down (SD).\n * Also 'Initiate highlight mouse tracking'.  Will not implement this part.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['T'] = function(parseState) {\n  if (parseState.args.length <= 1)\n    this.terminal.vtScrollDown(parseState.iarg(0, 1));\n};\n\n/**\n * Reset one or more features of the title modes to the default value.\n *\n *   ESC [ > Ps T\n *\n * Normally, \"reset\" disables the feature. It is possible to disable the\n * ability to reset features by compiling a different default for the title\n * modes into xterm.\n *\n * Ps values:\n *   0 - Do not set window/icon labels using hexadecimal.\n *   1 - Do not query window/icon labels using hexadecimal.\n *   2 - Do not set window/icon labels using UTF-8.\n *   3 - Do not query window/icon labels using UTF-8.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>T'] = hterm.VT.ignore;\n\n/**\n * Erase Characters (ECH).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['X'] = function(parseState) {\n  this.terminal.eraseToRight(parseState.iarg(0, 1));\n};\n\n/**\n * Cursor Backward Tabulation (CBT).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['Z'] = function(parseState) {\n  var count = parseState.iarg(0, 1);\n  count = lib.f.clamp(count, 1, this.terminal.screenSize.width);\n  for (var i = 0; i < count; i++) {\n    this.terminal.backwardTabStop();\n  }\n};\n\n/**\n * Character Position Absolute (HPA).\n *\n * Same as Cursor Horizontal Absolute (CHA).\n */\nhterm.VT.CSI['`'] = hterm.VT.CSI['G'];\n\n/**\n * Character Position Relative (HPR).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['a'] = function(parseState) {\n  this.terminal.setCursorColumn(this.terminal.getCursorColumn() +\n                                parseState.iarg(0, 1));\n};\n\n/**\n * Repeat the preceding graphic character.\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['b'] = hterm.VT.ignore;\n\n/**\n * Send Device Attributes (Primary DA).\n *\n * TODO(rginda): This is hardcoded to send back 'VT100 with Advanced Video\n * Option', but it may be more correct to send a VT220 response once\n * we fill out the 'Not currently implemented' parts.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['c'] = function(parseState) {\n  if (!parseState.args[0] || parseState.args[0] == 0) {\n    this.terminal.io.sendString('\\x1b[?1;2c');\n  }\n};\n\n/**\n * Send Device Attributes (Secondary DA).\n *\n * TODO(rginda): This is hardcoded to send back 'VT100' but it may be more\n * correct to send a VT220 response once we fill out more 'Not currently\n * implemented' parts.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['>c'] = function(parseState) {\n  this.terminal.io.sendString('\\x1b[>0;256;0c');\n};\n\n/**\n * Line Position Absolute (VPA).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['d'] = function(parseState) {\n  this.terminal.setAbsoluteCursorRow(parseState.iarg(0, 1) - 1);\n};\n\n/**\n * Horizontal and Vertical Position (HVP).\n *\n * Same as Cursor Position (CUP).\n */\nhterm.VT.CSI['f'] = hterm.VT.CSI['H'];\n\n/**\n * Tab Clear (TBC).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['g'] = function(parseState) {\n  if (!parseState.args[0] || parseState.args[0] == 0) {\n    // Clear tab stop at cursor.\n    this.terminal.clearTabStopAtCursor();\n  } else if (parseState.args[0] == 3) {\n    // Clear all tab stops.\n    this.terminal.clearAllTabStops();\n  }\n};\n\n/**\n * Set Mode (SM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['h'] = function(parseState) {\n  for (var i = 0; i < parseState.args.length; i++) {\n    this.setANSIMode(parseState.args[i], true);\n  }\n};\n\n/**\n * DEC Private Mode Set (DECSET).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['?h'] = function(parseState) {\n  for (var i = 0; i < parseState.args.length; i++) {\n    this.setDECMode(parseState.args[i], true);\n  }\n};\n\n/**\n * Media Copy (MC).\n * Media Copy (MC, DEC Specific).\n *\n * These commands control the printer.  Will not implement.\n */\nhterm.VT.CSI['i'] =\nhterm.VT.CSI['?i'] = hterm.VT.ignore;\n\n/**\n * Reset Mode (RM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['l'] = function(parseState) {\n  for (var i = 0; i < parseState.args.length; i++) {\n    this.setANSIMode(parseState.args[i], false);\n  }\n};\n\n/**\n * DEC Private Mode Reset (DECRST).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current parse state.\n */\nhterm.VT.CSI['?l'] = function(parseState) {\n  for (var i = 0; i < parseState.args.length; i++) {\n    this.setDECMode(parseState.args[i], false);\n  }\n};\n\n/**\n * Parse extended SGR 38/48 sequences.\n *\n * This deals with the various ISO 8613-6 forms, and with legacy xterm forms\n * that are common in the wider application world.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState The current input state.\n * @param {number} i The argument in parseState to start processing.\n * @param {!hterm.TextAttributes} attrs The current text attributes.\n * @return {!Object} The skipCount member defines how many arguments to skip\n *     (i.e. how many were processed), and the color member is the color that\n *     was successfully processed, or undefined if not.\n */\nhterm.VT.prototype.parseSgrExtendedColors = function(parseState, i, attrs) {\n  let ary;\n  let usedSubargs;\n\n  if (parseState.argHasSubargs(i)) {\n    // The ISO 8613-6 compliant form.\n    // e.g. 38:[color choice]:[arg1]:[arg2]:...\n    ary = parseState.args[i].split(':');\n    ary.shift();  // Remove \"38\".\n    usedSubargs = true;\n  } else if (parseState.argHasSubargs(i + 1)) {\n    // The xterm form which isn't ISO 8613-6 compliant.  Not many emulators\n    // support this, and others actively do not want to.  We'll ignore it so\n    // at least the rest of the stream works correctly.  e.g. 38;2:R:G:B\n    // We return 0 here so we only skip the \"38\" ... we can't be confident the\n    // next arg is actually supposed to be part of it vs a typo where the next\n    // arg is legit.\n    return {skipCount: 0};\n  } else {\n    // The xterm form which isn't ISO 8613-6 compliant, but many emulators\n    // support, and many applications rely on.\n    // e.g. 38;2;R;G;B\n    ary = parseState.args.slice(i + 1);\n    usedSubargs = false;\n  }\n\n  // Figure out which form to parse.\n  switch (parseInt(ary[0], 10)) {\n    default:  // Unknown.\n    case 0:  // Implementation defined.  We ignore it.\n      return {skipCount: 0};\n\n    case 1: {  // Transparent color.\n      // Require ISO 8613-6 form.\n      if (!usedSubargs)\n        return {skipCount: 0};\n\n      return {\n        color: 'rgba(0, 0, 0, 0)',\n        skipCount: 0,\n      };\n    }\n\n    case 2: {  // RGB color.\n      // Skip over the color space identifier, if it exists.\n      let start;\n      if (usedSubargs) {\n        // The ISO 8613-6 compliant form:\n        //   38:2:<color space id>:R:G:B[:...]\n        // The xterm form isn't ISO 8613-6 compliant.\n        //   38:2:R:G:B\n        // Since the ISO 8613-6 form requires at least 5 arguments,\n        // we can still support the xterm form unambiguously.\n        if (ary.length == 4)\n          start = 1;\n        else\n          start = 2;\n      } else {\n        // The legacy xterm form: 38;2;R;G;B\n        start = 1;\n      }\n\n      // We need at least 3 args for RGB.  If we don't have them, assume this\n      // sequence is corrupted, so don't eat anything more.\n      // We ignore more than 3 args on purpose since ISO 8613-6 defines some,\n      // and we don't care about them.\n      if (ary.length < start + 3)\n        return {skipCount: 0};\n\n      const r = parseState.parseInt(ary[start + 0]);\n      const g = parseState.parseInt(ary[start + 1]);\n      const b = parseState.parseInt(ary[start + 2]);\n      return {\n        color: `rgb(${r}, ${g}, ${b})`,\n        skipCount: usedSubargs ? 0 : 4,\n      };\n    }\n\n    case 3: {  // CMY color.\n      // No need to support xterm/legacy forms as xterm doesn't support CMY.\n      if (!usedSubargs)\n        return {skipCount: 0};\n\n      // We need at least 4 args for CMY.  If we don't have them, assume\n      // this sequence is corrupted.  We ignore the color space identifier,\n      // tolerance, etc...\n      if (ary.length < 4)\n        return {skipCount: 0};\n\n      // TODO: See CMYK below.\n      // const c = parseState.parseInt(ary[1]);\n      // const m = parseState.parseInt(ary[2]);\n      // const y = parseState.parseInt(ary[3]);\n      return {skipCount: 0};\n    }\n\n    case 4: {  // CMYK color.\n      // No need to support xterm/legacy forms as xterm doesn't support CMYK.\n      if (!usedSubargs)\n        return {skipCount: 0};\n\n      // We need at least 5 args for CMYK.  If we don't have them, assume\n      // this sequence is corrupted.  We ignore the color space identifier,\n      // tolerance, etc...\n      if (ary.length < 5)\n        return {skipCount: 0};\n\n      // TODO: Implement this.\n      // Might wait until CSS4 is adopted for device-cmyk():\n      // https://www.w3.org/TR/css-color-4/#cmyk-colors\n      // Or normalize it to RGB ourselves:\n      // https://www.w3.org/TR/css-color-4/#cmyk-rgb\n      // const c = parseState.parseInt(ary[1]);\n      // const m = parseState.parseInt(ary[2]);\n      // const y = parseState.parseInt(ary[3]);\n      // const k = parseState.parseInt(ary[4]);\n      return {skipCount: 0};\n    }\n\n    case 5: {  // Color palette index.\n      // If we're short on args, assume this sequence is corrupted, so don't\n      // eat anything more.\n      if (ary.length < 2)\n        return {skipCount: 0};\n\n      // Support 38:5:P (ISO 8613-6) and 38;5;P (xterm/legacy).\n      // We also ignore extra args with 38:5:P:[...], but more for laziness.\n      const ret = {\n        skipCount: usedSubargs ? 0 : 2,\n      };\n      const color = parseState.parseInt(ary[1]);\n      if (color < attrs.colorPalette.length)\n        ret.color = color;\n      return ret;\n    }\n  }\n};\n\n/**\n * Character Attributes (SGR).\n *\n * Iterate through the list of arguments, applying the attribute changes based\n * on the argument value...\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['m'] = function(parseState) {\n  var attrs = this.terminal.getTextAttributes();\n\n  if (!parseState.args.length) {\n    attrs.reset();\n    return;\n  }\n\n  for (var i = 0; i < parseState.args.length; i++) {\n    // If this argument has subargs (i.e. it has args followed by colons),\n    // the iarg logic will implicitly truncate that off for us.\n    var arg = parseState.iarg(i, 0);\n\n    if (arg < 30) {\n      if (arg == 0) {  // Normal (default).\n        attrs.reset();\n      } else if (arg == 1) {  // Bold.\n        attrs.bold = true;\n      } else if (arg == 2) {  // Faint.\n        attrs.faint = true;\n      } else if (arg == 3) {  // Italic.\n        attrs.italic = true;\n      } else if (arg == 4) {  // Underline.\n        if (parseState.argHasSubargs(i)) {\n          const uarg = parseState.args[i].split(':')[1];\n          if (uarg == 0)\n            attrs.underline = false;\n          else if (uarg == 1)\n            attrs.underline = 'solid';\n          else if (uarg == 2)\n            attrs.underline = 'double';\n          else if (uarg == 3)\n            attrs.underline = 'wavy';\n          else if (uarg == 4)\n            attrs.underline = 'dotted';\n          else if (uarg == 5)\n            attrs.underline = 'dashed';\n        } else {\n          attrs.underline = 'solid';\n        }\n      } else if (arg == 5) {  // Blink.\n        attrs.blink = true;\n      } else if (arg == 7) {  // Inverse.\n        attrs.inverse = true;\n      } else if (arg == 8) {  // Invisible.\n        attrs.invisible = true;\n      } else if (arg == 9) {  // Crossed out.\n        attrs.strikethrough = true;\n      } else if (arg == 21) {  // Double underlined.\n        attrs.underline = 'double';\n      } else if (arg == 22) {  // Not bold & not faint.\n        attrs.bold = false;\n        attrs.faint = false;\n      } else if (arg == 23) {  // Not italic.\n        attrs.italic = false;\n      } else if (arg == 24) {  // Not underlined.\n        attrs.underline = false;\n      } else if (arg == 25) {  // Not blink.\n        attrs.blink = false;\n      } else if (arg == 27) {  // Steady.\n        attrs.inverse = false;\n      } else if (arg == 28) {  // Visible.\n        attrs.invisible = false;\n      } else if (arg == 29) {  // Not crossed out.\n        attrs.strikethrough = false;\n      }\n\n    } else if (arg < 50) {\n      // Select fore/background color from bottom half of 16 color palette\n      // or from the 256 color palette or alternative specify color in fully\n      // qualified rgb(r, g, b) form.\n      if (arg < 38) {\n        attrs.foregroundSource = arg - 30;\n\n      } else if (arg == 38) {\n        const result = this.parseSgrExtendedColors(parseState, i, attrs);\n        if (result.color !== undefined)\n          attrs.foregroundSource = result.color;\n        i += result.skipCount;\n\n      } else if (arg == 39) {\n        attrs.foregroundSource = attrs.SRC_DEFAULT;\n\n      } else if (arg < 48) {\n        attrs.backgroundSource = arg - 40;\n\n      } else if (arg == 48) {\n        const result = this.parseSgrExtendedColors(parseState, i, attrs);\n        if (result.color !== undefined)\n          attrs.backgroundSource = result.color;\n        i += result.skipCount;\n\n      } else {\n        attrs.backgroundSource = attrs.SRC_DEFAULT;\n      }\n\n    } else if (arg == 58) {  // Underline coloring.\n      const result = this.parseSgrExtendedColors(parseState, i, attrs);\n      if (result.color !== undefined)\n        attrs.underlineSource = result.color;\n      i += result.skipCount;\n\n    } else if (arg == 59) {  // Disable underline coloring.\n      attrs.underlineSource = attrs.SRC_DEFAULT;\n\n    } else if (arg >= 90 && arg <= 97) {\n      attrs.foregroundSource = arg - 90 + 8;\n\n    } else if (arg >= 100 && arg <= 107) {\n      attrs.backgroundSource = arg - 100 + 8;\n    }\n  }\n\n  attrs.setDefaults(this.terminal.getForegroundColor(),\n                    this.terminal.getBackgroundColor());\n};\n\n// SGR calls can handle subargs.\nhterm.VT.CSI['m'].supportsSubargs = true;\n\n/**\n * Set xterm-specific keyboard modes.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>m'] = hterm.VT.ignore;\n\n/**\n * Device Status Report (DSR, DEC Specific).\n *\n * 5 - Status Report. Result (OK) is CSI 0 n\n * 6 - Report Cursor Position (CPR) [row;column]. Result is CSI r ; c R\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['n'] = function(parseState) {\n  if (parseState.args[0] == 5) {\n    this.terminal.io.sendString('\\x1b0n');\n  } else if (parseState.args[0] == 6) {\n    var row = this.terminal.getCursorRow() + 1;\n    var col = this.terminal.getCursorColumn() + 1;\n    this.terminal.io.sendString('\\x1b[' + row + ';' + col + 'R');\n  }\n};\n\n/**\n * Disable modifiers which may be enabled via CSI['>m'].\n *\n * Will not implement.\n */\nhterm.VT.CSI['>n'] = hterm.VT.ignore;\n\n/**\n * Device Status Report (DSR, DEC Specific).\n *\n * 6  - Report Cursor Position (CPR) [row;column] as CSI ? r ; c R\n * 15 - Report Printer status as CSI ? 1 0 n (ready) or\n *      CSI ? 1 1 n (not ready).\n * 25 - Report UDK status as CSI ? 2 0 n (unlocked) or CSI ? 2 1 n (locked).\n * 26 - Report Keyboard status as CSI ? 2 7 ; 1 ; 0 ; 0 n (North American).\n *      The last two parameters apply to VT400 & up, and denote keyboard ready\n *      and LK01 respectively.\n * 53 - Report Locator status as CSI ? 5 3 n Locator available, if compiled-in,\n *      or CSI ? 5 0 n No Locator, if not.\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['?n'] = function(parseState) {\n  if (parseState.args[0] == 6) {\n    var row = this.terminal.getCursorRow() + 1;\n    var col = this.terminal.getCursorColumn() + 1;\n    this.terminal.io.sendString('\\x1b[' + row + ';' + col + 'R');\n  } else if (parseState.args[0] == 15) {\n    this.terminal.io.sendString('\\x1b[?11n');\n  } else if (parseState.args[0] == 25) {\n    this.terminal.io.sendString('\\x1b[?21n');\n  } else if (parseState.args[0] == 26) {\n    this.terminal.io.sendString('\\x1b[?12;1;0;0n');\n  } else if (parseState.args[0] == 53) {\n    this.terminal.io.sendString('\\x1b[?50n');\n  }\n};\n\n/**\n * This is used by xterm to decide whether to hide the pointer cursor as the\n * user types.\n *\n * Valid values for the parameter:\n *   0 - Never hide the pointer.\n *   1 - Hide if the mouse tracking mode is not enabled.\n *   2 - Always hide the pointer.\n *\n * If no parameter is given, xterm uses the default, which is 1.\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['>p'] = hterm.VT.ignore;\n\n/**\n * Soft terminal reset (DECSTR).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['!p'] = function() {\n  this.terminal.softReset();\n};\n\n/**\n * Request ANSI Mode (DECRQM).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['$p'] = hterm.VT.ignore;\nhterm.VT.CSI['?$p'] = hterm.VT.ignore;\n\n/**\n * Set conformance level (DECSCL).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\"p'] = hterm.VT.ignore;\n\n/**\n * Load LEDs (DECLL).\n *\n * Not currently implemented.  Could be implemented as virtual LEDs overlaying\n * the terminal if anyone cares.\n */\nhterm.VT.CSI['q'] = hterm.VT.ignore;\n\n/**\n * Set cursor style (DECSCUSR, VT520).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI[' q'] = function(parseState) {\n  var arg = parseState.args[0];\n\n  if (arg == 0 || arg == 1) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 2) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BLOCK);\n    this.terminal.setCursorBlink(false);\n  } else if (arg == 3) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 4) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.UNDERLINE);\n    this.terminal.setCursorBlink(false);\n  } else if (arg == 5) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n    this.terminal.setCursorBlink(true);\n  } else if (arg == 6) {\n    this.terminal.setCursorShape(hterm.Terminal.cursorShape.BEAM);\n    this.terminal.setCursorBlink(false);\n  } else {\n    console.warn('Unknown cursor style: ' + arg);\n  }\n};\n\n/**\n * Select character protection attribute (DECSCA).\n *\n * Will not implement.\n */\nhterm.VT.CSI['\"q'] = hterm.VT.ignore;\n\n/**\n * Set Scrolling Region (DECSTBM).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['r'] = function(parseState) {\n  var args = parseState.args;\n  var scrollTop = args[0] ? parseInt(args[0], 10) -1 : null;\n  var scrollBottom = args[1] ? parseInt(args[1], 10) - 1 : null;\n  this.terminal.setVTScrollRegion(scrollTop, scrollBottom);\n  this.terminal.setCursorPosition(0, 0);\n};\n\n/**\n * Restore DEC Private Mode Values.\n *\n * Will not implement.\n */\nhterm.VT.CSI['?r'] = hterm.VT.ignore;\n\n/**\n * Change Attributes in Rectangular Area (DECCARA)\n *\n * Will not implement.\n */\nhterm.VT.CSI['$r'] = hterm.VT.ignore;\n\n/**\n * Save cursor (ANSI.SYS)\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['s'] = function() {\n  this.terminal.saveCursorAndState();\n};\n\n/**\n * Save DEC Private Mode Values.\n *\n * Will not implement.\n */\nhterm.VT.CSI['?s'] = hterm.VT.ignore;\n\n/**\n * Window manipulation (from dtterm, as well as extensions).\n *\n * Will not implement.\n */\nhterm.VT.CSI['t'] = hterm.VT.ignore;\n\n/**\n * Reverse Attributes in Rectangular Area (DECRARA).\n *\n * Will not implement.\n */\nhterm.VT.CSI['$t'] = hterm.VT.ignore;\n\n/**\n * Set one or more features of the title modes.\n *\n * Will not implement.\n */\nhterm.VT.CSI['>t'] = hterm.VT.ignore;\n\n/**\n * Set warning-bell volume (DECSWBV, VT520).\n *\n * Will not implement.\n */\nhterm.VT.CSI[' t'] = hterm.VT.ignore;\n\n/**\n * Restore cursor (ANSI.SYS).\n *\n * @this {!hterm.VT}\n */\nhterm.VT.CSI['u'] = function() {\n  this.terminal.restoreCursorAndState();\n};\n\n/**\n * Set margin-bell volume (DECSMBV, VT520).\n *\n * Will not implement.\n */\nhterm.VT.CSI[' u'] = hterm.VT.ignore;\n\n/**\n * Copy Rectangular Area (DECCRA, VT400 and up).\n *\n * Will not implement.\n */\nhterm.VT.CSI['$v'] = hterm.VT.ignore;\n\n/**\n * Enable Filter Rectangle (DECEFR).\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'w'] = hterm.VT.ignore;\n\n/**\n * Request Terminal Parameters (DECREQTPARM).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['x'] = hterm.VT.ignore;\n\n/**\n * Select Attribute Change Extent (DECSACE).\n *\n * Will not implement.\n */\nhterm.VT.CSI['*x'] = hterm.VT.ignore;\n\n/**\n * Fill Rectangular Area (DECFRA), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['$x'] = hterm.VT.ignore;\n\n/**\n * vt_tiledata (as used by NAOhack and UnNetHack)\n * (see https://nethackwiki.com/wiki/Vt_tiledata for more info)\n *\n * Implemented as far as we care (start a glyph and end a glyph).\n *\n * @this {!hterm.VT}\n * @param {!hterm.VT.ParseState} parseState\n */\nhterm.VT.CSI['z'] = function(parseState) {\n  if (parseState.args.length < 1)\n    return;\n  var arg = parseState.args[0];\n  if (arg == 0) {\n    // Start a glyph (one parameter, the glyph number).\n    if (parseState.args.length < 2)\n      return;\n    this.terminal.getTextAttributes().tileData = parseState.args[1];\n  } else if (arg == 1) {\n    // End a glyph.\n    this.terminal.getTextAttributes().tileData = null;\n  }\n};\n\n/**\n * Enable Locator Reporting (DECELR).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'z'] = hterm.VT.ignore;\n\n/**\n * Erase Rectangular Area (DECERA), VT400 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['$z'] = hterm.VT.ignore;\n\n/**\n * Select Locator Events (DECSLE).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'{'] = hterm.VT.ignore;\n\n/**\n * Request Locator Position (DECRQLP).\n *\n * Not currently implemented.\n */\nhterm.VT.CSI['\\'|'] = hterm.VT.ignore;\n\n/**\n * Insert Columns (DECIC), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'}'] = hterm.VT.ignore;\n\n/**\n * Delete P s Columns (DECDC), VT420 and up.\n *\n * Will not implement.\n */\nhterm.VT.CSI['\\'~'] = hterm.VT.ignore;\n// SOURCE FILE: hterm/js/hterm_vt_character_map.js\n// Copyright (c) 2012 The Chromium OS Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Character map object.\n *\n * Mapping from received to display character, used depending on the active\n * VT character set.\n *\n * GR maps are not currently supported.\n *\n * @param {string} description A human readable description of this map.\n * @param {?Object} glmap The GL mapping from input to output characters.\n * @constructor\n */\nhterm.VT.CharacterMap = function(description, glmap) {\n  /**\n   * Short description for this character set, useful for debugging.\n   */\n  this.description = description;\n\n  /**\n   * The function to call to when this map is installed in GL.\n   */\n  this.GL = null;\n\n  // Always keep an unmodified reference to the map.\n  // This allows us to sanely reset back to the original state.\n  this.glmapBase_ = glmap;\n\n  // Now sync the internal state as needed.\n  this.sync_();\n};\n\n/**\n * Internal helper for resyncing internal state.\n *\n * Used when the mappings change.\n *\n * @param {!Object=} opt_glmap Additional mappings to overlay on top of the\n *     base mapping.\n */\nhterm.VT.CharacterMap.prototype.sync_ = function(opt_glmap) {\n  // If there are no maps, then reset the state back.\n  if (!this.glmapBase_ && !opt_glmap) {\n    this.GL = null;\n    delete this.glmap_;\n    delete this.glre_;\n    return;\n  }\n\n  // Set the the GL mapping.  If we're given a custom mapping, then create a\n  // new object to hold the merged map.  This way we can cleanly reset back.\n  if (opt_glmap)\n    this.glmap_ = Object.assign({}, this.glmapBase_, opt_glmap);\n  else\n    this.glmap_ = this.glmapBase_;\n\n  var glchars = Object.keys(lib.notNull(this.glmap_)).map((key) =>\n      '\\\\x' + lib.f.zpad(key.charCodeAt(0).toString(16), 2));\n  this.glre_ = new RegExp('[' + glchars.join('') + ']', 'g');\n\n  this.GL = (str) => str.replace(this.glre_, (ch) => this.glmap_[ch]);\n};\n\n/**\n * Reset map back to original mappings (discarding runtime updates).\n *\n * Specifically, any calls to setOverrides will be discarded.\n */\nhterm.VT.CharacterMap.prototype.reset = function() {\n  // If we haven't been given a custom mapping, then there's nothing to reset.\n  if (this.glmap_ !== this.glmapBase_)\n    this.sync_();\n};\n\n/**\n * Merge custom changes to this map.\n *\n * The input map need not duplicate the existing mappings as it is merged with\n * the existing base map (what was created with).  Subsequent calls to this\n * will throw away previous override settings.\n *\n * @param {!Object} glmap The custom map to override existing mappings.\n */\nhterm.VT.CharacterMap.prototype.setOverrides = function(glmap) {\n  this.sync_(glmap);\n};\n\n/**\n * Return a copy of this mapping.\n *\n * @return {!hterm.VT.CharacterMap} A new hterm.VT.CharacterMap instance.\n */\nhterm.VT.CharacterMap.prototype.clone = function() {\n  var map = new hterm.VT.CharacterMap(this.description, this.glmapBase_);\n  if (this.glmap_ !== this.glmapBase_)\n    map.setOverrides(this.glmap_);\n  return map;\n};\n\n/**\n * Table of character maps.\n *\n * @constructor\n */\nhterm.VT.CharacterMaps = function() {\n  this.maps_ = hterm.VT.CharacterMaps.DefaultMaps;\n\n  // Always keep an unmodified reference to the map.\n  // This allows us to sanely reset back to the original state.\n  this.mapsBase_ = this.maps_;\n};\n\n/**\n * Look up a previously registered map.\n *\n * @param {string} name The name of the map to lookup.\n * @return {!hterm.VT.CharacterMap|undefined} The map, if it's been registered\n *     or undefined.\n */\nhterm.VT.CharacterMaps.prototype.getMap = function(name) {\n  if (this.maps_.hasOwnProperty(name))\n    return this.maps_[name];\n  else\n    return undefined;\n};\n\n/**\n * Register a new map.\n *\n * Any previously registered maps by this name will be discarded.\n *\n * @param {string} name The name of the map.\n * @param {!hterm.VT.CharacterMap} map The map to register.\n */\nhterm.VT.CharacterMaps.prototype.addMap = function(name, map) {\n  if (this.maps_ === this.mapsBase_)\n    this.maps_ = Object.assign({}, this.mapsBase_);\n  this.maps_[name] = map;\n};\n\n/**\n * Reset the table and all its maps back to original state.\n */\nhterm.VT.CharacterMaps.prototype.reset = function() {\n  if (this.maps_ !== hterm.VT.CharacterMaps.DefaultMaps)\n    this.maps_ = hterm.VT.CharacterMaps.DefaultMaps;\n};\n\n/**\n * Merge custom changes to this table.\n *\n * @param {!Object} maps A set of hterm.VT.CharacterMap objects.\n */\nhterm.VT.CharacterMaps.prototype.setOverrides = function(maps) {\n  if (this.maps_ === this.mapsBase_)\n    this.maps_ = Object.assign({}, this.mapsBase_);\n\n  for (var name in maps) {\n    var map = this.getMap(name);\n    if (map !== undefined) {\n      this.maps_[name] = map.clone();\n      this.maps_[name].setOverrides(maps[name]);\n    } else\n      this.addMap(name, new hterm.VT.CharacterMap('user ' + name, maps[name]));\n  }\n};\n\n/**\n * The default set of supported character maps.\n */\nhterm.VT.CharacterMaps.DefaultMaps = {};\n\n/**\n * VT100 Graphic character map.\n * http://vt100.net/docs/vt220-rm/table2-4.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['0'] = new hterm.VT.CharacterMap(\n    'graphic', {\n      '\\x60':'\\u25c6',  // ` -> diamond\n      '\\x61':'\\u2592',  // a -> grey-box\n      '\\x62':'\\u2409',  // b -> h/t\n      '\\x63':'\\u240c',  // c -> f/f\n      '\\x64':'\\u240d',  // d -> c/r\n      '\\x65':'\\u240a',  // e -> l/f\n      '\\x66':'\\u00b0',  // f -> degree\n      '\\x67':'\\u00b1',  // g -> +/-\n      '\\x68':'\\u2424',  // h -> n/l\n      '\\x69':'\\u240b',  // i -> v/t\n      '\\x6a':'\\u2518',  // j -> bottom-right\n      '\\x6b':'\\u2510',  // k -> top-right\n      '\\x6c':'\\u250c',  // l -> top-left\n      '\\x6d':'\\u2514',  // m -> bottom-left\n      '\\x6e':'\\u253c',  // n -> line-cross\n      '\\x6f':'\\u23ba',  // o -> scan1\n      '\\x70':'\\u23bb',  // p -> scan3\n      '\\x71':'\\u2500',  // q -> scan5\n      '\\x72':'\\u23bc',  // r -> scan7\n      '\\x73':'\\u23bd',  // s -> scan9\n      '\\x74':'\\u251c',  // t -> left-tee\n      '\\x75':'\\u2524',  // u -> right-tee\n      '\\x76':'\\u2534',  // v -> bottom-tee\n      '\\x77':'\\u252c',  // w -> top-tee\n      '\\x78':'\\u2502',  // x -> vertical-line\n      '\\x79':'\\u2264',  // y -> less-equal\n      '\\x7a':'\\u2265',  // z -> greater-equal\n      '\\x7b':'\\u03c0',  // { -> pi\n      '\\x7c':'\\u2260',  // | -> not-equal\n      '\\x7d':'\\u00a3',  // } -> british-pound\n      '\\x7e':'\\u00b7',  // ~ -> dot\n    });\n\n/**\n * British character map.\n * http://vt100.net/docs/vt220-rm/table2-5.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['A'] = new hterm.VT.CharacterMap(\n    'british', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n    });\n\n/**\n * US ASCII map, no changes.\n */\nhterm.VT.CharacterMaps.DefaultMaps['B'] = new hterm.VT.CharacterMap(\n    'us', null);\n\n/**\n * Dutch character map.\n * http://vt100.net/docs/vt220-rm/table2-6.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['4'] = new hterm.VT.CharacterMap(\n    'dutch', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00be',  // @ -> 3/4\n\n      '\\x5b': '\\u0132',  // [ -> 'ij' ligature (xterm goes with \\u00ff?)\n      '\\x5c': '\\u00bd',  // \\ -> 1/2\n      '\\x5d': '\\u007c',  // ] -> vertical bar\n\n      '\\x7b': '\\u00a8',  // { -> two dots\n      '\\x7c': '\\u0066',  // | -> f\n      '\\x7d': '\\u00bc',  // } -> 1/4\n      '\\x7e': '\\u00b4',  // ~ -> acute\n    });\n\n/**\n * Finnish character map.\n * http://vt100.net/docs/vt220-rm/table2-7.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['C'] =\nhterm.VT.CharacterMaps.DefaultMaps['5'] = new hterm.VT.CharacterMap(\n    'finnish', {\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ~ -> 'u' umlaut\n\n      '\\x60': '\\u00e9',  // ` -> 'e' acute\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * French character map.\n * http://vt100.net/docs/vt220-rm/table2-8.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['R'] = new hterm.VT.CharacterMap(\n    'french', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00b0',  // [ -> ring\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00a7',  // ] -> section symbol (double s)\n\n      '\\x7b': '\\u00e9',  // { -> 'e' acute\n      '\\x7c': '\\u00f9',  // | -> 'u' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00a8',  // ~ -> umlaut\n    });\n\n/**\n * French Canadian character map.\n * http://vt100.net/docs/vt220-rm/table2-9.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Q'] = new hterm.VT.CharacterMap(\n    'french canadian', {\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00e2',  // [ -> 'a' circumflex\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00ea',  // ] -> 'e' circumflex\n      '\\x5e': '\\u00ee',  // ^ -> 'i' circumflex\n\n      '\\x60': '\\u00f4',  // ` -> 'o' circumflex\n\n      '\\x7b': '\\u00e9',  // { -> 'e' acute\n      '\\x7c': '\\u00f9',  // | -> 'u' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00fb',  // ~ -> 'u' circumflex\n    });\n\n/**\n * German character map.\n * http://vt100.net/docs/vt220-rm/table2-10.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['K'] = new hterm.VT.CharacterMap(\n    'german', {\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00dc',  // ] -> 'U' umlaut\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00fc',  // } -> 'u' umlaut\n      '\\x7e': '\\u00df',  // ~ -> eszett\n    });\n\n/**\n * Italian character map.\n * http://vt100.net/docs/vt220-rm/table2-11.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Y'] = new hterm.VT.CharacterMap(\n    'italian', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00b0',  // [ -> ring\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00e9',  // ] -> 'e' acute\n\n      '\\x60': '\\u00f9',  // ` -> 'u' grave\n\n      '\\x7b': '\\u00e0',  // { -> 'a' grave\n      '\\x7c': '\\u00f2',  // | -> 'o' grave\n      '\\x7d': '\\u00e8',  // } -> 'e' grave\n      '\\x7e': '\\u00ec',  // ~ -> 'i' grave\n    });\n\n/**\n * Norwegian/Danish character map.\n * http://vt100.net/docs/vt220-rm/table2-12.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['E'] =\nhterm.VT.CharacterMaps.DefaultMaps['6'] = new hterm.VT.CharacterMap(\n    'norwegian/danish', {\n      '\\x40': '\\u00c4',  // @ -> 'A' umlaut\n\n      '\\x5b': '\\u00c6',  // [ -> 'AE' ligature\n      '\\x5c': '\\u00d8',  // \\ -> 'O' stroke\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ^ -> 'U' umlaut\n\n      '\\x60': '\\u00e4',  // ` -> 'a' umlaut\n\n      '\\x7b': '\\u00e6',  // { -> 'ae' ligature\n      '\\x7c': '\\u00f8',  // | -> 'o' stroke\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * Spanish character map.\n * http://vt100.net/docs/vt220-rm/table2-13.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['Z'] = new hterm.VT.CharacterMap(\n    'spanish', {\n      '\\x23': '\\u00a3',  // # -> british-pound\n\n      '\\x40': '\\u00a7',  // @ -> section symbol (double s)\n\n      '\\x5b': '\\u00a1',  // [ -> '!' inverted\n      '\\x5c': '\\u00d1',  // \\ -> 'N' tilde\n      '\\x5d': '\\u00bf',  // ] -> '?' inverted\n\n      '\\x7b': '\\u00b0',  // { -> ring\n      '\\x7c': '\\u00f1',  // | -> 'n' tilde\n      '\\x7d': '\\u00e7',  // } -> 'c' cedilla\n    });\n\n/**\n * Swedish character map.\n * http://vt100.net/docs/vt220-rm/table2-14.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['7'] =\nhterm.VT.CharacterMaps.DefaultMaps['H'] = new hterm.VT.CharacterMap(\n    'swedish', {\n      '\\x40': '\\u00c9',  // @ -> 'E' acute\n\n      '\\x5b': '\\u00c4',  // [ -> 'A' umlaut\n      '\\x5c': '\\u00d6',  // \\ -> 'O' umlaut\n      '\\x5d': '\\u00c5',  // ] -> 'A' ring\n      '\\x5e': '\\u00dc',  // ^ -> 'U' umlaut\n\n      '\\x60': '\\u00e9',  // ` -> 'e' acute\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00e5',  // } -> 'a' ring\n      '\\x7e': '\\u00fc',  // ~ -> 'u' umlaut\n    });\n\n/**\n * Swiss character map.\n * http://vt100.net/docs/vt220-rm/table2-15.html\n */\nhterm.VT.CharacterMaps.DefaultMaps['='] = new hterm.VT.CharacterMap(\n    'swiss', {\n      '\\x23': '\\u00f9',  // # -> 'u' grave\n\n      '\\x40': '\\u00e0',  // @ -> 'a' grave\n\n      '\\x5b': '\\u00e9',  // [ -> 'e' acute\n      '\\x5c': '\\u00e7',  // \\ -> 'c' cedilla\n      '\\x5d': '\\u00ea',  // ] -> 'e' circumflex\n      '\\x5e': '\\u00ee',  // ^ -> 'i' circumflex\n      '\\x5f': '\\u00e8',  // _ -> 'e' grave\n\n      '\\x60': '\\u00f4',  // ` -> 'o' circumflex\n\n      '\\x7b': '\\u00e4',  // { -> 'a' umlaut\n      '\\x7c': '\\u00f6',  // | -> 'o' umlaut\n      '\\x7d': '\\u00fc',  // } -> 'u' umlaut\n      '\\x7e': '\\u00fb',  // ~ -> 'u' circumflex\n    });\nlib.resource.add('hterm/audio/bell', 'audio/ogg;base64',\n'T2dnUwACAAAAAAAAAADhqW5KAAAAAMFvEjYBHgF2b3JiaXMAAAAAAYC7AAAAAAAAAHcBAAAAAAC4' +\n'AU9nZ1MAAAAAAAAAAAAA4aluSgEAAAAAesI3EC3//////////////////8kDdm9yYmlzHQAAAFhp' +\n'cGguT3JnIGxpYlZvcmJpcyBJIDIwMDkwNzA5AAAAAAEFdm9yYmlzKUJDVgEACAAAADFMIMWA0JBV' +\n'AAAQAABgJCkOk2ZJKaWUoSh5mJRISSmllMUwiZiUicUYY4wxxhhjjDHGGGOMIDRkFQAABACAKAmO' +\n'o+ZJas45ZxgnjnKgOWlOOKcgB4pR4DkJwvUmY26mtKZrbs4pJQgNWQUAAAIAQEghhRRSSCGFFGKI' +\n'IYYYYoghhxxyyCGnnHIKKqigggoyyCCDTDLppJNOOumoo4466ii00EILLbTSSkwx1VZjrr0GXXxz' +\n'zjnnnHPOOeecc84JQkNWAQAgAAAEQgYZZBBCCCGFFFKIKaaYcgoyyIDQkFUAACAAgAAAAABHkRRJ' +\n'sRTLsRzN0SRP8ixREzXRM0VTVE1VVVVVdV1XdmXXdnXXdn1ZmIVbuH1ZuIVb2IVd94VhGIZhGIZh' +\n'GIZh+H3f933f930gNGQVACABAKAjOZbjKaIiGqLiOaIDhIasAgBkAAAEACAJkiIpkqNJpmZqrmmb' +\n'tmirtm3LsizLsgyEhqwCAAABAAQAAAAAAKBpmqZpmqZpmqZpmqZpmqZpmqZpmmZZlmVZlmVZlmVZ' +\n'lmVZlmVZlmVZlmVZlmVZlmVZlmVZlmVZlmVZQGjIKgBAAgBAx3Ecx3EkRVIkx3IsBwgNWQUAyAAA' +\n'CABAUizFcjRHczTHczzHczxHdETJlEzN9EwPCA1ZBQAAAgAIAAAAAABAMRzFcRzJ0SRPUi3TcjVX' +\n'cz3Xc03XdV1XVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVYHQkFUAAAQAACGdZpZq' +\n'gAgzkGEgNGQVAIAAAAAYoQhDDAgNWQUAAAQAAIih5CCa0JrzzTkOmuWgqRSb08GJVJsnuamYm3PO' +\n'OeecbM4Z45xzzinKmcWgmdCac85JDJqloJnQmnPOeRKbB62p0ppzzhnnnA7GGWGcc85p0poHqdlY' +\n'm3POWdCa5qi5FJtzzomUmye1uVSbc84555xzzjnnnHPOqV6czsE54Zxzzonam2u5CV2cc875ZJzu' +\n'zQnhnHPOOeecc84555xzzglCQ1YBAEAAAARh2BjGnYIgfY4GYhQhpiGTHnSPDpOgMcgppB6NjkZK' +\n'qYNQUhknpXSC0JBVAAAgAACEEFJIIYUUUkghhRRSSCGGGGKIIaeccgoqqKSSiirKKLPMMssss8wy' +\n'y6zDzjrrsMMQQwwxtNJKLDXVVmONteaec645SGultdZaK6WUUkoppSA0ZBUAAAIAQCBkkEEGGYUU' +\n'UkghhphyyimnoIIKCA1ZBQAAAgAIAAAA8CTPER3RER3RER3RER3RER3P8RxREiVREiXRMi1TMz1V' +\n'VFVXdm1Zl3Xbt4Vd2HXf133f141fF4ZlWZZlWZZlWZZlWZZlWZZlCUJDVgEAIAAAAEIIIYQUUkgh' +\n'hZRijDHHnINOQgmB0JBVAAAgAIAAAAAAR3EUx5EcyZEkS7IkTdIszfI0T/M00RNFUTRNUxVd0RV1' +\n'0xZlUzZd0zVl01Vl1XZl2bZlW7d9WbZ93/d93/d93/d93/d939d1IDRkFQAgAQCgIzmSIimSIjmO' +\n'40iSBISGrAIAZAAABACgKI7iOI4jSZIkWZImeZZniZqpmZ7pqaIKhIasAgAAAQAEAAAAAACgaIqn' +\n'mIqniIrniI4oiZZpiZqquaJsyq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7rukBo' +\n'yCoAQAIAQEdyJEdyJEVSJEVyJAcIDVkFAMgAAAgAwDEcQ1Ikx7IsTfM0T/M00RM90TM9VXRFFwgN' +\n'WQUAAAIACAAAAAAAwJAMS7EczdEkUVIt1VI11VItVVQ9VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV' +\n'VVVVVVVVVVVV1TRN0zSB0JCVAAAZAAAjQQYZhBCKcpBCbj1YCDHmJAWhOQahxBiEpxAzDDkNInSQ' +\n'QSc9uJI5wwzz4FIoFURMg40lN44gDcKmXEnlOAhCQ1YEAFEAAIAxyDHEGHLOScmgRM4xCZ2UyDkn' +\n'pZPSSSktlhgzKSWmEmPjnKPSScmklBhLip2kEmOJrQAAgAAHAIAAC6HQkBUBQBQAAGIMUgophZRS' +\n'zinmkFLKMeUcUko5p5xTzjkIHYTKMQadgxAppRxTzinHHITMQeWcg9BBKAAAIMABACDAQig0ZEUA' +\n'ECcA4HAkz5M0SxQlSxNFzxRl1xNN15U0zTQ1UVRVyxNV1VRV2xZNVbYlTRNNTfRUVRNFVRVV05ZN' +\n'VbVtzzRl2VRV3RZV1bZl2xZ+V5Z13zNNWRZV1dZNVbV115Z9X9ZtXZg0zTQ1UVRVTRRV1VRV2zZV' +\n'17Y1UXRVUVVlWVRVWXZlWfdVV9Z9SxRV1VNN2RVVVbZV2fVtVZZ94XRVXVdl2fdVWRZ+W9eF4fZ9' +\n'4RhV1dZN19V1VZZ9YdZlYbd13yhpmmlqoqiqmiiqqqmqtm2qrq1bouiqoqrKsmeqrqzKsq+rrmzr' +\n'miiqrqiqsiyqqiyrsqz7qizrtqiquq3KsrCbrqvrtu8LwyzrunCqrq6rsuz7qizruq3rxnHrujB8' +\n'pinLpqvquqm6um7runHMtm0co6rqvirLwrDKsu/rui+0dSFRVXXdlF3jV2VZ921fd55b94WybTu/' +\n'rfvKceu60vg5z28cubZtHLNuG7+t+8bzKz9hOI6lZ5q2baqqrZuqq+uybivDrOtCUVV9XZVl3zdd' +\n'WRdu3zeOW9eNoqrquirLvrDKsjHcxm8cuzAcXds2jlvXnbKtC31jyPcJz2vbxnH7OuP2daOvDAnH' +\n'jwAAgAEHAIAAE8pAoSErAoA4AQAGIecUUxAqxSB0EFLqIKRUMQYhc05KxRyUUEpqIZTUKsYgVI5J' +\n'yJyTEkpoKZTSUgehpVBKa6GU1lJrsabUYu0gpBZKaS2U0lpqqcbUWowRYxAy56RkzkkJpbQWSmkt' +\n'c05K56CkDkJKpaQUS0otVsxJyaCj0kFIqaQSU0mptVBKa6WkFktKMbYUW24x1hxKaS2kEltJKcYU' +\n'U20txpojxiBkzknJnJMSSmktlNJa5ZiUDkJKmYOSSkqtlZJSzJyT0kFIqYOOSkkptpJKTKGU1kpK' +\n'sYVSWmwx1pxSbDWU0lpJKcaSSmwtxlpbTLV1EFoLpbQWSmmttVZraq3GUEprJaUYS0qxtRZrbjHm' +\n'GkppraQSW0mpxRZbji3GmlNrNabWam4x5hpbbT3WmnNKrdbUUo0txppjbb3VmnvvIKQWSmktlNJi' +\n'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' +\n'm2L/kruPM6Q7oz4tvDQy+bZ3HzOi+gNHA4DZEgA='\n);\n\nlib.resource.add('hterm/images/icon-96', 'image/png;base64',\n'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' +\n'YII='\n);\n\nlib.resource.add('hterm/concat/date', 'text/plain',\n'Tue, 04 Feb 2020 09:08:36 +0000'\n);\n\nlib.resource.add('hterm/changelog/version', 'text/plain',\n'1.87'\n);\n\nlib.resource.add('hterm/changelog/date', 'text/plain',\n'2019-11-28'\n);\n\nlib.resource.add('hterm/git/HEAD', 'text/plain',\n'307bace043a3f3f7069c99b08c4f6a2f8c0ca6eb'\n);\n\n","const params = new URLSearchParams(location.search)\n\nconst ssl = params.get(\"ssl\") === \"true\"\nconst host = params.get(\"host\")\nconst port = +params.get(\"port\")\nconst path = params.get(\"path\")\nexport const fontFamily = ((x) => x == \"\" ? undefined : x)(params.get(\"font-family\"))\nexport const fontSize = +params.get(\"font-size\")\n\nexport const url = `${ssl ? \"wss\" : \"ws\"}://${host}:${port}/${path}`;\n\nexport const rendererType: \"dom\" | \"webgl\" | \"canvas\" = params.get(\"dom\") === \"\"\n  ? \"dom\"\n  : params.get(\"webgl\") === \"\"\n  ? \"webgl\"\n  : \"canvas\"\n\nconst encoder = new TextEncoder()\n\nexport class Connection {\n  ws = new WebSocket(url)\n  constructor(onOpen: (con: Connection) => void,onData: (data: ArrayBuffer) => void, onClose: () => void) {\n    this.ws.binaryType = \"arraybuffer\";\n    this.ws.onerror = () => {\n      alert(`Failed to connect to ${url}`)\n    }\n    this.ws.onclose = () => {\n      onClose()\n      if (confirm(\"connection closed, close the window?\"))\n        window.close()\n    }\n    this.ws.onmessage = ev => {\n      if (ev.data instanceof ArrayBuffer) {\n        onData(ev.data)\n      } else {\n        console.error(\"unknown message: %o\", ev)\n      }\n    }\n    this.ws.onopen = () => {\n      onOpen(this)\n    }\n  }\n\n  resize(cols: number, rows: number) {\n    this.ws.send(JSON.stringify({ resize: { cols, rows } }))\n  }\n\n  send(data: ArrayBuffer) {\n    this.ws.send(data)\n  }\n\n  sendString(data: string) {\n    this.send(encoder.encode(data))\n  }\n}","import { lib, hterm } from \"hterm-esm\"\nimport { Connection, fontFamily, fontSize } from \"./utils\"\n\nlib.init(() => {\n  hterm.defaultStorage = new lib.Storage.Memory()\n\n  const term = new hterm.Terminal()\n  fontFamily && term.getPrefs().set(\"font-family\", fontFamily)\n  term.getPrefs().set(\"font-size\", fontSize)\n  term.decorate(document.querySelector(\"#terminal\"));\n  term.installKeyboard();\n  term.setWindowTitle = (title) => {\n    document.title = `hterm - ${title}`\n  }\n\n  new Connection(con => {\n    const io = term.io.push();\n    io.onVTKeystroke = io.sendString = data => con.sendString(data)\n    io.onTerminalResize = (cols, rows) => con.resize(cols, rows)\n    con.resize(term.screenSize.width, term.screenSize.height)\n  }, data => term.io.writeUTF8(data), () => {\n    term.io.pop()\n  })\n}, str => console.log(str));"]}